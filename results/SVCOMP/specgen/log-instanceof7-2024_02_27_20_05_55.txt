class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                                         ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                                         ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65011712 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid22960.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 37748736 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid22988.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                                         ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65011712 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23043.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 25165824 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23072.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                                         ^
  symbol:   variable as
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 16777216 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23100.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
                                                         ^
  symbol:   variable as
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23128.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid23128.log

class Main {
    //@ ensures \result <==> (!(as[0] instanceof B)) && (as[1] instanceof B);
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 29360128 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23158.log

