class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
        for (int i = 0; i < x; ++i) {
            for (int j = 0; j < y; ++j) {
                int_array[i][j] = i + j;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i is already defined in method f()
        //@ maintaining (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < x; (\forall int j; 0 <= j && j < y; int_array[i1][j] == i1 + j));
        for (int i = 0; i < x; ++i) {
            for (int j = 0; j < y; ++j) {
                int_array[i][j] = i + j;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:16: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                int_array[i][j] = i + j;
                          ^
  Reason: Double rewriting of ident: i i_481_481___22 i_481_497___25
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < x; (\forall int j1; 0 <= j1 && j1 < y; int_array[i1][j1] == i1 + j1));
        for (int i = 0; i < x; ++i) {
            for (int j = 0; j < y; ++j) {
                int_array[i][j] = i + j;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:16: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                int_array[i][j] = i + j;
                          ^
  Reason: Double rewriting of ident: i i_486_486___22 i_486_502___25
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < x; (\forall int j1; 0 <= j1 && j1 < y; int_array[i1][j1] == i1 + j1));
        for (int i1 = 0; i1 < x; ++i1) {
            for (int j1 = 0; j1 < y; ++j1) {
                int_array[i1][j1] = i1 + j1;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i1 is already defined in method f()
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < x; (\forall int j1; 0 <= j1 && j1 < y; int_array[i1][j1] == i1 + j1));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i2; 0 <= i2 && i2 < x; (\forall int j2; 0 <= j2 && j2 < y; int_array[i2][j2] == i2 + j2));
        for (int i2 = 0; i2 < x; ++i2) {
            for (int j2 = 0; j2 < y; ++j2) {
                int_array[i2][j2] = i2 + j2;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i2 is already defined in method f()
        //@ maintaining (\forall int i2; 0 <= i2 && i2 < x; (\forall int j2; 0 <= j2 && j2 < y; int_array[i2][j2] == i2 + j2));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i3; 0 <= i3 && i3 < x; (\forall int j3; 0 <= j3 && j3 < y; int_array[i3][j3] == i3 + j3));
        for (int i3 = 0; i3 < x; ++i3) {
            for (int j3 = 0; j3 < y; ++j3) {
                int_array[i3][j3] = i3 + j3;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i3 is already defined in method f()
        //@ maintaining (\forall int i3; 0 <= i3 && i3 < x; (\forall int j3; 0 <= j3 && j3 < y; int_array[i3][j3] == i3 + j3));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i4; 0 <= i4 && i4 < x; (\forall int j4; 0 <= j4 && j4 < y; int_array[i4][j4] == i4 + j4));
        for (int i4 = 0; i4 < x; ++i4) {
            for (int j4 = 0; j4 < y; ++j4) {
                int_array[i4][j4] = i4 + j4;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i4 is already defined in method f()
        //@ maintaining (\forall int i4; 0 <= i4 && i4 < x; (\forall int j4; 0 <= j4 && j4 < y; int_array[i4][j4] == i4 + j4));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i5; 0 <= i5 && i5 < x; (\forall int j5; 0 <= j5 && j5 < y; int_array[i5][j5] == i5 + j5));
        for (int i5 = 0; i5 < x; ++i5) {
            for (int j5 = 0; j5 < y; ++j5) {
                int_array[i5][j5] = i5 + j5;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i5 is already defined in method f()
        //@ maintaining (\forall int i5; 0 <= i5 && i5 < x; (\forall int j5; 0 <= j5 && j5 < y; int_array[i5][j5] == i5 + j5));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i6; 0 <= i6 && i6 < x; (\forall int j6; 0 <= j6 && j6 < y; int_array[i6][j6] == i6 + j6));
        for (int i6 = 0; i6 < x; ++i6) {
            for (int j6 = 0; j6 < y; ++j6) {
                int_array[i6][j6] = i6 + j6;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i6 is already defined in method f()
        //@ maintaining (\forall int i6; 0 <= i6 && i6 < x; (\forall int j6; 0 <= j6 && j6 < y; int_array[i6][j6] == i6 + j6));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 < i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 < x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\exists int i7; 0 - 1 <= i7 && i7 <= x; (\forall int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 < i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 < x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 < j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 < y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:13: error: variable i7 is already defined in method f()
        //@ maintaining (\forall int i7; 0 - 1 <= i7 && i7 <= x; (\exists int j7; 0 - 1 <= j7 && j7 <= y; int_array[i7][j7] == i7 + j7));  
                                     ^
1 error

class multinewarray {
    //@ ensures \result == true;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];
        //@ assert some_a.length == 4;
        //@ assert some_a[0].length == 3;
        //@ assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

 
        for (int i7 = 0; i7 < x; ++i7) {
            for (int j7 = 0; j7 < y; ++j7) {
                int_array[i7][j7] = i7 + j7;
            }
        }

        return int_array[2][4] == 6;
    }
}

/home/max/Documents/JMLGPT/tmp/multinewarray.java:16: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                int_array[i7][j7] = i7 + j7;
                          ^
  Reason: Double rewriting of ident: i7 i7_360_360___23 i7_360_378___26
1 error

