class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; as[i] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; as[i] instanceof A);
                                                         ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; as[i] instanceof A);
                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; as[i] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; as[i] instanceof A);
                                                            ^
  symbol:   variable as
  location: class Main
1 error

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[i] instanceof A && i == 1 ==> as[i] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[i] instanceof A && i == 1 ==> as[i] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[i] instanceof A && i == 1 ==> as[i] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
  public static boolean f() {
    A[] as = {new A(), new B()};
    if(!(as[0] instanceof A)) return false;
    if (!(as[1] instanceof A))
      return false;
    return true;
  }
}
;

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof6.java:2: error: cannot find symbol
  //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; i == 0 ==> as[0] instanceof A && i == 1 ==> as[1] instanceof A);
                                                                                                        ^
  symbol:   variable as
  location: class Main
2 errors

