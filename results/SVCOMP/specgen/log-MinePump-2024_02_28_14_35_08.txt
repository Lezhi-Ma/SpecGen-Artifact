public class MinePump {

  //@ invariants pumpRunning == false || pumpRunning == true;
  //@ invariants systemActive == false || systemActive == true;
  //@ invariants env != null;

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  //@ requires env != null;
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  //@ ensures pumpRunning ==> env.lowerWaterLevel();
  //@ ensures systemActive ==> processEnvironment();
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  //@ private
  private void processEnvironment__wrappee__base() {}

  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
  //@ ensures !pumpRunning || processEnvironment__wrappee__base();
  public void processEnvironment() {
    if (pumpRunning && isMethaneAlarm()) {
      deactivatePump();
    } else {
      processEnvironment__wrappee__base();
    }
  }

  //@ ensures pumpRunning == true;
  void activatePump() {
    pumpRunning = true;
  }

  //@ ensures \result == pumpRunning;
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  //@ ensures pumpRunning == false;
  void deactivatePump() {
    pumpRunning = false;
  }

  //@ ensures \result == env.isMethaneLevelCritical();
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  //@ ensures \result != null;
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  //@ ensures \result == env;
  public Environment getEnv() {
    return env;
  }

  //@ ensures !pumpRunning;
  //@ ensures !pumpRunning ==> systemActive == false;
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  //@ ensures !pumpRunning;
  //@ ensures !pumpRunning ==> systemActive == true;
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  //@ ensures \result == systemActive;
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:3: error: ';' expected
  //@ invariants pumpRunning == false || pumpRunning == true;
                            ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:3: error: <identifier> expected
  //@ invariants pumpRunning == false || pumpRunning == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
  //@ invariants systemActive == false || systemActive == true;
                             ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
  //@ invariants systemActive == false || systemActive == true;
                                                      ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
  //@ invariants env != null;
                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:27: error: repeated modifier
  private void processEnvironment__wrappee__base() {}
  ^
6 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    private
    ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
    ensures !pumpRunning || processEnvironment__wrappee__base();
  @*/
  private void processEnvironment__wrappee__base() {}

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:34: error: No modifiers are allowed prior to a lightweight specification case
    private
    ^
6 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    private
    ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
    ensures !pumpRunning || processEnvironment__wrappee__base();
  @*/
  private void processEnvironment__wrappee__base() {}

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:34: error: No modifiers are allowed prior to a lightweight specification case
    private
    ^
6 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

public class MinePump {

  /*@
    invariants pumpRunning == false || pumpRunning == true;
    invariants systemActive == false || systemActive == true;
    invariants env != null;
  @*/

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  /*@
    requires env != null;
    ensures this.env == env;
  @*/
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  /*@
    ensures pumpRunning ==> env.lowerWaterLevel();
    ensures systemActive ==> processEnvironment();
  @*/
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  /*@
    ensures pumpRunning == true;
  @*/
  void activatePump() {
    pumpRunning = true;
  }

  /*@
    ensures \result == pumpRunning;
  @*/
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  /*@
    ensures pumpRunning == false;
  @*/
  void deactivatePump() {
    pumpRunning = false;
  }

  /*@
    ensures \result == env.isMethaneLevelCritical();
  @*/
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  /*@
    ensures \result != null;
  @*/
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  /*@
    ensures \result == env;
  @*/
  public Environment getEnv() {
    return env;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == false;
  @*/
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  /*@
    ensures !pumpRunning;
    ensures !pumpRunning ==> systemActive == true;
  @*/
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  /*@
    ensures \result == systemActive;
  @*/
  public boolean isSystemActive() {
    return systemActive;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: ';' expected
    invariants pumpRunning == false || pumpRunning == true;
                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:4: error: <identifier> expected
    invariants pumpRunning == false || pumpRunning == true;
                                                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: ';' expected
    invariants systemActive == false || systemActive == true;
                           ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:5: error: <identifier> expected
    invariants systemActive == false || systemActive == true;
                                                    ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:6: error: ';' expected
    invariants env != null;
                  ^
5 errors

