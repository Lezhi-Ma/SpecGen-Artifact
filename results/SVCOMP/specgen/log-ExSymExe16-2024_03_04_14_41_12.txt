class Main {
  static int field;

  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> field == 9 && x == field - 3;
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> field == 9 && x == field - 3;
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> field != 9 || x != field - 3;
                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                              ^
6 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> field == 9 && x == field - 3;
  //@ ensures !\result ==> field != 9 || x != field - 3;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == 9;
  //@ ensures \result ==> ((z == 0 && \result == false) || (z != 0 && (x == 0 || x != 0)));
  //@ ensures !\result ==> ((z == 0 && \result == true) || (z != 0 && (x == 0 || x != 0)));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe16");
    int y = 3;
    x = z - y;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
  //@ requires x == 3 && z == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
  //@ ensures \result ==> field == 9 && x == field - 3;
                                        ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
  //@ ensures !\result ==> field != 9 || x != field - 3;
                                         ^
  symbol:   variable x
  location: class Main
4 errors

