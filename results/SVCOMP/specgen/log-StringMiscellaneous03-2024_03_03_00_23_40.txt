public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(count));
    //@ ensures !\result ==> (\exists int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int count; 0 <= count && count < s1.length() - i; s1.charAt(count) != s2.charAt(i + count));
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: error: variable count is already defined in method f(String,String)
        //@ maintaining (\forall int count; 0 <= count && count < s1.length() - i; s1.charAt(count) != s2.charAt(i + count));
                                     ^
1 error

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 < j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 < j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 < j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 < j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 - 1 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 - 1 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\forall int j; 0 - 1 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\forall int j; 0 - 1 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 < j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 < j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 < j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 < j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 - 1 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 - 1 <= j && j < s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ maintaining (\exists int j; 0 - 1 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining (\exists int j; 0 - 1 <= j && j <= s1.length() - i; s1.charAt(j) != s2.charAt(i + j));  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 < i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 < i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 < i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 < i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\forall int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\forall int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 < i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 < i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 < i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 < i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result ==> (\exists int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:15:
    //@ ensures \result ==> (\exists int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) != s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 <= i && i <= s1.length();
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 < i && i < s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining 0 < i && i < s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 < i && i <= s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining 0 < i && i <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 < i && i - 1 <= s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining 0 < i && i - 1 <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i < s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining 0 <= i && i < s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 <= i && i <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i - 1 <= s1.length();  
 
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:9: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method f
        //@ decreases s1.length() - i;
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i - 1 <= s1.length();  
 
        //@ decreases s1.length() - i;  
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:9: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method f
        //@ decreases s1.length() - i;  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i - 1 <= s1.length();  
 
        //@ decreases s1.length() + i;  
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:9: verify: The prover cannot establish an assertion (LoopDecreases) in method f
        //@ decreases s1.length() + i;  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i - 1 <= s1.length();  
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 <= i && i - 1 <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 - 1 <= i && i < s1.length();  
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method f
        //@ maintaining 0 - 1 <= i && i < s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 - 1 <= i && i <= s1.length();  
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 - 1 <= i && i <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 - 1 <= i && i - 1 <= s1.length();  
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:7: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 - 1 <= i && i - 1 <= s1.length();  
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 < i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 < i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 < i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 < i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\exists int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\exists int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 < i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 < i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 < i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 < i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 - 1 <= i && i < s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
    //@ ensures !\result ==> (\forall int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:12:
    //@ ensures !\result ==> (\forall int i; 0 - 1 <= i && i <= s1.length(); s1.charAt(i) == s2.charAt(i));  
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
 
 
    public static boolean f(String s1, String s2) {
        int i = 0;
 
 
 
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}


