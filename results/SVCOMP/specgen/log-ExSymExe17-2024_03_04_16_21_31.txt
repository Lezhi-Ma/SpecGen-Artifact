class Main {
  static int field;

  //@ ensures \result ==> field == x - 0 - 4;
  //@ ensures !\result ==> field != x - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires z == x - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> field == x - 0 - 4;
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
  //@ ensures \result ==> field == x - 0 - 4;
                                   ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> field != x - 0 - 4;
                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != x - 0 - 4;
                                    ^
  symbol:   variable x
  location: class Main
4 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ ensures \result ==> field == x - 0 - 4;
  //@ ensures !\result ==> field != x - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires z == x - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
  //@ ensures \result ==> field == x - 0 - 4;
                                   ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: cannot find symbol
  //@ ensures !\result ==> field != x - 0 - 4;
                                    ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;

  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 9437184 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5271.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 13631488 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5299.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5329.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid5329.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 9437184 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5357.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5385.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5413.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5441.log

class Main {
  static /*@ spec_public @*/ int field;

  //@ requires x == 3 && field == 9;
  //@ ensures \result ==> field == 3 - 0 - 4;
  //@ ensures !\result ==> field != 3 - 0 - 4;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }

  //@ requires x == 3 && z == 3 - 0 - 4;
  //@ ensures \result ==> z == 0;
  //@ ensures !\result ==> z != 0;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 10485760 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5469.log

