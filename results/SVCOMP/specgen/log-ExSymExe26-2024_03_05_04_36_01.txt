class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                             ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                                     ^
  symbol:   variable y
  location: class Main
8 errors

class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                             ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                                     ^
  symbol:   variable y
  location: class Main
8 errors

class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                             ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                                     ^
  symbol:   variable y
  location: class Main
8 errors

class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                             ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                                     ^
  symbol:   variable y
  location: class Main
8 errors

class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    int y = 8;
    return inst.test(x, y, x);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                             ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
                                                                                                                                                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result <==> (z > 0 && y > 0);
                                     ^
  symbol:   variable y
  location: class Main
8 errors

class Main {

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public static boolean f(int x, int y, int z) {
    Main inst = new Main();
    return inst.test(x, y, z);
  }

  //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE && Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE && Integer.MIN_VALUE <= z && z <= Integer.MAX_VALUE;
  //@ ensures \result <==> (z > 0 && y > 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
