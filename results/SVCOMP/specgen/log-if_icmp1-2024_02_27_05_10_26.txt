class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1);
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:6: error: incompatible types: boolean cannot be converted to int
    return f(i, i + 1);
            ^
3 errors

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1) ? 1 : 0;
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1) ? 1 : 0;
                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incompatible types: int cannot be converted to boolean
  //@ ensures \result == f(i, i + 1) ? 1 : 0;
                                     ^
2 errors

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:23: error: unreachable statement
    if (j <= i) {
    ^
1 error

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j < i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j < i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j < i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j < i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j - 1 <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j - 1 <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i > j || j - 1 <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i > j || j - 1 <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j < i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j < i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j < i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j < i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j - 1 <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j - 1 <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i >= j || j - 1 <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i >= j || j - 1 <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j < i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j < i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j < i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j < i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j - 1 <= i || j > i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j - 1 <= i || j > i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
  //@ ensures !\result <==> i == j || i + 1 >= j || j - 1 <= i || j >= i;  
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:10:) in method f
      return true;
      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:19:
  //@ ensures !\result <==> i == j || i + 1 >= j || j - 1 <= i || j >= i;  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
 
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:3:) in method fun
    if (i + 1 < 0) return -1;
                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:5:
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);  
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
 
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:3:) in method fun
    if (i + 1 < 0) return -1;
                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:5:
  //@ ensures \result == (f(i, i + 1) ? 1 : 0);  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (f(i, i - 1) ? 1 : 0);  
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
 
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:3:) in method fun
    if (i + 1 < 0) return -1;
                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/if_icmp1.java:5:
  //@ ensures \result == (f(i, i - 1) ? 1 : 0);  
      ^
2 verification failures

class if_icmp1 {
  //@ ensures \result == -1 <==> i + 1 < 0;
 
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }

  //@ ensures \result <==> i != j && i < j;
 
  private static /*@ spec_public @*/ boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }
}


