class A extends RuntimeException {}

class B extends A {}

class C extends B {}

class F {
  //@ ensures \result == \old(\result);
  void foo() {
    try {
      B b = new B();
      throw b;
    } catch (B exc) {
      throw exc;
    }
  }
}

public class exceptions13 {

  //@ ensures \result == \old(\result);
  public static void main(String[] args) {
    try {
      F f = new F();
      f.foo();
    } catch (B exc) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions13.java:8: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == \old(\result);
               ^
/home/max/Documents/JMLGPT/tmp/exceptions13.java:8: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == \old(\result);
                               ^
/home/max/Documents/JMLGPT/tmp/exceptions13.java:8: error: A \result expression is not allowed in an old environment
  //@ ensures \result == \old(\result);
                              ^
/home/max/Documents/JMLGPT/tmp/exceptions13.java:21: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == \old(\result);
               ^
/home/max/Documents/JMLGPT/tmp/exceptions13.java:21: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == \old(\result);
                               ^
/home/max/Documents/JMLGPT/tmp/exceptions13.java:21: error: A \result expression is not allowed in an old environment
  //@ ensures \result == \old(\result);
                              ^
6 errors

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

class F {
  //@ ensures true;
  void foo() {
    try {
      B b = new B();
      throw b;
    } catch (B exc) {
      throw exc;
    }
  }
}

public class exceptions13 {

  //@ ensures true;
  public static void main(String[] args) {
    try {
      F f = new F();
      f.foo();
    } catch (B exc) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions13.java:27: verify: The prover cannot establish an assertion (Assert) in method main
      assert false;
      ^
1 verification failure

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

class F {
  //@ ensures true;
  void foo() {
    try {
      B b = new B();
      throw b;
    } catch (B exc) {
      throw exc;
    }
  }
}

public class exceptions13 {

  //@ ensures true;
  public static void main(String[] args) {
    try {
      F f = new F();
      f.foo();
    } catch (B exc) {
      // assert false;
    }
  }
}

