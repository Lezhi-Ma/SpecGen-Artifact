class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1);
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:34: error: incompatible types: boolean cannot be converted to int
    return f(i, i + 1);
            ^
3 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == \result == f(i, i + 1);
                                    ^
1 error

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (\result == f(i, i + 1));
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\result == f(i, i + 1));
                                     ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == f(i, i + 1));
                                  ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == f(i, i + 1));
                      ^
3 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == \result == (f(i, i + 1) ? 1 : 0);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == \result == (f(i, i + 1) ? 1 : 0);
                                     ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: boolean and int
  //@ ensures \result == \result == (f(i, i + 1) ? 1 : 0);
                                 ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == (f(i, i + 1) ? 1 : 0));
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == (\result == (f(i, i - 1) ? 1 : 0));  
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\result == (f(i, i - 1) ? 1 : 0));  
                                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incomparable types: int and boolean
  //@ ensures \result == (\result == (f(i, i - 1) ? 1 : 0));  
                      ^
2 errors

class if_icmp1 {
  //@ ensures \result == false <==> i == j;
  //@ ensures \result == false <==> i >= j;
  //@ ensures \result == true <==> j > i;
  //@ ensures \result == false <==> j <= i;
  //@ ensures \result == false <==> j < i;
  //@ ensures \result == true <==> j >= i;
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ ensures \result == -1 <==> i + 1 < 0;
 
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: unreachable statement
    if (j <= i) {
    ^
1 error

