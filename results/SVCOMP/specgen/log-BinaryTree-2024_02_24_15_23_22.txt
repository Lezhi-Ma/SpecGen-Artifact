public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == v);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == v);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
2 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == v);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == v);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
2 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists /*@ spec_public @*/ Node n; n != null && n.value == v);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists /*@ spec_public @*/ Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: Expected an identifier, found end of JML comment instead
    //@ ensures (\exists /*@ spec_public @*/ Node n; n != null && n.value == v);
                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: Expected an identifier, found end of JML comment instead
    //@ ensures \result == (\exists /*@ spec_public @*/ Node n; n != null && n.value == v);
                                                     ^
2 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == v);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == v);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
2 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) { // N branches
            if (curr.value == v) { // N-1 branches
                return true;
            } else if (curr.value < v) { // N-1 branches
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) {
            if (curr.value == v) {
                return true;
            } else if (curr.value < v) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\exists Node n; n != null && n.value == \result);
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) {
            if (curr.value == v) {
                return true;
            } else if (curr.value < v) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\exists Node n; n != null && n.value == \result);
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
    //@ ensures (\forall Node n; n != null && n.value == \result);  
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\exists Node n; n != null && n.value == v);  
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) {
            if (curr.value == v) {
                return true;
            } else if (curr.value < v) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}

/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures (\forall Node n; n != null && n.value == \result);  
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\forall Node n; n != null && n.value == \result);  
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists Node n; n != null && n.value == v);  
                                                          ^
3 errors

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
 
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
    //@ ensures \result == (\forall Node n; n != null && n.value == v);  
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) {
            if (curr.value == v) {
                return true;
            } else if (curr.value < v) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}

/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\forall Node n; n != null && n.value == v);  
                                                          ^
1 error

public class BinaryTree {
    /** Internal class representing a Node in the tree. */
    private /*@ spec_public @*/ class Node {
        int value;
        Node left;
        Node right;

        Node(int v, Node l, Node r) {
            value = v;
            left = l;
            right = r;
        }
    }

    private /*@ spec_public @*/ Node root = null;

    /** Inserts a value in to the tree. */
    //@ requires true;
 
    public void insert(int v) {

        if (root == null) {
            root = new Node(v, null, null);
            return;
        }

        Node curr = root;
        while (true) {
            if (curr.value < v) {
                if (curr.right != null) {
                    curr = curr.right;
                } else {
                    curr.right = new Node(v, null, null);
                    break;
                }
            } else if (curr.value > v) {
                if (curr.left != null) {
                    curr = curr.left;
                } else {
                    curr.left = new Node(v, null, null);
                    break;
                }
            } else {
                break;
            }
        }
    }

    /** Searches for a value in the tree. */
    //@ requires true;
 
    public boolean search(int v) {
        Node curr = root;
        while (curr != null) {
            if (curr.value == v) {
                return true;
            } else if (curr.value < v) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        return false;
    }
}

/home/max/Documents/JMLGPT/tmp/BinaryTree.java:15: verify: The prover cannot establish an assertion (NullField) in method BinaryTree
    private /*@ spec_public @*/ Node root = null;
                                     ^
1 verification failure

