class recursion2 {
    //@ ensures \result == 10;
    public static boolean f() {
        return recursion_test(0) == 10;
    }

    //@ ensures 0 <= \result && \result <= 10;
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
    //@ ensures \result == 10;
                        ^
1 error

class recursion2 {
    //@ ensures \result == 10;
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 <= \result && \result <= 10;
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:2:) in method f
        return recursion_test(0);
        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:4:
    //@ ensures \result == 10;
        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 <= \result && \result <= 10;
        ^
4 verification failures

class recursion2 {
    //@ ensures \result == 10;  
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 < \result && \result < 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:2:) in method f
        return recursion_test(0);
        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:4:
    //@ ensures \result == 10;  
        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 < \result && \result < 10;  
        ^
4 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 < \result && \result <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 < \result && \result <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 < \result && \result - 1 <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 < \result && \result - 1 <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 <= \result && \result < 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 <= \result && \result < 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 <= \result && \result <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 <= \result && \result <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 <= \result && \result - 1 <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 <= \result && \result - 1 <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 - 1 <= \result && \result < 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 - 1 <= \result && \result < 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 - 1 <= \result && \result <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 - 1 <= \result && \result <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

    //@ ensures 0 - 1 <= \result && \result - 1 <= 10;  
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}

/home/max/Documents/JMLGPT/tmp/recursion2.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/recursion2.java:7:) in method recursion_test
        if (depth < 10) return recursion_test(depth + 1) + 1;
                        ^
/home/max/Documents/JMLGPT/tmp/recursion2.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/recursion2.java:9:
    //@ ensures 0 - 1 <= \result && \result - 1 <= 10;  
        ^
2 verification failures

class recursion2 {
 
    public static int f() {
        return recursion_test(0);
    }

 
    public static int recursion_test(int depth) {
        if (depth < 10) return recursion_test(depth + 1) + 1;
        else return 0;
    }
}


