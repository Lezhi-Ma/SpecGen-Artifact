class other_class {}
;

class Main {
    //@ ensures \result <==> f(1) != 1 || f(1.0d) != 2 || f(new other_class()) != 3;
    public static boolean f() {
        if(f(1) == 1) return false;
        if(f(1.0d) == 2) return false;
        if (f(new other_class()) == 3) return false;
        return true;
    }

    //@ ensures \result == 1;
    public static int f(int i) {
        return 1;
    }

    //@ ensures \result == 2;
    public static int f(double d) {
        return 2;
    }

    //@ ensures \result == 3;
    public static int f(other_class o) {
        return 3;
    }
}
/home/max/Documents/JMLGPT/tmp/overloading1.java:5: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> f(1) != 1 || f(1.0d) != 2 || f(new other_class()) != 3;
                                                            ^
1 error

class other_class {}
;

class Main {
    //@ ensures \result <==> f_int(1) != 1 || f_double(1.0d) != 2 || f_other(new other_class()) != 3;
    public static boolean f() {
        if(f_int(1) == 1) return false;
        if(f_double(1.0d) == 2) return false;
        if (f_other(new other_class()) == 3) return false;
        return true;
    }

    //@ ensures \result == 1;
    public static int f_int(int i) {
        return 1;
    }

    //@ ensures \result == 2;
    public static int f_double(double d) {
        return 2;
    }

    //@ ensures \result == 3;
    public static int f_other(other_class o) {
        return 3;
    }
}
/home/max/Documents/JMLGPT/tmp/overloading1.java:5: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> f_int(1) != 1 || f_double(1.0d) != 2 || f_other(new other_class()) != 3;
                                                                             ^
1 error

class other_class {}
;

class Main {
    //@ ensures \result <==> f_int(1) != 1 || f_double(1.0d) != 2 || f_other() != 3;
    public static boolean f() {
        if(f_int(1) == 1) return false;
        if(f_double(1.0d) == 2) return false;
        if (f_other() == 3) return false;
        return true;
    }

    //@ ensures \result == 1;
    public static int f_int(int i) {
        return 1;
    }

    //@ ensures \result == 2;
    public static int f_double(double d) {
        return 2;
    }

    //@ ensures \result == 3;
    public static int f_other() {
        return 3;
    }
}

