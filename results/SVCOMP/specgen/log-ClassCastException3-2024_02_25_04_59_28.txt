class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists Exception exc; (exc instanceof ClassCastException));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (Exception exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists Exception exc; (exc instanceof ClassCastException));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getMessage().equals("java.lang.Object cannot be cast to B"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getMessage().equals("java.lang.Object cannot be cast to B"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getClass().getName().equals("java.lang.ClassCastException"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getClass().getName().equals("java.lang.ClassCastException"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getClass().getName().equals("java.lang.ClassCastException"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getMessage().equals("java.lang.Object cannot be cast to B"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getClass().getName().equals("java.lang.ClassCastException"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    } catch (Exception e) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
  //@ ensures \result <==> (\exists ClassCastException exc; exc.getMessage().equals("java.lang.Object cannot be cast to B"));
  public static boolean f() {
    try {
      Object a = new A();
      B b = (B) a;
    } catch (ClassCastException exc) {
      return false;
    } catch (Exception e) {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
      B b = (B) a;
            ^
1 verification failure

