class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        assert b == i;
        short s = (short) i;
        assert s == i;
        char c = (char) i;
        assert c == (0xffff & i);
        long l = (long) i;
        assert l == i;
        float f = (float) i;
        assert f == i;
        double d = (double) i;
        assert d == i;
        f = (float) d;
        assert (float) d == f;
        i = (int) d;
        assert (int) d == i;
        l = (long) d;
        assert i == l;
    }
}
error: An error while executing a proof script for f: (error "expecting an arithmetic subterm")
1 error

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (0xffff & i);
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
error: An error while executing a proof script for f: (error "expecting an arithmetic subterm")
1 error

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

class cast1 {
    //@ requires -128 <= i && i <= 127;
    //@ ensures true;
    public static void f(int i) {
        if (i < -128 || i > 127) return;
        byte b = (byte) i;
        //@ assert b == i;
        short s = (short) i;
        //@ assert s == i;
        char c = (char) i;
        //@ assert c == (char) i;
        long l = (long) i;
        //@ assert l == i;
        float f = (float) i;
        //@ assert f == i;
        double d = (double) i;
        //@ assert d == i;
        f = (float) d;
        //@ assert (float) d == f;
        i = (int) d;
        //@ assert (int) d == i;
        l = (long) d;
        //@ assert i == l;
    }
}
/home/max/Documents/JMLGPT/tmp/cast1.java:10: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        char c = (char) i;
                 ^
1 verification failure

