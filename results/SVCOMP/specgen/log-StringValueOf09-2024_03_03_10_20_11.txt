public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result ==> Double.parseDouble(arg) == 33.3333;
    //@ ensures !\result ==> Double.parseDouble(arg) != 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result ==> Double.parseDouble(arg) == 33.3333;
    //@ ensures !\result ==> Double.parseDouble(arg) != 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
/home/max/Documents/JMLGPT/tmp/StringValueOf09.java:5: verify: Validity is unknown - no model available : (error "Error writing to solver: java.io.IOException: Broken pipe")
    public static boolean f(String arg) {
                          ^
1 verification failure

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Error writing to solver: (assert (= __JML_FeasCheck_ 0)) java.io.IOException: Stream closed")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
/home/max/Documents/JMLGPT/tmp/StringValueOf09.java:5: verify: Validity is unknown - no model available : (error "Error writing to solver: java.io.IOException: Stream closed")
    public static boolean f(String arg) {
                          ^
1 verification failure

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

public class StringValueOf09 {
    //@ requires arg != null;
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)) || arg.charAt(i) == '.' || arg.charAt(i) == '-');
    //@ ensures \result <==> Double.parseDouble(arg) == 33.3333;
    public static boolean f(String arg) {
        double doubleValue = Double.parseDouble(arg); // no suffix, double is default
        String tmp = String.valueOf(doubleValue);
        return tmp.equals("33.3333");
    }
}
error: An error while executing a proof script for f: (error "Solver has unexpectedly terminated")
1 error

