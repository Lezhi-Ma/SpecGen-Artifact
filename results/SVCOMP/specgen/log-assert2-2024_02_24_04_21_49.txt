import java.util.Random;

class assert2 {
    //@ ensures i >= 0;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0;
                ^
  symbol:   variable i
  location: class assert2
1 error

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:8: verify: The prover cannot establish an assertion (Assert) in method main: i is greater 1000
        if (i >= 1000) assert i > 1000 : "i is greater 1000";
                       ^
1 verification failure

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:8: verify: The prover cannot establish an assertion (Assert) in method main: i is greater than 1000
        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
                       ^
1 verification failure

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i >= 1001 : "i is greater than 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:8: verify: The prover cannot establish an assertion (Assert) in method main: i is greater than 1000
        if (i >= 1000) assert i >= 1001 : "i is greater than 1000";
                       ^
1 verification failure

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:8: verify: The prover cannot establish an assertion (Assert) in method main: i is greater than 1000
        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
                       ^
1 verification failure

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:8: verify: The prover cannot establish an assertion (Assert) in method main: i is greater than 1000
        if (i >= 1000) assert i > 1000 : "i is greater than 1000";
                       ^
1 verification failure

import java.util.Random;

class assert2 {
    //@ ensures true; // Random number can be any value, so no specific postcondition for i
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i >= 1000 : "i is greater than or equal to 1000";
    }
}

