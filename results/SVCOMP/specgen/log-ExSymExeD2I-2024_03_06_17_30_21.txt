class Main {
    //@ requires 0.0 <= x && x <= Integer.MAX_VALUE / 2;
    //@ ensures \result == true <==> x > 0;
    public static boolean f (double x) {
        if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ requires true;
    //@ ensures \result == true <==> res > 0;
    public boolean test(double x) {
        int res = (int) ++x;
        if (res > 0) {
            System.out.println("x >0");
        } else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:13: error: cannot find symbol
    //@ ensures \result == true <==> res > 0;
                                     ^
  symbol:   variable res
  location: class Main
1 error

class Main {
    //@ requires 0.0 <= x && x <= Integer.MAX_VALUE / 2;
    //@ ensures \result == true <==> x > 0;
    public static boolean f (double x) {
        if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ requires true;
    //@ ensures \result == true <==> ((int)(x+1)) > 0;
    public boolean test(double x) {
        int res = (int) ++x;
        if (res > 0) {
            System.out.println("x >0");
        } else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3:) in method f
            return inst.test(x);
            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:7:
    //@ ensures \result == true <==> x > 0;
        ^
2 verification failures

class Main {
    //@ requires 0.0 <= x && x <= Integer.MAX_VALUE / 2;
    //@ ensures \result == true <==> x > 0;  
    public static boolean f (double x) {
        if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ requires true;
    //@ ensures \result == true <==> ((int)(x+1)) > 0;
    public boolean test(double x) {
        int res = (int) ++x;
        if (res > 0) {
            System.out.println("x >0");
        } else {
            return false;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3:) in method f
            return inst.test(x);
            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:7:
    //@ ensures \result == true <==> x > 0;  
        ^
2 verification failures

class Main {
    //@ requires 0.0 <= x && x <= Integer.MAX_VALUE / 2;
    //@ ensures \result == true <==> x >= 0;  
    public static boolean f (double x) {
        if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ requires true;
    //@ ensures \result == true <==> ((int)(x+1)) > 0;
    public boolean test(double x) {
        int res = (int) ++x;
        if (res > 0) {
            System.out.println("x >0");
        } else {
            return false;
        }
        return true;
    }
}


