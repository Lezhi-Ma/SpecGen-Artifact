class Main {

  //@ ensures \result ==> test(x, y, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ ensures \result ==> test(x, y, 9);
                               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ ensures \result ==> test(x, y, 9);
                                  ^
  symbol:   variable y
  location: class Main
2 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(x, y, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, 9);
                               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, 9);
                                  ^
  symbol:   variable y
  location: class Main
4 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 5, 9);
                          ^
3 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> inst.test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(3, 5, 9);
                          ^
  symbol:   variable inst
  location: class Main
3 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 5, 9);
                          ^
3 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> inst.test(x, y, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                                       ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                          ^
  symbol:   variable inst
  location: class Main
5 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> inst.test(x, y, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                                       ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: cannot find symbol
  //@ ensures \result ==> inst.test(x, y, 9);
                          ^
  symbol:   variable inst
  location: class Main
5 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 5, 9);
                          ^
3 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 5, 9);
                          ^
3 errors

class Main {

  //@ requires x == 3 && y == 5;
  //@ ensures \result ==> test(3, 5, 9);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z == x ? false : (x == r ? true : true));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 5;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 5, 9);
                          ^
3 errors

