/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/if_acmp1
 * The benchmark was taken from the repo: 24 January 2018
 */
class A {}

class B {}

class if_acmp1 {
  private static B get_B() {
    B b = new B();
    return b;
  }

  //@ ensures a0 == a0;
  //@ ensures a1 == a1;
  //@ ensures a2 == a2;
  //@ ensures a3 == a3;
  //@ ensures a4 == a4;
  //@ ensures a1 != a2;
  //@ ensures a2 != a3;
  //@ ensures a3 != a4;
  //@ ensures a0 != null;
  //@ ensures a5 == null;
  //@ ensures o0 != o1;
  public static void main(String[] args) {
    A a0 = new A();
    A a1 = new A();
    A a2 = new A();
    A a3 = new A();
    A a4 = new A();
    assert a0 == a0;
    assert a1 == a1;
    assert a2 == a2;
    assert a3 == a3;
    assert a4 == a4;
    assert a1 != a2;
    assert a2 != a3;
    assert a3 != a4;
    assert a0 != null;
    A a5 = null;
    assert a5 == null;
    B b = get_B();
    Object o0 = a0;
    Object o1 = b;
    assert o0 != o1;
  }
}
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:19: error: cannot find symbol
  //@ ensures a0 == a0;
              ^
  symbol:   variable a0
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:19: error: cannot find symbol
  //@ ensures a0 == a0;
                    ^
  symbol:   variable a0
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:20: error: cannot find symbol
  //@ ensures a1 == a1;
              ^
  symbol:   variable a1
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:20: error: cannot find symbol
  //@ ensures a1 == a1;
                    ^
  symbol:   variable a1
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:21: error: cannot find symbol
  //@ ensures a2 == a2;
              ^
  symbol:   variable a2
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:21: error: cannot find symbol
  //@ ensures a2 == a2;
                    ^
  symbol:   variable a2
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:22: error: cannot find symbol
  //@ ensures a3 == a3;
              ^
  symbol:   variable a3
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:22: error: cannot find symbol
  //@ ensures a3 == a3;
                    ^
  symbol:   variable a3
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:23: error: cannot find symbol
  //@ ensures a4 == a4;
              ^
  symbol:   variable a4
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:23: error: cannot find symbol
  //@ ensures a4 == a4;
                    ^
  symbol:   variable a4
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:24: error: cannot find symbol
  //@ ensures a1 != a2;
              ^
  symbol:   variable a1
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:24: error: cannot find symbol
  //@ ensures a1 != a2;
                    ^
  symbol:   variable a2
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:25: error: cannot find symbol
  //@ ensures a2 != a3;
              ^
  symbol:   variable a2
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:25: error: cannot find symbol
  //@ ensures a2 != a3;
                    ^
  symbol:   variable a3
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:26: error: cannot find symbol
  //@ ensures a3 != a4;
              ^
  symbol:   variable a3
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:26: error: cannot find symbol
  //@ ensures a3 != a4;
                    ^
  symbol:   variable a4
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:27: error: cannot find symbol
  //@ ensures a0 != null;
              ^
  symbol:   variable a0
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:28: error: cannot find symbol
  //@ ensures a5 == null;
              ^
  symbol:   variable a5
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:29: error: cannot find symbol
  //@ ensures o0 != o1;
              ^
  symbol:   variable o0
  location: class if_acmp1
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:29: error: cannot find symbol
  //@ ensures o0 != o1;
                    ^
  symbol:   variable o1
  location: class if_acmp1
20 errors

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/if_acmp1
 * The benchmark was taken from the repo: 24 January 2018
 */
class A {}

class B {}

class if_acmp1 {
  private static B get_B() {
    B b = new B();
    return b;
  }

  //@ ensures true;
  public static void main(String[] args) {
    A a0 = new A();
    A a1 = new A();
    A a2 = new A();
    A a3 = new A();
    A a4 = new A();
    assert a0 == a0;
    assert a1 == a1;
    assert a2 == a2;
    assert a3 == a3;
    assert a4 == a4;
    assert a1 != a2;
    assert a2 != a3;
    assert a3 != a4;
    assert a0 != null;
    A a5 = null;
    assert a5 == null;
    B b = get_B();
    Object o0 = a0;
    Object o1 = b;
    assert o0 != o1;
  }
}
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:35: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method main: a5
    A a5 = null;
      ^
1 verification failure

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/if_acmp1
 * The benchmark was taken from the repo: 24 January 2018
 */
class A {}

class B {}

class if_acmp1 {
  private static B get_B() {
    B b = new B();
    return b;
  }

  //@ ensures true;
  public static void main(String[] args) {
    A a0 = new A();
    A a1 = new A();
    A a2 = new A();
    A a3 = new A();
    A a4 = new A();
    assert a0 == a0;
    assert a1 == a1;
    assert a2 == a2;
    assert a3 == a3;
    assert a4 == a4;
    assert a1 != a2;
    assert a2 != a3;
    assert a3 != a4;
    assert a0 != null;
    A a5 = null; // a5 is intentionally set to null
    assert a5 == null;
    B b = get_B();
    Object o0 = a0;
    Object o1 = b;
    assert o0 != o1;
  }
}
/home/max/Documents/JMLGPT/tmp/if_acmp1.java:35: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method main: a5
    A a5 = null; // a5 is intentionally set to null
      ^
1 verification failure

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/if_acmp1
 * The benchmark was taken from the repo: 24 January 2018
 */
class A {}

class B {}

class if_acmp1 {
  private static B get_B() {
    B b = new B();
    return b;
  }

  //@ ensures true;
  public static void main(String[] args) {
    A a0 = new A();
    A a1 = new A();
    A a2 = new A();
    A a3 = new A();
    A a4 = new A();
    assert a0 == a0;
    assert a1 == a1;
    assert a2 == a2;
    assert a3 == a3;
    assert a4 == a4;
    assert a1 != a2;
    assert a2 != a3;
    assert a3 != a4;
    assert a0 != null;
    A a5 = new A(); // a5 is initialized with a new instance of A
    assert a5 != null;
    B b = get_B();
    Object o0 = a0;
    Object o1 = b;
    assert o0 != o1;
  }
}

