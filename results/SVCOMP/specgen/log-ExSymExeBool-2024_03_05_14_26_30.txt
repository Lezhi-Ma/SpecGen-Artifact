class Main {

    //@ ensures \result == test(y, x);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
    //@ ensures \result == test(y, x);
                                ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
    //@ ensures \result == test(y, x);
                                   ^
  symbol:   variable x
  location: class Main
2 errors

class Main {

    //@ ensures \result == test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == inst.test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
    //@ ensures \result == inst.test(true, 3);
                           ^
  symbol:   variable inst
  location: class Main
1 error

class Main {

    //@ ensures \result == test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == new Main().test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == new Main().test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == new Main().test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == new Main().test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == new Main().test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == new Main().test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == test(true, 3);
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);
                           ^
1 error

class Main {

    //@ ensures \result == test(true, 3);  
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
    //@ ensures \result == test(true, 3);  
                           ^
1 error

class Main {

 
    public static boolean f() {
        int x = 3;
        boolean y = true;
        Main inst = new Main();
        return inst.test(y, x);
    }

    /*
     * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
     */
    //@ ensures \result == true <==> x;
    //@ ensures \result == false <==> !x;
    public boolean test(boolean x, int z) {
        System.out.println("Testing ExSymExeBool");
        z++;
        if (x) System.out.println("branch FOO1");
        else {
            return false;
        }
        return true;
    }
}


