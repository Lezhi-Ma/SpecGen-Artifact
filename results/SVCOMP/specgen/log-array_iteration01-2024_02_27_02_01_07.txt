public class array_iteration01 {

    //@ requires 0 <= index && index < 200;
    //@ ensures \result == -1;
    public static int f(int index) {
        int[] ia = new int[200];
        if(0 <= index && index < ia.length) return -1;
        ia[index] = Verifier.nondetInt();
	
	//@ maintaining 0 <= i && i <= ia.length;
	//@ maintaining (\forall int j; 0 <= j && j < i; ia[j] != 0);
	//@ decreases ia.length - i;
        for (int i = 0; i < ia.length; i++) {
            if (ia[i] == 0)
                return 0;
        }
        return 1;
    }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:8: error: cannot find symbol
        ia[index] = Verifier.nondetInt();
                    ^
  symbol:   variable Verifier
  location: class array_iteration01
1 error

public class array_iteration01 {

    //@ requires 0 <= index && index < 200;
    //@ ensures \result == -1;
    public static int f(int index) {
        int[] ia = new int[200];
        if(0 <= index && index < ia.length) return -1;
        ia[index] = (int)(Math.random() * Integer.MAX_VALUE);
	
	//@ maintaining 0 <= i && i <= ia.length;
	//@ maintaining (\forall int j; 0 <= j && j < i; ia[j] != 0);
	//@ decreases ia.length - i;
        for (int i = 0; i < ia.length; i++) {
            if (ia[i] == 0)
                return 0;
        }
        return 1;
    }
}

