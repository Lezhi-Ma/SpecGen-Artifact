class Main {

  //@ ensures \result ==> test(a, b, a);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires true;
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                               ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                                  ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                                     ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                                                                                        ^
7 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires true;
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                                                                                        ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires true;
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:12: error: 'void' type not allowed here
  //@ ensures \result ==> System.out.println("Testing ExSymExe25") == null && y == z + 1 && z == z + x && x == x + 3 && (z > 0 ==> System.out.println("branch FOO1") == null) && (z <= 0 ==> System.out.println("branch FOO2") == null) && (x > 0 ==> System.out.println("branch BOO1") == null) && (x <= 0 ==> \result == false);
                                                                                                                                                                                                                                                                        ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> (\result == false));
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> (\result == false));
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> (\result == false));
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> (\result == false));
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> (\result == false));
                                                                                                                                                                                                                                                                                           ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                           ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                           ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                           ^
5 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result ==> (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                           ^
5 errors

class Main {

  //@ ensures \result == test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result == test(3, 8, 3);
                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                          ^
5 errors

class Main {

  //@ ensures \result == test(3, 8, 3);
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result == test(3, 8, 3);
                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);
                                                                                                                                                                                                                                                                                          ^
5 errors

class Main {

  //@ ensures \result == test(3, 8, 3);  
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result == test(3, 8, 3);  
                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
5 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z + 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z + x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x + 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z > 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                          ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z < 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                           ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x < 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                            ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x > 0) ==> (System.out.println("branch BOO1") == null)) && ((x <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                               ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:10: error: 'void' type not allowed here
  //@ ensures \result == (System.out.println("Testing ExSymExe25") == null) && (y == z - 1) && (z == z - x) && (x == x - 3) && ((z >= 0) ==> (System.out.println("branch FOO1") == null)) && ((z - 1 <= 0) ==> (System.out.println("branch FOO2") == null)) && ((x >= 0) ==> (System.out.println("branch BOO1") == null)) && ((x - 1 <= 0) ==> \result == false);  
                                                                                                                                                                                                                                                                                                ^
4 errors

class Main {

 
  public static boolean f() {
    Main inst = new Main();
    return inst.test(3, 8, 3);
  }

  //@ requires true;
 
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}


