class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      assert false;
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      assert false;
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeQuery(String s) {
    if (s.contains("<bad/>")) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:12: verify: The prover cannot establish an assertion (Assert) in method execute
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:32: verify: The prover cannot establish an assertion (Assert) in method executeQuery
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:22: verify: The prover cannot establish an assertion (Assert) in method executeUpdate
      assert false;
      ^
3 verification failures

class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeQuery(String s) {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:32: error: unreported exception SQLException; must be caught or declared to be thrown
      throw new SQLException();
      ^
1 error

class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeQuery(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:11: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:9:) in method execute
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:11:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:31: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:29:) in method executeQuery
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:31:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:21: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:19:) in method executeUpdate
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:21:
  //@ signals_only SQLException;
      ^
6 verification failures

class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeQuery(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:11: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:9:) in method execute
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:11:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:31: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:29:) in method executeQuery
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:31:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:21: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:19:) in method executeUpdate
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:21:
  //@ signals_only SQLException;
      ^
6 verification failures

class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals_only SQLException;
  public void executeQuery(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:11: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:9:) in method execute
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:11:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:31: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:29:) in method executeQuery
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:31:
  //@ signals_only SQLException;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:21: verify: The prover cannot establish an assertion (ExceptionList: /home/max/Documents/JMLGPT/tmp/Statement.java:19:) in method executeUpdate
    if (s.contains("<bad/>")) {
                  ^
/home/max/Documents/JMLGPT/tmp/Statement.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:21:
  //@ signals_only SQLException;
      ^
6 verification failures

class SQLException extends Exception {
}

public class Statement {

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals (SQLException e) false;
  public void execute(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals (SQLException e) false;
  public void executeUpdate(String s, Object... o) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }

  //@ requires s != null;
  //@ requires !s.contains("<bad/>");
  //@ ensures true;
  //@ signals (SQLException e) false;
  public void executeQuery(String s) throws SQLException {
    if (s.contains("<bad/>")) {
      throw new SQLException();
    }
  }
}
/home/max/Documents/JMLGPT/tmp/Statement.java:12: verify: The prover cannot establish an assertion (ExceptionalPostcondition: /home/max/Documents/JMLGPT/tmp/Statement.java:9:) in method execute
      throw new SQLException();
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:12:
  //@ signals (SQLException e) false;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:32: verify: The prover cannot establish an assertion (ExceptionalPostcondition: /home/max/Documents/JMLGPT/tmp/Statement.java:29:) in method executeQuery
      throw new SQLException();
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:32:
  //@ signals (SQLException e) false;
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:22: verify: The prover cannot establish an assertion (ExceptionalPostcondition: /home/max/Documents/JMLGPT/tmp/Statement.java:19:) in method executeUpdate
      throw new SQLException();
      ^
/home/max/Documents/JMLGPT/tmp/Statement.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Statement.java:22:
  //@ signals (SQLException e) false;
      ^
6 verification failures

