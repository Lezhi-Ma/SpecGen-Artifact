class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        z = x - y - 4;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        z = x - y - 4;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 92274688 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5127.log

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 57671680 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5156.log

class Main {
    static int field;

    //@ ensures \result == (z == x - 0 - 4);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ ensures \result == (z == x - 0 - 4);
    //@ ensures z == x - 0 - 4 ==> \result == false;
    //@ ensures z != x - 0 - 4 ==> \result == true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe17");
        int y = 0;
        int tempZ = x - y - 4;
        if (tempZ == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
            if (y == 0) System.out.println("branch BOO1");
            else
                System.out.println("branch BOO2");
            return true;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:4: error: cannot find symbol
    //@ ensures \result == (z == x - 0 - 4);
                                 ^
  symbol:   variable x
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid5184.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid5184.log

