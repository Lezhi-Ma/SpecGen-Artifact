class Main {
    //@ requires arg == 0 ==> \result == this.f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a, b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a, b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == this.f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static variable this cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == this.f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a, b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                          ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable b is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a, b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                             ^
4 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:4: error: <identifier> expected
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                            ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:4: error: Expected a semicolon to separate the parts of a JML quantified expression
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:4: error: illegal start of type
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: <identifier> expected
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                            ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: Expected a semicolon to separate the parts of a JML quantified expression
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: illegal start of type
    //@ ensures !\result ==> (\forall int a, int b; (\forall Integer i; i == null || i.intValue() != 4); a < 5);
                                                                                                             ^
6 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
                                          ^
3 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
                                          ^
3 errors

class Main {
    //@ requires arg == 0 ==> \result == this.f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == this.f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static variable this cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == this.f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
                                          ^
3 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
                                          ^
3 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:13: error: variable a is already defined in method f(int,int)
    //@ ensures !\result ==> (\forall int a; a < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
                                          ^
3 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
2 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
2 errors

class Main {
    //@ requires arg == 0 ==> \result == f(0, arg);
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a == 0 && b == 0;
    //@ ensures \result ==> (\exists Integer i; i != null && i.intValue() == 4);
    //@ ensures !\result ==> (\forall int x; x < 5 ==> (\exists Integer i; i != null && i.intValue() == 4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: A \result expression may not be in a requires clause
    //@ requires arg == 0 ==> \result == f(0, arg);
                               ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:2: error: non-static method f(int,int) cannot be referenced from a static context
    //@ requires arg == 0 ==> \result == f(0, arg);
                                         ^
2 errors

