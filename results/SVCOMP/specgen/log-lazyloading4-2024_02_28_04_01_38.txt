class Problem {
  private static final Object[] DEFAULT = {};
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == Problem().checkInvariant();
  public static boolean f() {
    return Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:5: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures data == DEFAULT;
              ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:5: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures data == DEFAULT;
                      ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:10: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures \result == (data != null);
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: cannot find symbol
  //@ ensures \result == Problem().checkInvariant();
                         ^
  symbol:   method Problem()
  location: class lazyloading4
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: cannot find symbol
    return Problem().checkInvariant();
           ^
  symbol:   method Problem()
  location: class lazyloading4
5 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == new Problem().checkInvariant();
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == new Problem().checkInvariant();
                         ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == new Problem().checkInvariant();
                                      ^
2 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (\new Problem()).checkInvariant();
  public static boolean f() {
    return (\new Problem()).checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: This backslash token is unknown: \new
  //@ ensures \result == (\new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: illegal character: '\'
    return (\new Problem()).checkInvariant();
            ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: ';' expected
    return (\new Problem()).checkInvariant();
                          ^
3 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (new Problem()).checkInvariant();
  public static boolean f() {
    return (new Problem()).checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (new Problem()).checkInvariant();
                                        ^
2 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (new Problem()).checkInvariant();
  public static boolean f() {
    Problem p = new Problem();
    return p.checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (new Problem()).checkInvariant();
                                        ^
2 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (new Problem()).checkInvariant();
  public static boolean f() {
    Problem p = new Problem();
    return p.checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (new Problem()).checkInvariant();
                                        ^
2 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (new Problem()).checkInvariant();
  public static boolean f() {
    Problem p = new Problem();
    return p.checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (new Problem()).checkInvariant();
                                        ^
2 errors

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (Problem.DEFAULT != null);
  public static boolean f() {
    return Problem.DEFAULT != null;
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: DEFAULT has private access in Problem
    return Problem.DEFAULT != null;
                  ^
1 error

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }

  //@ ensures \result == (DEFAULT != null);
  static boolean checkDefaultNotNull() {
    return DEFAULT != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == Problem.checkDefaultNotNull();
  public static boolean f() {
    return Problem.checkDefaultNotNull();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == Problem.checkDefaultNotNull();
                                ^
1 error

class Problem {
  private static final /*@ spec_public @*/ Object[] DEFAULT = {};
  private /*@ spec_public @*/ Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == (data != null);
  boolean checkInvariant() {
    return data != null;
  }

  //@ ensures \result == (DEFAULT != null);
  static /*@ spec_public @*/ boolean checkDefaultNotNull() {
    return DEFAULT != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == Problem.checkDefaultNotNull();
  public static boolean f() {
    return Problem.checkDefaultNotNull();
  }
}

