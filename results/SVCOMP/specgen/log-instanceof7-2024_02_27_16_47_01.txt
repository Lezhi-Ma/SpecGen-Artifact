class Main {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < as.length; !(as[i] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < as.length; !(as[i] instanceof B));
                                                          ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < as.length; !(as[i] instanceof B));
                                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:3: error: cannot find symbol
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
                               ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:3: error: cannot find symbol
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
                                                        ^
  symbol:   variable as
  location: class Main
4 errors

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
                               ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
                                                       ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:3: error: cannot find symbol
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
                               ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:3: error: cannot find symbol
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
                                                        ^
  symbol:   variable as
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20848.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid20848.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 31457280 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20877.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20906.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid20906.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20936.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid20936.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20967.log
#
# Compiler replay data is saved as:
# /home/max/Documents/JMLGPT/replay_pid20967.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 8388608 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid20997.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid21027.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid21056.log

class Main {
    //@ ensures \result ==> (!(as[0] instanceof B) && (as[1] instanceof B));
    //@ ensures !\result ==> ((as[0] instanceof B) && !(as[1] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid21085.log

