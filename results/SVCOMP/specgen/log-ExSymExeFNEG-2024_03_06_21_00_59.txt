class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> y <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:13: error: cannot find symbol
  //@ ensures \result <==> y <= 0;
                           ^
  symbol:   variable y
  location: class Main
2 errors

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> inst.test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> y <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: cannot find symbol
  //@ ensures \result <==> inst.test(x);
                           ^
  symbol:   variable inst
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:13: error: cannot find symbol
  //@ ensures \result <==> y <= 0;
                           ^
  symbol:   variable y
  location: class Main
2 errors

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> new Main().test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: Object allocation is not permitted in specification expressions
  //@ ensures \result <==> new Main().test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> new Main().test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: Object allocation is not permitted in specification expressions
  //@ ensures \result <==> new Main().test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> new Main().test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: Object allocation is not permitted in specification expressions
  //@ ensures \result <==> new Main().test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);
                           ^
1 error

class Main {

  //@ requires x >= 0;
  //@ ensures \result <==> test(x);  
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeFNEG.java:4: error: non-static method test(float) cannot be referenced from a static context
  //@ ensures \result <==> test(x);  
                           ^
1 error

class Main {

  //@ requires x >= 0;
 
  //@ ensures !\result ==> true;
  public static boolean f(float x) {
    Main inst = new Main();
    if (x >= 0)
      return inst.test(x);
    return true;
  }

  //@ ensures \result <==> -x <= 0;
  //@ ensures !\result ==> true;
  public boolean test(float x) {
    System.out.println("Testing FNEG");
    float y = -x;
    if (y > 0) {
      return false;
    } else
      System.out.println("branch -x <= 0");
    return true;
  }
}


