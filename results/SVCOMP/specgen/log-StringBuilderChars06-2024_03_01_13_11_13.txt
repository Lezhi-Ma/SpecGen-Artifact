public class StringBuilderChars06 {
    //@ requires arg != null;
    //@ ensures \result ==> buffer.toString().equals("detimiL eTlBffiiH");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.reverse();
        return buffer.toString().equals("detimiL eTlBffiiH");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: cannot find symbol
    //@ ensures \result ==> buffer.toString().equals("detimiL eTlBffiiH");
                            ^
  symbol:   variable buffer
  location: class StringBuilderChars06
1 error

public class StringBuilderChars06 {
    //@ requires arg != null;
    //@ ensures \result ==> \old(new StringBuilder(arg).reverse().toString()).equals("detimiL eTlBffiiH");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.reverse();
        return buffer.toString().equals("detimiL eTlBffiiH");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> \old(new StringBuilder(arg).reverse().toString()).equals("detimiL eTlBffiiH");
                                 ^
1 error

public class StringBuilderChars06 {
    //@ requires arg != null;
    //@ ensures \result ==> new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.reverse();
        return buffer.toString().equals("detimiL eTlBffiiH");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                            ^
1 error

public class StringBuilderChars06 {
    //@ requires arg != null;
    //@ ensures \result ==> arg.equals("HiBfflTe Limited");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.reverse();
        return buffer.toString().equals("HiBfflTe Limited");
    }
}
