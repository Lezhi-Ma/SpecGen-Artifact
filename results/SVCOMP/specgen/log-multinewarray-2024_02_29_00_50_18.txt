class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) 
      for (int j = 0; j < y; ++j) 
        int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

class multinewarray {
  //@ ensures \result == true;
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ maintaining 0 <= i && i <= x;
    //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < y; int_array[k][j] == k + j));
    //@ decreases x - i;
    for (int i = 0; i < x; ++i) {
      for (int j = 0; j < y; ++j) {
        int_array[i][j] = i + j;
      }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
        int_array[i][j] = i + j;
                  ^
  Reason: Double rewriting of ident: i i_488_488___22 i_488_504___28
1 error

