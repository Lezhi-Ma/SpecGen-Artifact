import java.util.Random;

class assert5 {
    //@ ensures i > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: cannot find symbol
    //@ ensures i > 1000;
                ^
  symbol:   variable i
  location: class assert5
1 error

import java.util.Random;

class assert5 {
    //@ ensures \result > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures \result > 1000;
                 ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures i > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: cannot find symbol
    //@ ensures i > 1000;
                ^
  symbol:   variable i
  location: class assert5
1 error

import java.util.Random;

class assert5 {
    //@ ensures new Random().nextInt() > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures new Random().nextInt() > 1000;
                ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures \result > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures \result > 1000;
                 ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures i > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: cannot find symbol
    //@ ensures i > 1000;
                ^
  symbol:   variable i
  location: class assert5
1 error

import java.util.Random;

class assert5 {
    //@ ensures new Random().nextInt() > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures new Random().nextInt() > 1000;
                ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures \result > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures \result > 1000;
                 ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures i > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: cannot find symbol
    //@ ensures i > 1000;
                ^
  symbol:   variable i
  location: class assert5
1 error

import java.util.Random;

class assert5 {
    //@ ensures new Random().nextInt() > 1000;
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}
/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures new Random().nextInt() > 1000;
                ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures new Random().nextInt() > 1000;  
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}

/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures new Random().nextInt() > 1000;  
                ^
1 error

import java.util.Random;

class assert5 {
    //@ ensures new Random().nextInt() >= 1000;  
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}

/home/max/Documents/JMLGPT/tmp/assert5.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures new Random().nextInt() >= 1000;  
                ^
1 error

import java.util.Random;

class assert5 {
 
    public static void func() {
        int i = new Random().nextInt();

        if (i > 1000) assert i > 1000 : "i is greater 1000"; // should hold
    }
}


