class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: non-static method test(int) cannot be referenced from a static context
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));
                                                                                ^
1 error

class Main {
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));  
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeI2F.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == true <==> (x != 3 && x != 0) || (x == 3 || x == 0 && new Main().test(x));  
                                                                                ^
1 error

class Main {
 
    public static boolean f(int x) {
        if (x != 3 && x != 0)
            return true;

        Main inst = new Main();
        return inst.test(x);
    }

    //@ requires x == 3 || x == 0;
    //@ ensures \result == true <==> x > 0;
    public boolean test(int x) {
        float res = (float) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}

