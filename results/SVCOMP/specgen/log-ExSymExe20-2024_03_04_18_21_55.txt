class Main {
  static int field;
  static int field2;

  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                         ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                            ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                                 ^
  symbol:   variable r
  location: class Main
6 errors

class Main {
  static int field;
  static int field2;

  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                         ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                            ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                                 ^
  symbol:   variable r
  location: class Main
6 errors

class Main {
  static int field;
  static int field2;

  //@ ensures \result ==> (field >= x && x < field2);
  //@ ensures !\result ==> (x >= field2);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> (field >= x && x < field2);
                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= x && x < field2);
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= x && x < field2);
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> (field >= x && x < field2);
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= field2);
                            ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> (x >= field2);
                                 ^
6 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ ensures \result ==> (field >= x && x < field2);
  //@ ensures !\result ==> (x >= field2);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= x && x < field2);
                                    ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= x && x < field2);
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= field2);
                            ^
  symbol:   variable x
  location: class Main
3 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ ensures \result ==> (field >= z && z < r);
  //@ ensures !\result ==> (z >= r);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= z && z < r);
                                    ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= z && z < r);
                                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (field >= z && z < r);
                                             ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (z >= r);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (z >= r);
                                 ^
  symbol:   variable r
  location: class Main
5 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                         ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                            ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                                 ^
  symbol:   variable r
  location: class Main
6 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ ensures \result ==> (z >= x && x < r);
                                         ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                            ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ ensures !\result ==> (x >= r);
                                 ^
  symbol:   variable r
  location: class Main
6 errors

class Main {
  static /*@ spec_public @*/ int x;
  static /*@ spec_public @*/ int z;
  static /*@ spec_public @*/ int r;

  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public static boolean main() {
    Main inst = new Main();
    x = 3;
    r = 9;
    return inst.test(x, z, r);
  }

  //@ requires true;
  //@ ensures \result ==> (z >= x && x < r);
  //@ ensures !\result ==> (x >= r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
