class if_icmp1 {
    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> i == i + 1 || i >= i + 1 || i <= i + 1 || i < i + 1;
    //@ ensures \result == true ==> i < i + 1;
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                                                                 ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:29: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
                                  ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:32: error: incompatible types: boolean cannot be converted to int
        return f(i, i + 1);
                ^
5 errors

class if_icmp1 {
    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: variable j is already defined in method f(int,int)
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                                                  ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                                                                 ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:29: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
                                  ^
6 errors

class if_icmp1 {
    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: variable j is already defined in method f(int,int)
    //@ ensures \result == false ==> (\exists int j; j == i + 1; f(i, j) == false);
                                                  ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                                                                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:29: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1) == true;
                                  ^
6 errors

class if_icmp1 {
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                                       ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: int and boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                                       ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                                                                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:21: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1);
                                  ^
7 errors

class if_icmp1 {
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                                       ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: int and boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == (i + 1 < 0) ? -1 : 1;
                                       ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                                                                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:21: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1);
                                  ^
7 errors

class if_icmp1 {
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static int fun(int i) {
        if ((i + 1) < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: int and boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                                                                   ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:21: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result != -1 ==> f(i, i + 1);
                                  ^
7 errors

class if_icmp1 {
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static /*@ spec_public @*/ boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static int fun(int i) {
        if ((i + 1) < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: int and boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incompatible types: int cannot be converted to boolean
    //@ ensures \result == ((i + 1) < 0) ? -1 : 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: incomparable types: int and boolean
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
5 errors

class if_icmp1 {
    //@ ensures \result == -1 || \result == 1;
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static /*@ spec_public @*/ boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == -1 || \result == 1;
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static int fun(int i) {
        if ((i + 1) < 0) return -1;
        return f(i, i + 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
4 errors

class if_icmp1 {
    //@ ensures \result == -1 || \result == 1;
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    private static /*@ spec_public @*/ boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == -1 || \result == 1;
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != -1 ==> f(i, i + 1);
    public static boolean fun(int i) {
        if ((i + 1) < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:2: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:4: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:19: error: incomparable types: boolean and int
    //@ ensures \result == -1 || \result == 1;
                                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:20: error: incomparable types: boolean and int
    //@ ensures \result == -1 ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:21: error: incomparable types: boolean and int
    //@ ensures \result != -1 ==> f(i, i + 1);
                        ^
8 errors

class if_icmp1 {
    //@ ensures \result == false || \result == true;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != false ==> f(i, i + 1);
    private static /*@ spec_public @*/ boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == false || \result == true;
    //@ ensures \result == false ==> (\exists int jj; jj == i + 1; f(i, jj) == false);
    //@ ensures \result != false ==> f(i, i + 1);
    public static boolean fun(int i) {
        if ((i + 1) < 0) return false;
        return f(i, i + 1);
    }
}
