public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> ia[i] == \old(ia[i]));
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = Verifier.nondetInt();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
      ;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> ia[i] == \old(ia[i]));
                                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> ia[i] == \old(ia[i]));
                                                                                                ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:10: error: cannot find symbol
    ia[index] = Verifier.nondetInt();
                ^
  symbol:   variable Verifier
  location: class array_iteration01
5 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; \result == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; \result != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: A \result expression is not allowed in an old environment
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
                                                                                       ^
1 error

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; \result == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; \result != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: A \result expression is not allowed in an old environment
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
                                                                                       ^
1 error

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; \result == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; \result != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: A \result expression is not allowed in an old environment
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(\result) == \result);
                                                                                       ^
1 error

public class array_iteration01 {

  //@ requires 0 <= index && index < 200;
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
  public static int f(int index) {
    int[] ia = new int[200];
    if(0 <= index && index < ia.length) return -1;
    ia[index] = (int) Math.random();
    for (int i = 0; i < ia.length; i++) {
      if (ia[i] == 0)
        return 0;
    }
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                       ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:4: error: cannot find symbol
  //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < 200; i != index ==> \old(ia[i]) == ia[i]);
                                                                                                 ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:5: error: cannot find symbol
  //@ ensures \result == 0 ==> (\exists int i; 0 <= i && i < 200; ia[i] == 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:6: error: cannot find symbol
  //@ ensures \result == 1 ==> (\forall int i; 0 <= i && i < 200; ia[i] != 0);
                                                                  ^
  symbol:   variable ia
  location: class array_iteration01
4 errors

