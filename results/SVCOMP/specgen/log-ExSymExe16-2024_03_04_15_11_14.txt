class Main {
    static int field;
    
    //@ ensures \result ==> z == 0;
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }
    
    //@ ensures \result ==> (z == 0 || (x == z - 3 && z != 0));
    //@ ensures !\result ==> (z != 0 && x != z - 3);
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
        }
        if (x == 0) {
            System.out.println("branch BOO1");
        } else {
            System.out.println("branch BOO2");
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ ensures \result ==> z == 0;
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                       ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                   ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                                 ^
  symbol:   variable z
  location: class Main
8 errors

class Main {
    static int field;
    
    //@ ensures \result ==> z == 0;
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }
    
    //@ ensures \result ==> (z == 0 || (x == z - 3 && z != 0));
    //@ ensures !\result ==> (z != 0 && x != z - 3);
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
        }
        if (x == 0) {
            System.out.println("branch BOO1");
        } else {
            System.out.println("branch BOO2");
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ ensures \result ==> z == 0;
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                       ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                   ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                                 ^
  symbol:   variable z
  location: class Main
8 errors

class Main {
    static int field;
    
    //@ requires z == 0 || z != 0;
    //@ ensures \result ==> z == 0;
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }
    
    //@ requires z == 0 || z != 0;
    //@ ensures \result ==> (z == 0 || (x == z - 3 && z != 0));
    //@ ensures !\result ==> (z != 0 && x != z - 3);
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
        }
        if (x == 0) {
            System.out.println("branch BOO1");
        } else {
            System.out.println("branch BOO2");
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ requires z == 0 || z != 0;
                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ requires z == 0 || z != 0;
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result ==> z == 0;
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                         ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                       ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                   ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:6: error: cannot find symbol
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
                                                                                 ^
  symbol:   variable z
  location: class Main
10 errors

class Main {
    static int field;
    
    //@ requires z == 0 || z != 0;
    //@ ensures \result ==> z == 0;
    //@ ensures !\result ==> z != 0 && ((x == z - 3 && z != 0) || (x != z - 3 && z == 0));
    public static boolean f(int x, int z) {
        Main inst = new Main();
        field = 9;
        return inst.test(x, z);
    }
    
    //@ requires z == 0 || z != 0;
    //@ ensures \result ==> (z == 0 || (x == z - 3 && z != 0));
    //@ ensures !\result ==> (z != 0 && x != z - 3);
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else {
            System.out.println("branch FOO2");
        }
        if (x == 0) {
            System.out.println("branch BOO1");
        } else {
            System.out.println("branch BOO2");
        }
        return true;
    }
}
