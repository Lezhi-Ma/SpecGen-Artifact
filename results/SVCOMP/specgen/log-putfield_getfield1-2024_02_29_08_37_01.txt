class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
2 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
2 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(a);
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ requires \fresh(a);
                      ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
3 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(this);
  //@ ensures \result ==> (this.i == 999);
  //@ ensures !\result ==> (this.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: non-static variable this cannot be referenced from a static context
  //@ requires \fresh(this);
                      ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> (this.i == 999);
                           ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (this.i == 999);
                               ^
  symbol: variable i
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> (this.i != 999);
                            ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (this.i != 999);
                                ^
  symbol: variable i
5 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(a);
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ requires \fresh(a);
                      ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
3 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(this);
  //@ ensures \result ==> (this.i == 999);
  //@ ensures !\result ==> (this.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: non-static variable this cannot be referenced from a static context
  //@ requires \fresh(this);
                      ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> (this.i == 999);
                           ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (this.i == 999);
                               ^
  symbol: variable i
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> (this.i != 999);
                            ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (this.i != 999);
                                ^
  symbol: variable i
5 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(a);
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ requires \fresh(a);
                      ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
3 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(this);
  //@ ensures \result ==> (this.i == 999);
  //@ ensures !\result ==> (this.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: non-static variable this cannot be referenced from a static context
  //@ requires \fresh(this);
                      ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> (this.i == 999);
                           ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (this.i == 999);
                               ^
  symbol: variable i
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> (this.i != 999);
                            ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (this.i != 999);
                                ^
  symbol: variable i
5 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(a);
  //@ ensures \result ==> (a.i == 999);
  //@ ensures !\result ==> (a.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: cannot find symbol
  //@ requires \fresh(a);
                      ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (a.i == 999);
                           ^
  symbol:   variable a
  location: class putfield_getfield1
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (a.i != 999);
                            ^
  symbol:   variable a
  location: class putfield_getfield1
3 errors

class A {
  public /*@ spec_public @*/ int i;
}
;

class putfield_getfield1 {
  //@ requires \fresh(this);
  //@ ensures \result ==> (this.i == 999);
  //@ ensures !\result ==> (this.i != 999);
  public static boolean f() {
    A a = new A();
    a.i = 999;
    return 999 == a.i;
  }
}
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:7: error: non-static variable this cannot be referenced from a static context
  //@ requires \fresh(this);
                      ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> (this.i == 999);
                           ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:8: error: cannot find symbol
  //@ ensures \result ==> (this.i == 999);
                               ^
  symbol: variable i
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> (this.i != 999);
                            ^
/home/max/Documents/JMLGPT/tmp/putfield_getfield1.java:9: error: cannot find symbol
  //@ ensures !\result ==> (this.i != 999);
                                ^
  symbol: variable i
5 errors

