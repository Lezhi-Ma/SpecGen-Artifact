class Main {

  //@ requires x == null && y == 0 || x != null;
  //@ ensures x == null && y == 0 ==> \result == 1;
  //@ ensures x != null ==> \result == 2;
  public static void test(Main x, int y) {
    if (x == null && y == 0) {
      System.out.println(1);
    } else if (x != null) {
      System.out.println(2);
      assert false;
    }
  }

  //@ requires n1 == 0 || n1 != 0;
  public static void f(int n1, int n2) {
    if (n1 == 0) test(null, 0);
    else test(null, n2);
  }
}
/home/max/Documents/JMLGPT/tmp/ExLazy.java:4: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures x == null && y == 0 ==> \result == 1;
                                       ^
/home/max/Documents/JMLGPT/tmp/ExLazy.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures x != null ==> \result == 2;
                             ^
2 errors

class Main {

  //@ requires x == null && y == 0 || x != null;
  //@ ensures x == null && y == 0;
  //@ ensures x != null;
  public static void test(Main x, int y) {
    if (x == null && y == 0) {
      System.out.println(1);
    } else if (x != null) {
      System.out.println(2);
      assert false;
    }
  }

  //@ requires n1 == 0 || n1 != 0;
  public static void f(int n1, int n2) {
    if (n1 == 0) test(null, 0);
    else test(null, n2);
  }
}
