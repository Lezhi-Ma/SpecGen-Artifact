class MyInteger {
  //@ public model int value;

  //@ public invariant value >= Integer.MIN_VALUE && value <= Integer.MAX_VALUE;
  
  //@ ensures \result <==> obj == this;
  //@ ensures \result <==> obj instanceof MyInteger && ((MyInteger)obj).value == this.value;
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof MyInteger)) {
      return false;
    }
    MyInteger other = (MyInteger) obj;
    return this.value == other.value;
  }
}
/home/max/Documents/JMLGPT/tmp/ExDarko.java:17: error: cannot find symbol
    return this.value == other.value;
               ^
  symbol: variable value
/home/max/Documents/JMLGPT/tmp/ExDarko.java:17: error: cannot find symbol
    return this.value == other.value;
                              ^
  symbol:   variable value
  location: variable other of type MyInteger
2 errors

class MyInteger {
  //@ public model int value;

  //@ public invariant value >= Integer.MIN_VALUE && value <= Integer.MAX_VALUE;
  
  //@ ensures \result <==> obj == this;
  //@ ensures \result <==> obj instanceof MyInteger && ((MyInteger)obj).value == this.value;
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof MyInteger)) {
      return false;
    }
    MyInteger other = (MyInteger) obj;
    return this.value == other.value;
  }
}
/home/max/Documents/JMLGPT/tmp/ExDarko.java:17: error: cannot find symbol
    return this.value == other.value;
               ^
  symbol: variable value
/home/max/Documents/JMLGPT/tmp/ExDarko.java:17: error: cannot find symbol
    return this.value == other.value;
                              ^
  symbol:   variable value
  location: variable other of type MyInteger
2 errors

class MyInteger {
  public int value;

  //@ requires value >= Integer.MIN_VALUE && value <= Integer.MAX_VALUE;
  //@ ensures \result <==> obj == this;
  //@ ensures \result <==> obj instanceof MyInteger && ((MyInteger)obj).value == this.value;
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof MyInteger)) {
      return false;
    }
    MyInteger other = (MyInteger) obj;
    return this.value == other.value;
  }
}
/home/max/Documents/JMLGPT/tmp/ExDarko.java:16: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExDarko.java:5:) in method equals
    return this.value == other.value;
    ^
/home/max/Documents/JMLGPT/tmp/ExDarko.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExDarko.java:16:
  //@ ensures \result <==> obj == this;
      ^
2 verification failures

class MyInteger {
  public int value;

  //@ requires value >= Integer.MIN_VALUE && value <= Integer.MAX_VALUE;
  //@ ensures \result <==> obj == this;  
  //@ ensures \result <==> obj instanceof MyInteger && ((MyInteger)obj).value == this.value;
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof MyInteger)) {
      return false;
    }
    MyInteger other = (MyInteger) obj;
    return this.value == other.value;
  }
}

/home/max/Documents/JMLGPT/tmp/ExDarko.java:16: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExDarko.java:5:) in method equals
    return this.value == other.value;
    ^
/home/max/Documents/JMLGPT/tmp/ExDarko.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExDarko.java:16:
  //@ ensures \result <==> obj == this;  
      ^
2 verification failures

class MyInteger {
  public int value;

  //@ requires value >= Integer.MIN_VALUE && value <= Integer.MAX_VALUE;
 
  //@ ensures \result <==> obj instanceof MyInteger && ((MyInteger)obj).value == this.value;
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof MyInteger)) {
      return false;
    }
    MyInteger other = (MyInteger) obj;
    return this.value == other.value;
  }
}


