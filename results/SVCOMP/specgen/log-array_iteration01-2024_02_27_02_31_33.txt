public class array_iteration01 {

    //@ requires 0 <= index && index < 200;
    //@ ensures \result == 1 || \result == 0 || \result == -1;
    public static int f(int index) {
        int[] ia = new int[200];
        if(0 > index || index >= ia.length) return -1;
        ia[index] = Verifier.nondetInt();
        for (int i = 0; i < ia.length; i++) {
            if (ia[i] == 0)
                return 0;
        }
        return 1;
    }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:8: error: cannot find symbol
        ia[index] = Verifier.nondetInt();
                    ^
  symbol:   variable Verifier
  location: class array_iteration01
1 error

public class array_iteration01 {

    //@ requires 0 <= index && index < 200;
    //@ ensures \result == 1 || \result == 0 || \result == -1;
    public static int f(int index) {
        int[] ia = new int[200];
        if(0 > index || index >= ia.length) return -1;
        ia[index] = (int)(Math.random() * Integer.MAX_VALUE);
        for (int i = 0; i < ia.length; i++) {
            if (ia[i] == 0)
                return 0;
        }
        return 1;
    }
}
/home/max/Documents/JMLGPT/tmp/array_iteration01.java:10: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method f
            if (ia[i] == 0)
                  ^
1 verification failure

public class array_iteration01 {

    //@ requires 0 <= index && index < 200;
    //@ ensures \result == 1 || \result == 0 || \result == -1;
    public static int f(int index) {
        int[] ia = new int[200];
        if(0 > index || index >= ia.length) return -1;
        ia[index] = (int)(Math.random() * Integer.MAX_VALUE);
        for (int i = 0; i < ia.length; i++) {
            //@ assume 0 <= i && i < ia.length;
            if (ia[i] == 0)
                return 0;
        }
        return 1;
    }
}

