import java.util.Random;

public class InfiniteLoop {
    //@ ensures true; // The method does not terminate normally
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b;
        //@ decreasing 0; // The loop does not have a decreasing expression
        while (b) {
            i++;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:9: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method infiniteLoop
        //@ maintaining b;
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {
    //@ ensures true; // The method does not terminate normally
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b;  
        //@ decreasing 0; // The loop does not have a decreasing expression
        while (b) {
            i++;
        }
    }
}

/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:9: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method infiniteLoop
        //@ maintaining b;  
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {
    //@ ensures true; // The method does not terminate normally
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

 
        //@ decreasing 0; // The loop does not have a decreasing expression
        while (b) {
            i++;
        }
    }
}

/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:10: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreasing 0; // The loop does not have a decreasing expression
            ^
1 verification failure

