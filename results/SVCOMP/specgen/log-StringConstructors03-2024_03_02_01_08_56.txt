public class StringConstructors03 {
    //@ requires arg0 != null && arg1 != null;
    //@ requires (\forall int i; 0 <= i && i < arg0.length(); (int)Character.MIN_VALUE <= (int)arg0.charAt(i) && (int)arg0.charAt(i) <= (int)Character.MAX_VALUE);
    //@ requires (\forall int i; 0 <= i && i < arg1.length(); (int)Character.MIN_VALUE <= (int)arg1.charAt(i) && (int)arg1.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result <==> new String(arg0).equals(arg1);
    public static boolean f(String arg0, String arg1) {
        String s = new String(arg0);
        String s2 = new String(s);
        return s2.equals(arg1);
    }
}
/home/max/Documents/JMLGPT/tmp/StringConstructors03.java:5: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new String(arg0).equals(arg1);
                             ^
1 error

public class StringConstructors03 {
    //@ requires arg0 != null && arg1 != null;
    //@ requires (\forall int i; 0 <= i && i < arg0.length(); (int)Character.MIN_VALUE <= (int)arg0.charAt(i) && (int)arg0.charAt(i) <= (int)Character.MAX_VALUE);
    //@ requires (\forall int i; 0 <= i && i < arg1.length(); (int)Character.MIN_VALUE <= (int)arg1.charAt(i) && (int)arg1.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result <==> arg0.equals(arg1);
    public static boolean f(String arg0, String arg1) {
        String s = new String(arg0);
        String s2 = new String(s);
        return s2.equals(arg1);
    }
}

