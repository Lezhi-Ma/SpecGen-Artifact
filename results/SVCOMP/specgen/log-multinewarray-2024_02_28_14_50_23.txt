class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> some_a.length == 4;
    @    ensures \result ==> some_a[0].length == 3;
    @    ensures \result ==> some_a[0][0].length == 2;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) 
        for (int j = 0; j < y; ++j) 
            int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    @    ensures \result ==> some_a.length == 4;
                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    @    ensures \result ==> some_a[0].length == 3;
                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:6: error: cannot find symbol
    @    ensures \result ==> some_a[0][0].length == 2;
                             ^
  symbol:   variable some_a
  location: class multinewarray
3 errors

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> int_array.length == 3;
    @    ensures \result ==> int_array[0].length == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) 
        for (int j = 0; j < y; ++j) 
            int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    @    ensures \result ==> int_array.length == 3;
                             ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    @    ensures \result ==> int_array[0].length == 5;
                             ^
  symbol:   variable int_array
  location: class multinewarray
2 errors

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> x == 3;
    @    ensures \result ==> y == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) 
        for (int j = 0; j < y; ++j) 
            int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    @    ensures \result ==> x == 3;
                             ^
  symbol:   variable x
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    @    ensures \result ==> y == 5;
                             ^
  symbol:   variable y
  location: class multinewarray
2 errors

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> some_a.length == 4;
    @    ensures \result ==> some_a[0].length == 3;
    @    ensures \result ==> some_a[0][0].length == 2;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) 
        for (int j = 0; j < y; ++j) 
            int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    @    ensures \result ==> some_a.length == 4;
                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    @    ensures \result ==> some_a[0].length == 3;
                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:6: error: cannot find symbol
    @    ensures \result ==> some_a[0][0].length == 2;
                             ^
  symbol:   variable some_a
  location: class multinewarray
3 errors

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) 
        for (int j = 0; j < y; ++j) 
            int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) {
        for (int j = 0; j < y; ++j) {
            int_array[i][j] = i + j;
        }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) {
        for (int j = 0; j < y; ++j) {
            int_array[i][j] = i + j;
        }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) {
        for (int j = 0; j < y; ++j) {
            int_array[i][j] = i + j;
        }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) {
        for (int j = 0; j < y; ++j) {
            int_array[i][j] = i + j;
        }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

class multinewarray {
  /*@ public normal_behavior
    @    ensures \result == true;
    @    ensures \result ==> 3 == 3;
    @    ensures \result ==> 5 == 5;
    @*/
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    for (int i = 0; i < x; ++i) {
        for (int j = 0; j < y; ++j) {
            int_array[i][j] = i + j;
        }
    }

    return int_array[2][4] == 6;
  }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:20: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
            int_array[i][j] = i + j;
                      ^
  Reason: Double rewriting of ident: i i_425_425___23 i_425_441___26
1 error

