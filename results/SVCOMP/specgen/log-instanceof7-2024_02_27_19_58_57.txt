class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                           ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                                  ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < as.length; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                                                                     ^
  symbol:   variable as
  location: class Main
3 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                          ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                                                             ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                          ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> as[i] instanceof B) && (i == 1 ==> as[i] instanceof B));
                                                                                                             ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
2 errors

class Main {
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
    public static boolean f() {
        A[] as = {new A(), new B()};
        if (!(!(as[0] instanceof B)))
            return false;
        if (!(as[1] instanceof B))
            return false;
        return true;
    }
}

class A {}

class B extends A {}
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                     ^
  symbol:   variable as
  location: class Main
/home/max/Documents/JMLGPT/tmp/instanceof7.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int i; 0 <= i && i < 2; (i == 0 ==> (i == 0 && as[i] instanceof B)) && (i == 1 ==> (i == 1 && as[i] instanceof B)));
                                                                                                                                    ^
  symbol:   variable as
  location: class Main
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 27262976 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid22873.log

