class Main {

  //@ ensures \result <==> (y && z > 3);
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result <==> test(y, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
  //@ ensures \result <==> (y && z > 3);
                            ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:14: error: cannot find symbol
  //@ ensures \result <==> test(y, 3);
                                ^
  symbol:   variable y
  location: class Main
2 errors

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 3);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 3);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 3);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 3);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 3);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 3);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 4);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 3);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 4);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 4);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 4);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 4);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 4);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 4);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 4);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 3);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 3);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 4);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 4);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 4);
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

  //@ ensures \result == test(true, 4);  
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 4);
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result == test(true, 4);  
                         ^
1 error

class Main {

  //@ requires x == true && z > 3;
  //@ ensures \result == true;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }

 
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, 4);
  }
}


