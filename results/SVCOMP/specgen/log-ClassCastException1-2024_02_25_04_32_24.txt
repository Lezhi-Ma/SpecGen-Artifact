public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    ensures \result == true;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:9: error: Ensures clauses are not permitted in exceptional specification cases
      @    ensures \result == true;
           ^
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
2 errors

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

public class ClassCastException1 {
    /*@ public normal_behavior
      @    assignable \nothing;
      @    ensures \result == false;
      @ also
      @ public exceptional_behavior
      @    requires ClassCastException;
      @    assignable \nothing;
      @    signals_only ClassCastException;
      @*/
    public static boolean f() {
        try {
            Object x = new Integer(0);
            String y = (String) x;
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException1.java:7: error: cannot find symbol
      @    requires ClassCastException;
                    ^
  symbol:   variable ClassCastException
  location: class ClassCastException1
Note: /home/max/Documents/JMLGPT/tmp/ClassCastException1.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

