public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> new StringBuilder(arg).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new StringBuilder(arg).capacity() == 69;
                             ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> new StringBuilder(arg).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new StringBuilder(arg).capacity() == 69;
                             ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (\fresh(new StringBuilder(arg)) && (new StringBuilder(arg)).capacity() == 69);
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (\fresh(new StringBuilder(arg)) && (new StringBuilder(arg)).capacity() == 69);
                                     ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (\fresh(new StringBuilder(arg)) && (new StringBuilder(arg)).capacity() == 69);
                                                                 ^
2 errors

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (\fresh(\result) && \result == 69);
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: The argument of \fresh must be of reference type
    //@ ensures \result <==> (\fresh(\result) && \result == 69);
                                     ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result <==> (\fresh(\result) && \result == 69);
                                                         ^
2 errors

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;  
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}

/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new StringBuilder(arg)).capacity() == 69;  
                              ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
 
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}


