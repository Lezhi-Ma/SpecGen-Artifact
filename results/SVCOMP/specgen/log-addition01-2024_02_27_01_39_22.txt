public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}
/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m + n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m < 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m > 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n < 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n > 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/addition01.java:21:) in method f
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/addition01.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/addition01.java:24:
  //@ ensures \result == 0 <==> (m <= 0 || m + 1 >= 10000) || (n <= 0 || n + 1 >= 10000) || addition(m, n, 0) != m - n;  
      ^
3 verification failures

public class addition01 {

  //@ ensures \result == m + n;
  public static int addition(int m, int n, int c) {
    if (n == 0) {
      return m;
    }

    if (c >= 150) {
      assert false;
    }

    if (n > 0) {
      return addition(m + 1, n - 1, ++c);
    } else {
      return addition(m - 1, n + 1, ++c);
    }
  }

  //@ ensures \result == 1 <==> m >= 0 && m < 10000 && n >= 0 && n < 10000 && addition(m, n, 0) == m + n;
 
  public static int f(int m, int n) {
    if (m < 0 || m >= 10000) {
      return -1;
    }
    if (n < 0 || n >= 10000) {
      return -1;
    }
    int c = 0;
    int result = addition(m, n, c);
    return (result == m + n) ? 1 : 0;
  }
}

/home/max/Documents/JMLGPT/tmp/addition01.java:10: verify: The prover cannot establish an assertion (Assert) in method addition
      assert false;
      ^
1 verification failure

