class Main {
  static int field;
  int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> field == 0 && field2 == 0;
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:14: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures field == 0 && field2 == 0 ==> \result;
              ^
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:14: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures field == 0 && field2 == 0 ==> \result;
                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:15: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
                ^
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:15: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
                              ^
6 errors

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && this.field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && this.field2 == 0 ==> \result;
  //@ ensures !(field == 0 && this.field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && this.field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && this.field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
  //@ ensures \result ==> field == 0 && field2 == 0;  
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeTestClassFields.java:6: error: non-static variable field2 cannot be referenced from a static context
  //@ ensures \result ==> field == 0 && field2 == 0;  
                                        ^
1 error

class Main {
  static /*@ spec_public @*/ int field;
  /*@ spec_public @*/ int field2;

  //@ requires arg == 2;
 
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg == 2)
      return (new Main()).test();
    return true;
  }

  //@ ensures field == 0 && field2 == 0 ==> \result;
  //@ ensures !(field == 0 && field2 == 0) ==> !\result;
  public boolean test() {
    if (field == 0 && field2 == 0) System.out.println("br 0");
    else {
      return false;
    }
    return true;
  }
}


