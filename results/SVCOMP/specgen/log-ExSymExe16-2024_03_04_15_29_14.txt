class Main {
    static int field;

    //@ ensures \result ==> \result == inst.test(3, 9);
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ ensures \result ==> \result == inst.test(3, 9);
                                       ^
  symbol:   variable inst
  location: class Main
1 error

class Main {
    static int field;

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ requires z == 9;
                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
                                                 ^
  symbol:   variable x
  location: class Main
3 errors

class Main {
    static int field;

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: cannot find symbol
    //@ requires z == 9;
                 ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
                                                 ^
  symbol:   variable x
  location: class Main
3 errors

class Main {
    static int field;

    //@ requires field == 9;
    //@ ensures \result <==> (field == 0) ? false : (x == 0) ? true : true;
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:4: error: An identifier with package visibility may not be used in a requires clause with public visibility
    //@ requires field == 9;
                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result <==> (field == 0) ? false : (x == 0) ? true : true;
                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (field == 0) ? false : (x == 0) ? true : true;
                                                     ^
  symbol:   variable x
  location: class Main
3 errors

class Main {
    static /*@ spec_public @*/ int field;

    //@ requires field == 9;
    //@ ensures \result <==> (field == 0) ? false : (x == 0) ? true : true;
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : (x == 0) ? true : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: error: cannot find symbol
    //@ ensures \result <==> (field == 0) ? false : (x == 0) ? true : true;
                                                     ^
  symbol:   variable x
  location: class Main
1 error

class Main {
    static /*@ spec_public @*/ int field;

    //@ requires field == 9;
    //@ ensures \result <==> (field == 0) ? false : true;
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5:) in method f
        return inst.test(x, field);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExe16.java:10:
    //@ ensures \result <==> (field == 0) ? false : true;
        ^
2 verification failures

class Main {
    static /*@ spec_public @*/ int field;

    //@ requires field == 9;
    //@ ensures \result <==> (field == 0) ? false : true;  
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5:) in method f
        return inst.test(x, field);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExe16.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExe16.java:10:
    //@ ensures \result <==> (field == 0) ? false : true;  
        ^
2 verification failures

class Main {
    static /*@ spec_public @*/ int field;

    //@ requires field == 9;
 
    public static boolean f() {
        int x = 3;
        Main inst = new Main();
        field = 9;
        return inst.test(x, field);
    }

    //@ requires z == 9;
    //@ ensures \result <==> (z == 0) ? false : true;
    public boolean test(int x, int z) {
        System.out.println("Testing ExSymExe16");
        int y = 3;
        x = z - y;
        if (z == 0) {
            System.out.println("branch FOO1");
            return false;
        } else
            System.out.println("branch FOO2");
        if (x == 0) System.out.println("branch BOO1");
        else
            System.out.println("branch BOO2");
        return true;
    }
}


