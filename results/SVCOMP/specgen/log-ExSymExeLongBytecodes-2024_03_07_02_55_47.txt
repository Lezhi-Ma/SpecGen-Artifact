class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;
  //@ ensures \result ==> System.out.println("branch diff <= c");
  //@ ensures !\result ==> System.out.println("branch sum >= z");
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> System.out.println("branch sum < z");
  //@ ensures !\result ==> System.out.println("branch sum >= z");
  public static boolean f(long x) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, y);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: error: cannot find symbol
  //@ ensures \result == (x - z) <= 34565;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:6: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> System.out.println("branch diff <= c");
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:7: error: incompatible types: void cannot be converted to boolean
  //@ ensures !\result ==> System.out.println("branch sum >= z");
                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                                   ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:9: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> System.out.println("branch sum < z");
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:10: error: incompatible types: void cannot be converted to boolean
  //@ ensures !\result ==> System.out.println("branch sum >= z");
                                             ^
9 errors

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, y);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: error: cannot find symbol
  //@ ensures \result == (x - z) <= 34565;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                                   ^
  symbol:   variable z
  location: class Main
5 errors

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, y);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: error: cannot find symbol
  //@ ensures \result == (x - z) <= 34565;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                                   ^
  symbol:   variable z
  location: class Main
5 errors

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, y);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:4: error: cannot find symbol
  //@ requires z > 0 || z <= 0;
                        ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: error: cannot find symbol
  //@ ensures \result == (x - z) <= 34565;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                              ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: error: cannot find symbol
  //@ ensures \result == (x + z) < z;
                                   ^
  symbol:   variable z
  location: class Main
5 errors

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) <= 34565;
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) < 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) < 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) <= 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) <= 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x - z) - 1 <= 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) - 1 <= 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x + z) < 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) < 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x + z) <= 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) <= 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
  //@ ensures \result == (x + z) - 1 <= 34565;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) - 1 <= 34565;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) < z;
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) < z;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) < z;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x + z) <= z;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x + z) <= z;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x - z) < z;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) < z;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  //@ ensures \result == (x - z) <= z;  
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}

/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8:) in method f
    return inst.test(x, z);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeLongBytecodes.java:15:
  //@ ensures \result == (x - z) <= z;  
      ^
2 verification failures

class Main {

  //@ requires x > 0 || x <= 0;
  //@ requires z > 0 || z <= 0;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
 
  //@ ensures \result ==> true;
  //@ ensures !\result ==> true;
  public static boolean f(long x, long z) {
    x = x > 0 ? -x : x;
    long y = 5;
    Main inst = new Main();
    return inst.test(x, z);
  }

  public static boolean test(long x, long z) { // invokestatic
    long a = x;
    long b = z;
    long c = 34565;

    long negate = -z; // LNEG

    long sum = a + b; // LADD
    long sum2 = z + 9090909L; // LADD
    long sum3 = 90908877L + z; // LADD

    long diff = a - b; // LSUB
    long diff2 = b - 19999999999L; // LSUB
    long diff3 = 9999999999L - a; // LSUB

    long mul = a * b; // LMUL
    long mul2 = a * 19999999999L; // LMUL
    long mul3 = 19999999999L * b; // LMUL

    if (diff > c) {
      return false;
    } else System.out.println("branch diff <= c");
    if (sum < z) System.out.println("branch sum < z");
    else
      System.out.println("branch sum >= z");
    return true;
  }
}


