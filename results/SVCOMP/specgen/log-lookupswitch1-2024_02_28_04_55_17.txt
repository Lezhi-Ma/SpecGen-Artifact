class lookupswitch1 {
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
  //@ ensures !\result <==> j == -1;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                      ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                             ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                      ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                                 ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                                                              ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: error: cannot find symbol
  //@ ensures \result <==> (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                                                                                             ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures !\result <==> j == -1;
                            ^
  symbol:   variable j
  location: class lookupswitch1
7 errors

class lookupswitch1 {
  //@ ensures \result <==> (i == 1 && 2 == 2) || (i == 10 && 11 == 11) || (i == 100 && 101 == 101) || (i == 1000 && 1001 == 1001) || (i == 10000 && 10001 == 10001) || (i == 100000 && 100001 == 100001);
  //@ ensures !\result <==> 2 == -1;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2:) in method f
    else return j == -1;
         ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:31:
  //@ ensures \result <==> (i == 1 && 2 == 2) || (i == 10 && 11 == 11) || (i == 100 && 101 == 101) || (i == 1000 && 1001 == 1001) || (i == 10000 && 10001 == 10001) || (i == 100000 && 100001 == 100001);
      ^
2 verification failures

class lookupswitch1 {
  //@ ensures \result <==> (i == 1 && 2 == 2) || (i == 10 && 11 == 11) || (i == 100 && 101 == 101) || (i == 1000 && 1001 == 1001) || (i == 10000 && 10001 == 10001) || (i == 100000 && 100001 == 100001);  
  //@ ensures !\result <==> 2 == -1;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}

/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2:) in method f
    else return j == -1;
         ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:31:
  //@ ensures \result <==> (i == 1 && 2 == 2) || (i == 10 && 11 == 11) || (i == 100 && 101 == 101) || (i == 1000 && 1001 == 1001) || (i == 10000 && 10001 == 10001) || (i == 100000 && 100001 == 100001);  
      ^
2 verification failures

class lookupswitch1 {
 
  //@ ensures !\result <==> 2 == -1;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}


