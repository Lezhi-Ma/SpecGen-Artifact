class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == true;
    //@ signals (A exc) false;
    //@ signals (B exc) false;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return true;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return true;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
    //@ requires true;
    //@ ensures \result == false;
    //@ signals (A exc) true;
    //@ signals (B exc) true;
    public static boolean f(int x) {
        try {
            x++;
        } catch (A exc) {
            return false;
        }

        try {
            throw new B();
        } catch (B exc) {
            return false;
        }

        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:25: error: unreachable statement
        return false;
        ^
1 error

