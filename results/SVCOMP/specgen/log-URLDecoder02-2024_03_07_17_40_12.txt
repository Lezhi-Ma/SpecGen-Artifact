public class URLDecoder02 {

    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals(Verifier.nondetString() + "some-url"));
    public static boolean f(String arg) {

        String s1 = Verifier.nondetString() + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3: error: cannot find symbol
    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals(Verifier.nondetString() + "some-url"));
                                                                                               ^
  symbol:   variable Verifier
  location: class URLDecoder02
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:6: error: cannot find symbol
        String s1 = Verifier.nondetString() + "some-url";
                    ^
  symbol:   variable Verifier
  location: class URLDecoder02
2 errors

public class URLDecoder02 {

    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));
    public static boolean f(String arg) {

        String s1 = "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15:
    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));
        ^
2 verification failures

public class URLDecoder02 {

    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));  
    public static boolean f(String arg) {

        String s1 = "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15:
    //@ ensures \result ==> (\exists String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));  
        ^
2 verification failures

public class URLDecoder02 {

    //@ ensures \result ==> (\forall String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));  
    public static boolean f(String arg) {

        String s1 = "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}

/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:15:
    //@ ensures \result ==> (\forall String s1; s1 != null; s1.startsWith("some") && s1.equals("some-url"));  
        ^
2 verification failures

public class URLDecoder02 {

 
    public static boolean f(String arg) {

        String s1 = "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}


