import java.util.Random;

class assert2 {
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                      ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                                          ^
4 errors

import java.util.Random;

class assert2 {
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                          ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                      ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                                    ^
  symbol:   variable i
  location: class assert2
4 errors

import java.util.Random;

class assert2 {
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                      ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                                          ^
4 errors

import java.util.Random;

class assert2 {
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                          ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                      ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                                    ^
  symbol:   variable i
  location: class assert2
4 errors

import java.util.Random;

class assert2 {
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                      ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                                          ^
4 errors

import java.util.Random;

class assert2 {
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                          ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                      ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                                    ^
  symbol:   variable i
  location: class assert2
4 errors

import java.util.Random;

class assert2 {
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                      ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                                          ^
4 errors

import java.util.Random;

class assert2 {
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                          ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                      ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                                    ^
  symbol:   variable i
  location: class assert2
4 errors

import java.util.Random;

class assert2 {
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                  ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                      ^
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\result >= 0 && \result < 1000) || (\result >= 1000 ==> \result > 1000);
                                                                          ^
4 errors

import java.util.Random;

class assert2 {
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
    public static void main() {
        int i = new Random().nextInt();

        if (i >= 1000) assert i > 1000 : "i is greater 1000";
    }
}
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                          ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                      ^
  symbol:   variable i
  location: class assert2
/home/max/Documents/JMLGPT/tmp/assert2.java:4: error: cannot find symbol
    //@ ensures i >= 0 && i < 1000 || i >= 1000 ==> i > 1000;
                                                    ^
  symbol:   variable i
  location: class assert2
4 errors

