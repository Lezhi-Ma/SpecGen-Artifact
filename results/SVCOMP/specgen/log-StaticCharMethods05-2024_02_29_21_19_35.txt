import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ requires \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
    //@ requires \result ==> choice >= 0 && choice < 3;
    //@ requires \result ==> (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
    //@ ensures \result ==> (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();

        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, radix));
                char tmp = Character.forDigit(digit, radix);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, radix));
                break;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: A \result expression may not be in a requires clause
    //@ requires \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
                  ^
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ requires \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
                             ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ requires \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
                                           ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: A \result expression may not be in a requires clause
    //@ requires \result ==> choice >= 0 && choice < 3;
                  ^
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ requires \result ==> choice >= 0 && choice < 3;
                             ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ requires \result ==> choice >= 0 && choice < 3;
                                            ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:10: error: A \result expression may not be in a requires clause
    //@ requires \result ==> (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                  ^
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:10: error: cannot find symbol
    //@ requires \result ==> (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                                                                                                                    ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:11: error: cannot find symbol
    //@ ensures \result ==> (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
                                                                                       ^
  symbol:   variable radix
  location: class StaticCharMethods05
9 errors

import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ ensures \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
    //@ ensures \result ==> choice >= 0 && choice < 3;
    //@ ensures \result ==> (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
    //@ ensures \result ==> (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();
        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, radix));
                char tmp = Character.forDigit(digit, radix);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, radix));
                break;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
                            ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures \result ==> radix >= 0 && radix <= Integer.MAX_VALUE;
                                          ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures \result ==> choice >= 0 && choice < 3;
                            ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures \result ==> choice >= 0 && choice < 3;
                                           ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:10: error: cannot find symbol
    //@ ensures \result ==> (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                                                                                                                   ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:11: error: cannot find symbol
    //@ ensures \result ==> (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
                                                                                       ^
  symbol:   variable radix
  location: class StaticCharMethods05
6 errors

import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ ensures radix >= 0 && radix <= Integer.MAX_VALUE;
    //@ ensures choice >= 0 && choice < 3;
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();
        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, radix));
                char tmp = Character.forDigit(digit, radix);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, radix));
                break;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures radix >= 0 && radix <= Integer.MAX_VALUE;
                ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures radix >= 0 && radix <= Integer.MAX_VALUE;
                              ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures choice >= 0 && choice < 3;
                ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures choice >= 0 && choice < 3;
                               ^
  symbol:   variable choice
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:10: error: cannot find symbol
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                                                                                                       ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:11: error: cannot find symbol
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
                                                                           ^
  symbol:   variable radix
  location: class StaticCharMethods05
6 errors

import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();
        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, radix));
                char tmp = Character.forDigit(digit, radix);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, radix));
                break;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                                                                                                       ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
                                                                           ^
  symbol:   variable radix
  location: class StaticCharMethods05
2 errors

import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();
        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, radix));
                char tmp = Character.forDigit(digit, radix);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, radix));
                break;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:8: error: cannot find symbol
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, radix) == 't');
                                                                                                       ^
  symbol:   variable radix
  location: class StaticCharMethods05
/home/max/Documents/JMLGPT/tmp/StaticCharMethods05.java:9: error: cannot find symbol
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, radix) >= 0);
                                                                           ^
  symbol:   variable radix
  location: class StaticCharMethods05
2 errors

import java.util.Scanner;

public class StaticCharMethods05 {
    //@ requires arg != null && arg.length() > 0;
    //@ requires \typeof(arg) == \type(String);
    //@ requires (\forall int i; 0 <= i && i < arg.length(); Character.isDigit(arg.charAt(i)));
    //@ requires Integer.parseInt(arg) > 0 && Integer.parseInt(arg) <= Integer.MAX_VALUE;
    //@ ensures (\forall int digit; 0 <= digit && digit < Integer.MAX_VALUE; Character.forDigit(digit, 10) == 't');
    //@ ensures (\forall char c; Character.isLetter(c); Character.digit(c, 10) >= 0);
    public static boolean f(String arg) {
        Scanner scanner = new Scanner(arg);

        int radix = scanner.nextInt();
        int choice = scanner.nextInt() % 3;
        if (!(choice >= 0 && choice < 3)) return false;

        switch (choice) {
            case 1: // convert digit to character
                System.out.println("Enter a digit:");
                int digit = scanner.nextInt();
                System.out.printf("Convert digit to character: %s\n", Character.forDigit(digit, 10));
                char tmp = Character.forDigit(digit, 10);
                if (tmp != 't')
                    return false;
                break;

            case 2: // convert character to digit
                System.out.println("Enter a character:");
                char character = scanner.next().charAt(0);
                System.out.printf("Convert character to digit: %s\n", Character.digit(character, 10));
                break;
        }
        return true;
    }
}
