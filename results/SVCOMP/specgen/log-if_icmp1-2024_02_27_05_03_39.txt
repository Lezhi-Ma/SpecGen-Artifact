class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result == -1 <==> i + 1 < 0;
    public static int fun(int i) {
        if (i + 1 < 0) return -1;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:31: error: incompatible types: boolean cannot be converted to int
        return f(i, i + 1);
                ^
2 errors

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result == -1 <==> i + 1 < 0;
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result == -1 <==> i + 1 < 0;
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:28: error: incomparable types: boolean and int
    //@ ensures \result == -1 <==> i + 1 < 0;
                        ^
2 errors

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j <= i) {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        if (j <= i) {
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        if (j < i) {
            return false;
        } else {
            return true;
        }
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        if (j < i) {
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

class if_icmp1 {
    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    //@ ensures \result == f(i, i + 1);
    private static boolean f(int i, int j) {
        if (i == j) {
            return false;
        }
        if (i >= j) {
            return false;
        }
        if (j > i) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    //@ requires i + 1 >= 0;
    //@ ensures \result <==> (i + 1 < 0);
    public static boolean fun(int i) {
        if (i + 1 < 0) return false;
        return f(i, i + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:17: error: unreachable statement
        return false;
        ^
1 error

