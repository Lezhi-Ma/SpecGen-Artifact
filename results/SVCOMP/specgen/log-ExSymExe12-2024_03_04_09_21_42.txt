class Main {
  static int field;
  static int field2;

  //@ requires arg < 0;
  //@ ensures \result == true;
  //@ ensures field == 9;
  //@ ensures field2 == \old(field2);
  public static boolean f(int arg) {
    int x = 3; // symbolic parameter

    Main inst = new Main();
    field = 9;
    if (arg < 0) return true;
    return inst.test(x, arg, field2);
  }

  /*@ requires true;
    @ ensures \result == true;
    @ assignable \nothing; @*/
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe12");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z < x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x < r) System.out.println("branch BOO1");
    else {
      System.out.println("branch BOO2");
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe12.java:7: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures field == 9;
              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe12.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures field2 == \old(field2);
              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe12.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures field2 == \old(field2);
                             ^
3 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires arg < 0;
  //@ ensures \result == true;
  //@ ensures field == 9;
  //@ ensures field2 == \old(field2);
  public static boolean f(int arg) {
    int x = 3; // symbolic parameter

    Main inst = new Main();
    field = 9;
    if (arg < 0) return true;
    return inst.test(x, arg, field2);
  }

  /*@ requires true;
    @ ensures \result == true;
    @ assignable \nothing; @*/
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe12");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z < x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x < r) System.out.println("branch BOO1");
    else {
      System.out.println("branch BOO2");
      return false;
    }
    return true;
  }
}
error: An error while executing a proof script for test: (error "Solver has unexpectedly terminated")
1 error

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires arg < 0;
  //@ ensures \result == true;
  //@ ensures field == 9;
  //@ ensures field2 == \old(field2);
  public static boolean f(int arg) {
    int x = 3; // symbolic parameter

    Main inst = new Main();
    field = 9;
    if (arg < 0) return true;
    return inst.test(x, arg, field2);
  }

  /*@ requires true;
    @ ensures \result == true;
    @ assignable \nothing; @*/
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe12");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z < x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x < r) System.out.println("branch BOO1");
    else {
      System.out.println("branch BOO2");
      return false;
    }
    return true;
  }
}
