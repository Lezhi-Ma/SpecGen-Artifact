public class TokenTest01 {
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
    public static boolean f() {
        String sentence = "automatic test case generation";
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                            ^
  symbol:   variable sentence
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                             ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                            ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                             ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                           ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                                                         ^
  symbol:   variable tokens
  location: class TokenTest01
6 errors

public class TokenTest01 {
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
    public static boolean f() {
        String sentence = "automatic test case generation";
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                            ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                               ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                              ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                                            ^
  symbol:   variable tokens
  location: class TokenTest01
6 errors

public class TokenTest01 {
    //@ requires sentence != null;
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
    public static boolean f() {
        String sentence = "automatic test case generation";
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:2: error: cannot find symbol
    //@ requires sentence != null;
                 ^
  symbol:   variable sentence
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                            ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                               ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                              ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                                            ^
  symbol:   variable tokens
  location: class TokenTest01
7 errors

public class TokenTest01 {
    //@ requires sentence != null;
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
    public static boolean f(String sentence) {
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                            ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                               ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                              ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                                            ^
  symbol:   variable tokens
  location: class TokenTest01
6 errors

public class TokenTest01 {
    //@ requires sentence != null;
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
    public static boolean f(String sentence) {
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                            ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                               ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                              ^
  symbol:   variable tokens
  location: class TokenTest01
/home/max/Documents/JMLGPT/tmp/TokenTest01.java:3: error: cannot find symbol
    //@ ensures \result ==> tokens.length != 4 && (\forall int i; 0 <= i && i < tokens.length; tokens[i].equals("automatic") && tokens[i+1].equals("test") && tokens[i+2].equals("case") && tokens[i+3].equals("generation"));
                                                                                                                                                                                            ^
  symbol:   variable tokens
  location: class TokenTest01
6 errors

public class TokenTest01 {
    //@ requires sentence != null;
    //@ ensures \result ==> sentence.split(" ").length != 4 && (\forall int i; 0 <= i && i < sentence.split(" ").length; sentence.split(" ")[i].equals("automatic") && sentence.split(" ")[i+1].equals("test") && sentence.split(" ")[i+2].equals("case") && sentence.split(" ")[i+3].equals("generation"));
    public static boolean f(String sentence) {
        String[] tokens = sentence.split(" ");
        if(tokens.length == 4) return false;

        int i = 0;
        for (String token : tokens) {
            System.out.println(token);
            if (i == 0) {
                if (!token.equals("automatic"))
                    return false;
            }
            else if (i == 1) {
                if (!token.equals("test"))
                    return false;
            }
            else if (i == 2) {
                if (!token.equals("case"))
                    return false;
            }
            else if (i == 3) {
                if (!token.equals("generation"))
                    return false;
            }
            ++i;
        }
        return true;
    }
}
