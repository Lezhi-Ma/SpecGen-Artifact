class Main {
    //@ requires i == null || i instanceof Integer;
    //@ ensures \result == (i instanceof Integer);
    public static boolean test(Integer i) {
        if (i instanceof Integer) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == (!test(null)) && (test(new Integer(1)));
    public static boolean f() {
        return (!test(null)) && (test(new Integer(1));
    }
}
/home/max/Documents/JMLGPT/tmp/instanceof8.java:14: error: ')' expected
        return (!test(null)) && (test(new Integer(1));
                                                     ^
1 error

class Main {
    //@ requires i == null || i instanceof Integer;
    //@ ensures \result == (i instanceof Integer);
    public static boolean test(Integer i) {
        if (i instanceof Integer) {
            return true;
        } else {
            return false;
        }
    }

    //@ ensures \result == (!test(null)) && (test(new Integer(1)));
    public static boolean f() {
        return (!test(null)) && (test(new Integer(1)));
    }
}
/home/max/Documents/JMLGPT/tmp/instanceof8.java:12: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (!test(null)) && (test(new Integer(1)));
                                                  ^
Note: /home/max/Documents/JMLGPT/tmp/instanceof8.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
1 error

