static class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
  //@ ensures \result != null ==> \result.elem == this.elem;
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
  //@ ensures \result != null ==> \result.next.next.next == null;
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:1: error: modifier static not allowed here
static class Node {
       ^
1 error

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
  //@ ensures \result != null ==> \result.elem == this.elem;
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
  //@ ensures \result != null ==> \result.next.next.next == null;
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:7:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.elem == this.elem;
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
  //@ ensures \result != null ==> \result.elem == this.elem;  
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
  //@ ensures \result != null ==> \result.next.next.next == null;
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:7:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.elem == this.elem;  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
  //@ ensures \result != null ==> \result.next.next.next == null;
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:12:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.next.next.next == null;
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
  //@ ensures \result != null ==> \result.next.next.next == null;  
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:12:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.next.next.next == null;  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.next.elem < \result.elem;
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
  //@ ensures \result != null ==> \result.next.elem < \result.elem;  
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.next.elem < \result.elem;  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
  //@ ensures \result != null ==> \result.next.elem <= \result.elem;  
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> \result.next.elem <= \result.elem;  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem > \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem + 1 >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result && n != this; n.elem + 1 >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem > \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem + 1 >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result && n != this; n.elem + 1 >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:6:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> \result.next == this;
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null ==> \result.next == this;  
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:6:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> \result.next == this;  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem + 1 >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> (\exists Node n; n != null && n != \result || n != this; n.elem + 1 >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem > \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
    return this;
    ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:28:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem + 1 >= \result.elem);  
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:26:
  //@ ensures \result != null ==> (\forall Node n; n != null && n != \result || n != this; n.elem + 1 >= \result.elem);  
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

 
 
  //@ ensures \result == this ==> this.next == \old(this.next);
  //@ ensures \result == this ==> this.elem == \old(this.elem);
  //@ ensures \result != null ==> \result.next != null;
  //@ ensures \result != null ==> \result.next.next != null;
 
 
 
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}

/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

