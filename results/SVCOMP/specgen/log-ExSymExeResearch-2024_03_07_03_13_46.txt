class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result == (new Main()).test(arg > 0 ? arg : -arg, 5) != (arg > 0 ? arg : -arg + 5);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new Main()).test(arg > 0 ? arg : -arg, 5) != (arg > 0 ? arg : -arg + 5);
                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (new Main()).test(arg > 0 ? arg : -arg, 5) != (arg > 0 ? arg : -arg + 5);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (new Main()).test(arg > 0 ? arg : -arg, 5) != (arg > 0 ? arg : -arg + 5);
                                                                      ^
3 errors

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '>='
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '<'
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                                  ^
6 errors

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '>='
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '<'
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                                  ^
6 errors

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '>='
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '<'
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                                  ^
6 errors

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '>='
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: bad operand types for binary operator '<'
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                        ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:3: error: incomparable types: boolean and int
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
                                                                                                                  ^
6 errors

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static int f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y);
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method f
        return inst.test(x, y);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:11: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
3 verification failures

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static int f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y);
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method f
        return inst.test(x, y);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:11: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
3 verification failures

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static int f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y);
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method f
        return inst.test(x, y);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:11: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
3 verification failures

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static int f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y);
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method f
        return inst.test(x, y);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:11: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
3 verification failures

class Main {
    //@ requires arg > Integer.MIN_VALUE && arg < Integer.MAX_VALUE;
    //@ ensures \result >= 0 && \result < 100 && (\result == 0 || \result == arg - 5 || \result == arg || \result == 5);
    public static int f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y);
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result == 0 || \result == a - b || \result == a || \result == b;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method f
        return inst.test(x, y);
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:8:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:11: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
3 verification failures

