class Main {
  static int field;
  static int field2;

  //@ requires \symbolic x;
  //@ requires \symbolic z;
  //@ requires \symbolic r;
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires \symbolic x;
  //@ requires \symbolic z;
  //@ requires \symbolic r;
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:5: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic x;
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:6: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic z;
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:7: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic r;
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:18: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic x;
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:19: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic z;
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:20: error: This backslash token is unknown: \symbolic
  //@ requires \symbolic r;
               ^
6 errors

class Main {
  static int field;
  static int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                            ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                          ^
  symbol:   variable z
  location: class Main
6 errors

class Main {
  static int field;
  static int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                            ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                          ^
  symbol:   variable z
  location: class Main
6 errors

class Main {
  static int field;
  static int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && x >= field);
  //@ ensures !\result ==> (field2 < 99 || x < field);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> (field2 >= 99 && x >= field);
                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (field2 >= 99 && x >= field);
                                           ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> (field2 >= 99 && x >= field);
                                                ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> (field2 < 99 || x < field);
                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (field2 < 99 || x < field);
                                           ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !\result ==> (field2 < 99 || x < field);
                                               ^
6 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && x >= field);
  //@ ensures !\result ==> (field2 < 99 || x < field);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (field2 >= 99 && x >= field);
                                           ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (field2 < 99 || x < field);
                                           ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (r >= 99 && x >= z);
                                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                            ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (r < 99 || x < z);
                                          ^
  symbol:   variable z
  location: class Main
6 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && x >= field);
  //@ ensures !\result ==> (field2 < 99 || x < field);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (field2 >= 99 && x >= field);
                                           ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (field2 < 99 || x < field);
                                           ^
  symbol:   variable x
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && field >= z);
  //@ ensures !\result ==> (field2 < 99 || field < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (field2 >= 99 && field >= z);
                                                    ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (field2 < 99 || field < z);
                                                   ^
  symbol:   variable z
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && field >= z);
  //@ ensures !\result ==> (field2 < 99 || field < z);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:8: error: cannot find symbol
  //@ ensures \result ==> (field2 >= 99 && field >= z);
                                                    ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe21.java:9: error: cannot find symbol
  //@ ensures !\result ==> (field2 < 99 || field < z);
                                                   ^
  symbol:   variable z
  location: class Main
2 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (field2 >= 99 && field >= 10);
  //@ ensures !\result ==> (field2 < 99 || field < 10);
  public static boolean f() {
    int x = 3;

    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires true; // symbolic parameter x
  //@ requires true; // symbolic parameter z
  //@ requires true; // symbolic parameter r
  //@ ensures \result ==> (r >= 99 && x >= z);
  //@ ensures !\result ==> (r < 99 || x < z);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe21");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r >= 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= z) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
