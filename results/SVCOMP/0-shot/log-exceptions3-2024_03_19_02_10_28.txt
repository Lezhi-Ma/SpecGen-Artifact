class A extends Throwable {
    //@ public normal_behavior
    //@ ensures \result == true;
    //@ ensures \result == (this instanceof A);
    //@ also
    //@ public exceptional_behavior
    //@ signals_only ClassCastException;
    //@ assignable \strictly_nothing;
    public boolean isA() { return false; }
}

class B extends A {
    //@ public normal_behavior
    //@ ensures \result == true;
    //@ ensures \result == (this instanceof B);
    //@ also
    //@ public exceptional_behavior
    //@ signals_only ClassCastException;
    //@ assignable \strictly_nothing;
    public boolean isB() { return false; }
}

class C extends B {
    //@ public normal_behavior
    //@ ensures \result == true;
    //@ ensures \result == (this instanceof C);
    //@ also
    //@ public exceptional_behavior
    //@ signals_only ClassCastException;
    //@ assignable \strictly_nothing;
    public boolean isC() { return false; }
}

public class exceptions3 {
    //@ requires args != null;
    //@ requires (\forall int i; 0 <= i && i < args.length; args[i] != null);
    //@ ensures true;
    public static void main(String[] args) {
        try {
            //@ assert false; // Unreachable code
            throw new B();
        } catch (C exc) {
            //@ assert false; // Unreachable code
        } catch (B exc) {
            //@ assert false; // Unreachable code
        }
    }
}

