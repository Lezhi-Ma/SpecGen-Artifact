class Main {
  //@ public model boolean symbolicArg; // Annotation to specify that the argument is symbolic

  static int field;
  static int field2;

  //@ requires symbolicArg == true;
  //@ ensures \result == true || \result == false;
  public static boolean f(int arg) {
    int x = 3;

    Main inst = new Main();
    field = arg;
    if (field < 0) return true;
    field = field % 10;
    return inst.test(x, field, field2);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result == true || \result == false;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe19");
    int y = 3;
    x = z + r;
    z = y * x;
    r = -z;
    if (x > 99) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (r > z) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");
    return true;
  }
}

