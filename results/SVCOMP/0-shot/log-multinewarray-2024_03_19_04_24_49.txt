class multinewarray {
  //@ requires true;
  //@ ensures \result == (\exists int i, j; 0 <= i && i < 3 && 0 <= j && j < 5; i + j == 6);
  public static boolean f() {
    int[][][] some_a = new int[4][3][2];

    assert some_a.length == 4;
    assert some_a[0].length == 3;
    assert some_a[0][0].length == 2;

    int x = 3;
    int y = 5;
    int[][] int_array = new int[x][y];

    //@ loop_invariant 0 <= i && i <= 3;
    //@ loop_invariant (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 5; int_array[k][j] == k + j));
    //@ decreases 3 - i;
    for (int i = 0; i < x; ++i) 
      for (int j = 0; j < y; ++j) 
        int_array[i][j] = i + j;

    return int_array[2][4] == 6;
  }
}

