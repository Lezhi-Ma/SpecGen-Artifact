public class BinaryTree {
  private class Node {
    int value;
    Node left;
    Node right;

    //@ invariant left != this && right != this;
    //@ invariant left == null || left.value < value;
    //@ invariant right == null || right.value > value;

    Node(int v, Node l, Node r) {
      value = v;
      left = l;
      right = r;
    }
  }

  private Node root = null;

  //@ ensures root != null;
  public void insert(int v) {
    // JML does not support loop invariants, so cannot specify loop invariants here
  }

  //@ requires root != null;
  //@ ensures \result == true || \result == false;
  public boolean search(int v) {
    // JML does not support loop invariants, so cannot specify loop invariants here
  }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:20: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures root != null;
              ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:25: error: An identifier with private visibility may not be used in a requires clause with public visibility
  //@ requires root != null;
               ^
2 errors

