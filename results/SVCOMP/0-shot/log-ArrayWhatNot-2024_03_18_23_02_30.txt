class ArrayWhatNot {

  class what_not {
  };

  //@ requires size >= 0;
  //@ ensures \result == -1 || \result == 0 || \result == 1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    //@ loop invariant 0 <= i && i <= size;
    //@ loop invariant (\forall int j; 0 <= j && j < i; int_array[j] == j);
    //@ decreases size - i;
    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    //@ assert what_not_array.length == size;
    if (what_not_array.length != size)
      return 0;
    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13: error: ';' expected
    //@ loop invariant 0 <= i && i <= size;
                      ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13: error: not a statement
    //@ loop invariant 0 <= i && i <= size;
                              ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13: error: Expected a declaration or a JML construct inside the JML annotation here
    //@ loop invariant 0 <= i && i <= size;
                            ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14: error: ';' expected
    //@ loop invariant (\forall int j; 0 <= j && j < i; int_array[j] == j);
                      ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14: error: not a statement
    //@ loop invariant (\forall int j; 0 <= j && j < i; int_array[j] == j);
                        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14: error: ';' expected
    //@ loop invariant (\forall int j; 0 <= j && j < i; int_array[j] == j);
                                                                         ^
6 errors

