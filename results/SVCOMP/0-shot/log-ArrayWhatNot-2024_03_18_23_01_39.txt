class ArrayWhatNot {

  //@ public invariant int_array != null;
  //@ public invariant (\forall int i; 0 <= i && i < int_array.length; int_array[i] == i);

  class what_not {
    // Add specifications for what_not class if needed
  };

  //@ requires size >= 0;
  //@ ensures \result == -1 || \result == 0 || \result == 1;
  public static int func(int size) {
    //@ assert size >= 0;

    if (size < 8) return -1;
    //@ assert size >= 8;

    int int_array[] = new int[size];
    //@ assert int_array != null;

    //@ loop_invariant 0 <= i && i <= size;
    //@ loop_invariant (\forall int j; 0 <= j && j < i; int_array[j] == j);
    for (int i = 0; i < size; i++)
      int_array[i] = i;

    //@ assert int_array[7] == 7;
    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];
    //@ assert what_not_array != null;

    //@ assert what_not_array.length == size;
    if (what_not_array.length != size)
      return 0;

    return 1;
  }
}
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:3: error: cannot find symbol
  //@ public invariant int_array != null;
                       ^
  symbol:   variable int_array
  location: class ArrayWhatNot
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:4: error: cannot find symbol
  //@ public invariant (\forall int i; 0 <= i && i < int_array.length; int_array[i] == i);
                                                     ^
  symbol:   variable int_array
  location: class ArrayWhatNot
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:4: error: cannot find symbol
  //@ public invariant (\forall int i; 0 <= i && i < int_array.length; int_array[i] == i);
                                                                       ^
  symbol:   variable int_array
  location: class ArrayWhatNot
3 errors

