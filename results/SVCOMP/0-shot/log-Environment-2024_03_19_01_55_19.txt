public class Environment {

  //@ public invariant waterLevel == WaterLevelEnum.low || waterLevel == WaterLevelEnum.normal || waterLevel == WaterLevelEnum.high;
  public enum WaterLevelEnum {
    low,
    normal,
    high
  }

  private /*@ spec_public @*/ WaterLevelEnum waterLevel = WaterLevelEnum.normal;

  private /*@ spec_public @*/ boolean methaneLevelCritical = false;

  //@ ensures waterLevel == WaterLevelEnum.normal || waterLevel == WaterLevelEnum.low;
  public void lowerWaterLevel() {
    switch (waterLevel) {
      case high:
        waterLevel = WaterLevelEnum.normal;
        break;
      case normal:
        waterLevel = WaterLevelEnum.low;
        break;
    }
  }

  //@ ensures waterLevel == WaterLevelEnum.normal || waterLevel == WaterLevelEnum.high;
  public void waterRise() {
    switch (waterLevel) {
      case low:
        waterLevel = WaterLevelEnum.normal;
        break;
      case normal:
        waterLevel = WaterLevelEnum.high;
        break;
    }
  }

  //@ ensures methaneLevelCritical == !\old(methaneLevelCritical);
  public void changeMethaneLevel() {
    methaneLevelCritical = !methaneLevelCritical;
  }

  //@ ensures \result == methaneLevelCritical;
  public boolean isMethaneLevelCritical() {
    return methaneLevelCritical;
  }

  //@ ensures \result.equals("Env(Water:" + waterLevel + ",Meth:" + (methaneLevelCritical ? "CRIT" : "OK") + ")");
  @Override
  public String toString() {
    return "Env(Water:" + waterLevel + ",Meth:" + (methaneLevelCritical ? "CRIT" : "OK") + ")";
  }

  //@ ensures \result == waterLevel;
  public WaterLevelEnum getWaterLevel() {
    return waterLevel;
  }
}

