public class BinaryTree {
  private class Node {
    int value;
    Node left;
    Node right;

    //@ public invariant left != this && right != this;
    //@ public invariant left == null || left.value < value;
    //@ public invariant right == null || right.value > value;

    Node(int v, Node l, Node r) {
      value = v;
      left = l;
      right = r;
    }
  }

  private Node root = null;

  //@ ensures root != null;
  public void insert(int v) {
    // JML does not support loops, so we cannot specify loop invariants here
    // JML also does not support break statements, so we cannot specify loop termination
    // We can only specify postconditions
  }

  //@ requires root != null;
  //@ ensures \result == true || \result == false;
  public boolean search(int v) {
    // JML does not support loops, so we cannot specify loop invariants here
    // JML also does not support break statements, so we cannot specify loop termination
    // We can only specify preconditions and postconditions
  }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:7: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left != this && right != this;
                         ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:7: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left != this && right != this;
                                         ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:8: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left == null || left.value < value;
                         ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:8: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left == null || left.value < value;
                                         ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:8: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left == null || left.value < value;
                                             ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:8: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant left == null || left.value < value;
                                                      ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:9: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant right == null || right.value > value;
                         ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:9: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant right == null || right.value > value;
                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:9: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant right == null || right.value > value;
                                               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:9: error: An identifier with package visibility may not be used in a invariant clause with public visibility
    //@ public invariant right == null || right.value > value;
                                                        ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:20: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures root != null;
              ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:27: error: An identifier with private visibility may not be used in a requires clause with public visibility
  //@ requires root != null;
               ^
12 errors

