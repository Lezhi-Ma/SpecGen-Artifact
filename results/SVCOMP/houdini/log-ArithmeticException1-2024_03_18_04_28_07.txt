public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i == 1;
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:36: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:25:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:36:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:5: verify: Precondition conjunct is false: i == 1
  //@ requires i == 1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:35: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:24:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:35:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:6: verify: Precondition conjunct is false: i >= 1
  //@ requires i >= 1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:23:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:34:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:6: verify: Precondition conjunct is false: i > 1
  //@ requires i > 1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:33: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:22:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:33:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:8: verify: Precondition conjunct is false: i == 0
  //@ requires i == 0;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:32: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:21:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:32:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:9: verify: Precondition conjunct is false: i >= 0
  //@ requires i >= 0;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:31: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:20:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:31:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:9: verify: Precondition conjunct is false: i > 0
  //@ requires i > 0;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:30: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:19:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:30:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:11: verify: Precondition conjunct is false: i == -1
  //@ requires i == -1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:29: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:18:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:29:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:12: verify: Precondition conjunct is false: i >= -1
  //@ requires i >= -1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i != -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:28: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:17:) in method main
    arithmeticException1(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:28:
  public static boolean arithmeticException1(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException1.java:12: verify: Precondition conjunct is false: i > -1
  //@ requires i > -1;
                 ^
3 verification failures

public class ArithmeticException1 {

  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i != 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i != 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i != -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean arithmeticException1(int i) {
    try {
      int j = 10 / i;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException1(-2);
    arithmeticException1(-1);
    arithmeticException1(0);
    arithmeticException1(1);
    arithmeticException1(2);
    arithmeticException1(3);
    arithmeticException1(4);
    arithmeticException1(114);
    arithmeticException1(-514);
  }
}


