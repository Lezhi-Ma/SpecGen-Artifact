class lookupswitch1 {
  //@ requires i < 1;
  //@ requires i <= 1;
  //@ requires i == 1;
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:59: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:24:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:59:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i < 1
  //@ requires i < 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i <= 1;
  //@ requires i == 1;
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:58: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:23:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:58:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i <= 1
  //@ requires i <= 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i == 1;
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:22:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:57:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i == 1
  //@ requires i == 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i != 1;
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:21:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:56:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i != 1
  //@ requires i != 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i >= 1;
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:20:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:55:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i >= 1
  //@ requires i >= 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i > 1;
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:19:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:54:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i > 1
  //@ requires i > 1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i < 0;
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:18:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:53:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i < 0
  //@ requires i < 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i <= 0;
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:17:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:52:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i <= 0
  //@ requires i <= 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i == 0;
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:16:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:51:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i == 0
  //@ requires i == 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i != 0;
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:15:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:50:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i != 0
  //@ requires i != 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i >= 0;
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:14:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:49:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i >= 0
  //@ requires i >= 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i > 0;
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:13:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:48:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i > 0
  //@ requires i > 0;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i < -1;
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:12:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:47:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i < -1
  //@ requires i < -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i <= -1;
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:11:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:46:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i <= -1
  //@ requires i <= -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i == -1;
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:10:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:45:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i == -1
  //@ requires i == -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6:) in method f
    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
                                                                                 ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:35:
  //@ ensures !\result;
      ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:9:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:44:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i != -1
  //@ requires i != -1;
                 ^
5 verification failures

class lookupswitch1 {
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures i >= 0 ==> \result;
  //@ ensures i >= 0 ==> !\result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:7:) in method f
    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
                                                                                 ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:34:
  //@ ensures i >= 0 ==> !\result;
      ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:8:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:43:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i != -1
  //@ requires i != -1;
                 ^
5 verification failures

class lookupswitch1 {
  //@ requires i != -1;
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures i >= 0 ==> \result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:7:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:42:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i != -1
  //@ requires i != -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i >= -1;
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures i >= 0 ==> \result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:41:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i >= -1
  //@ requires i >= -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ requires i > -1;
  //@ ensures \result;
  //@ ensures i >= 0 ==> \result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}


/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:5:) in method main
      f(i);
       ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lookupswitch1.java:40:
  public static boolean f(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:2: verify: Precondition conjunct is false: i > -1
  //@ requires i > -1;
                 ^
3 verification failures

class lookupswitch1 {
  //@ ensures \result;
  //@ ensures i >= 0 ==> \result;
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = -5; i <= 5; i++)
      f(i);
    for(int i = 1; i <= 100000; i = i * 10)
      f(i);
  }
}



