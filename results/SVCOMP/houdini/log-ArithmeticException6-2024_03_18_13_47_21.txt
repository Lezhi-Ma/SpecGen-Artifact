public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom == 1;
  //@ requires denom != 1;
  //@ requires denom >= 1;
  //@ requires denom > 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom == 0;
  //@ requires denom != 0;
  //@ requires denom >= 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:36: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:25:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:36:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:5: verify: Precondition conjunct is false: denom == 1
  //@ requires denom == 1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom >= 1;
  //@ requires denom > 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom == 0;
  //@ requires denom != 0;
  //@ requires denom >= 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:35: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:24:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:35:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:6: verify: Precondition conjunct is false: denom >= 1
  //@ requires denom >= 1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom > 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom == 0;
  //@ requires denom != 0;
  //@ requires denom >= 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:23:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:34:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:6: verify: Precondition conjunct is false: denom > 1
  //@ requires denom > 1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom == 0;
  //@ requires denom != 0;
  //@ requires denom >= 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:33: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:22:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:33:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:8: verify: Precondition conjunct is false: denom == 0
  //@ requires denom == 0;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom >= 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:32: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:21:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:32:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:9: verify: Precondition conjunct is false: denom >= 0
  //@ requires denom >= 0;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom > 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:31: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:20:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:31:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:9: verify: Precondition conjunct is false: denom > 0
  //@ requires denom > 0;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom == -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:30: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:19:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:30:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:11: verify: Precondition conjunct is false: denom == -1
  //@ requires denom == -1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom != -1;
  //@ requires denom >= -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:29: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:18:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:29:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:12: verify: Precondition conjunct is false: denom >= -1
  //@ requires denom >= -1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom != -1;
  //@ requires denom > -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:28: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:17:) in method main
    arithmeticException6(-2);
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:28:
  public static boolean arithmeticException6(int denom) {
                        ^
/home/max/Documents/JMLGPT/tmp/ArithmeticException6.java:12: verify: Precondition conjunct is false: denom > -1
  //@ requires denom > -1;
                     ^
3 verification failures

public class ArithmeticException6 {

  //@ requires denom < 1;
  //@ requires denom <= 1;
  //@ requires denom != 1;
  //@ requires denom < 0;
  //@ requires denom <= 0;
  //@ requires denom != 0;
  //@ requires denom < -1;
  //@ requires denom <= -1;
  //@ requires denom != -1;
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures denom >= 0 ==> \result;
  //@ ensures denom >= 0 ==> !\result;
  public static boolean arithmeticException6(int denom) {
    try {
      int j = 10 / denom;
    } catch (ArithmeticException exc) {
      return false;
    }
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    arithmeticException6(-2);
    arithmeticException6(-1);
    arithmeticException6(0);
    arithmeticException6(1);
    arithmeticException6(2);
    arithmeticException6(3);
    arithmeticException6(4);
    arithmeticException6(114);
    arithmeticException6(-514);
  }

}


OpenJML not responding. Aborted.
