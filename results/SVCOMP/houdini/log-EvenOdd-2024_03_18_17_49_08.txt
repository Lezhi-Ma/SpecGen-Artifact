class EvenOdd {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:70: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:24:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:70:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:69: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:23:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:69:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:68: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:22:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:68:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:67: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:21:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:67:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != 1
    //@ requires n != 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:66: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:20:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:66:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:65: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:19:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:65:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:64: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:18:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:64:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:63: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:17:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:63:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:62: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:16:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:62:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:61: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:15:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:61:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:60: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:14:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:60:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:59: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:59:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:58: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:12:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:58:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:11:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:57:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:10:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:56:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method isOdd
          return false;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:11:
    //@ ensures \result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:9:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:55:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:6:) in method isOdd
          return false;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:10:
    //@ ensures n >= 0 ==> \result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:54:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:39:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:53:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:38:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:52:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:37:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:51:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:36:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Precondition conjunct is false: n != 1
    //@ requires n != 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:50:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:35:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:49:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:34:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:34: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:48:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:33:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:47:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:32:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:46:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:31:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:31: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:21: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:45:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:30:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:30: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:21: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:44:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:29:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:21: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:43:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
6 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:24:) in method isEven
          return isOdd(n - 1);
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:34:
    //@ ensures \result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method isOdd
          return true;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:11:
    //@ ensures !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:42:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
7 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:25:) in method isEven
          return false;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:31:
    //@ ensures n >= 0 ==> \result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method isOdd
          return true;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:11:
    //@ ensures !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:41:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
7 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method isOdd
          return true;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:11:
    //@ ensures !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:7:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:40:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method isOdd
          return true;
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:10:
    //@ ensures n >= 0 ==> !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:39: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:6:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:39:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:22:) in method isEven
          return isOdd(n - 1);
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:30:
    //@ ensures !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:38: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:38:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:22:) in method isEven
          return isOdd(n - 1);
          ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:29:
    //@ ensures n >= 0 ==> !\result;
        ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:37: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:37:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
5 verification failures

class EvenOdd {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:36: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:5:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:36:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:35: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:4:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:35:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
3 verification failures

class EvenOdd {
    //@ requires n > -1;
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:3:) in method main
      isOdd(i);
           ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:34:
    static boolean isOdd(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:2: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
3 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n >= 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:19:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:19:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:34:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
6 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:18:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:33: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:18:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:33:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
6 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 0;
    //@ requires n > 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:17:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:32: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:17:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:32:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
6 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:16:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:14: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:31: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:16:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:31:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
6 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 0;
    //@ requires n != -1;
    //@ requires n > -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:8: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:15:) in method isOdd
          return isEven(n - 1);
                       ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:8:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:14: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:30: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:15:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:30:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
6 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != 0;
    //@ requires n != -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:29: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:14:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:29:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
3 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    //@ requires n != -1;
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}

/home/max/Documents/JMLGPT/tmp/EvenOdd.java:28: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:13:) in method main
      isEven(i);
            ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/EvenOdd.java:28:
    static boolean isEven(int n) {
                   ^
/home/max/Documents/JMLGPT/tmp/EvenOdd.java:12: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
3 verification failures

class EvenOdd {
    static boolean isOdd(int n) {
        if (n == 0) {
          return false;
        } else if (n == 1) {
          return true;
        } else {
          return isEven(n - 1);
        }
    }
    
    static boolean isEven(int n) {
        if (n == 0) {
          return true;
        } else if (n == 1) {
          return false;
        } else {
          return isOdd(n - 1);
        }
    }


  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    for(int i = 0; i < 10; i++) {
      isOdd(i);
      isEven(i);
    }
  }
}


