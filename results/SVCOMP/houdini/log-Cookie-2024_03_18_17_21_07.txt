public class Cookie {

  //@ spec_public
  //@ non_null
  private String name;
  //@ spec_public
  //@ non_null
  private String value;

  //@ non_null
  //@ non_null
  public Cookie(String name, String value) {
    this.name = name;
    this.value = value;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getName() {
    return name;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getValue() {
    return value;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    Cookie c1 = new Cookie("123", "456");
    Cookie c2 = new Cookie("1g2a3", "ar56");
    Cookie c3 = new Cookie("$%^&gsjh", "98gbfn");
    c1.getName();
    c1.getValue();
    c2.getName();
    c2.getValue();
    c3.getName();
    c3.getValue();
  }
}


/home/max/Documents/JMLGPT/tmp/Cookie.java:11: error: NonNull is not a repeatable annotation type
  //@ non_null
      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:10: error: This JML modifier is not allowed for a constructor declaration
  //@ non_null
      ^
2 errors

public class Cookie {

  //@ spec_public
  //@ non_null
  private String name;
  //@ spec_public
  //@ non_null
  private String value;

  //@ non_null
  public Cookie(String name, String value) {
    this.name = name;
    this.value = value;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getName() {
    return name;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getValue() {
    return value;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    Cookie c1 = new Cookie("123", "456");
    Cookie c2 = new Cookie("1g2a3", "ar56");
    Cookie c3 = new Cookie("$%^&gsjh", "98gbfn");
    c1.getName();
    c1.getValue();
    c2.getName();
    c2.getValue();
    c3.getName();
    c3.getValue();
  }
}


/home/max/Documents/JMLGPT/tmp/Cookie.java:10: error: This JML modifier is not allowed for a constructor declaration
  //@ non_null
      ^
1 error

public class Cookie {

  //@ spec_public
  //@ non_null
  private String name;
  //@ spec_public
  //@ non_null
  private String value;

  public Cookie(String name, String value) {
    this.name = name;
    this.value = value;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getName() {
    return name;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getValue() {
    return value;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    Cookie c1 = new Cookie("123", "456");
    Cookie c2 = new Cookie("1g2a3", "ar56");
    Cookie c3 = new Cookie("$%^&gsjh", "98gbfn");
    c1.getName();
    c1.getValue();
    c2.getName();
    c2.getValue();
    c3.getName();
    c3.getValue();
  }
}


/home/max/Documents/JMLGPT/tmp/Cookie.java:18: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Cookie.java:16:) in method getName
    return name;
    ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Cookie.java:18:
  //@ ensures \fresh(\result);
      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Cookie.java:22:) in method getValue
    return value;
    ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Cookie.java:24:
  //@ ensures \fresh(\result);
      ^
4 verification failures

public class Cookie {

  //@ spec_public
  //@ non_null
  private String name;
  //@ spec_public
  //@ non_null
  private String value;

  public Cookie(String name, String value) {
    this.name = name;
    this.value = value;
  }

  //@ ensures \result != null;
  public String getName() {
    return name;
  }

  //@ ensures \result != null;
  //@ ensures \fresh(\result);
  public String getValue() {
    return value;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    Cookie c1 = new Cookie("123", "456");
    Cookie c2 = new Cookie("1g2a3", "ar56");
    Cookie c3 = new Cookie("$%^&gsjh", "98gbfn");
    c1.getName();
    c1.getValue();
    c2.getName();
    c2.getValue();
    c3.getName();
    c3.getValue();
  }
}


/home/max/Documents/JMLGPT/tmp/Cookie.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Cookie.java:21:) in method getValue
    return value;
    ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Cookie.java:23:
  //@ ensures \fresh(\result);
      ^
2 verification failures

public class Cookie {

  //@ spec_public
  //@ non_null
  private String name;
  //@ spec_public
  //@ non_null
  private String value;

  public Cookie(String name, String value) {
    this.name = name;
    this.value = value;
  }

  //@ ensures \result != null;
  public String getName() {
    return name;
  }

  //@ ensures \result != null;
  public String getValue() {
    return value;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    Cookie c1 = new Cookie("123", "456");
    Cookie c2 = new Cookie("1g2a3", "ar56");
    Cookie c3 = new Cookie("$%^&gsjh", "98gbfn");
    c1.getName();
    c1.getValue();
    c2.getName();
    c2.getValue();
    c3.getName();
    c3.getValue();
  }
}



