class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size == 1;
  //@ requires size != 1;
  //@ requires size >= 1;
  //@ requires size > 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size == 0;
  //@ requires size != 0;
  //@ requires size >= 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:69: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:49:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:49: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:69:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:8: verify: Precondition conjunct is false: size == 1
  //@ requires size == 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size >= 1;
  //@ requires size > 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size == 0;
  //@ requires size != 0;
  //@ requires size >= 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:68: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:48:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:48: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:68:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:9: verify: Precondition conjunct is false: size >= 1
  //@ requires size >= 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size > 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size == 0;
  //@ requires size != 0;
  //@ requires size >= 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:67: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:47:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:47: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:67:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:9: verify: Precondition conjunct is false: size > 1
  //@ requires size > 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size == 0;
  //@ requires size != 0;
  //@ requires size >= 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:66: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:46:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:66:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:11: verify: Precondition conjunct is false: size == 0
  //@ requires size == 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size >= 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:65: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:45:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:65:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:12: verify: Precondition conjunct is false: size >= 0
  //@ requires size >= 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size > 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:64: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:44:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:64:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:12: verify: Precondition conjunct is false: size > 0
  //@ requires size > 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size == -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:63: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:43:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:63:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14: verify: Precondition conjunct is false: size == -1
  //@ requires size == -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ requires size >= -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:62: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:42:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:62:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15: verify: Precondition conjunct is false: size >= -1
  //@ requires size >= -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ requires size > -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:61: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41:) in method main
    func(-2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:61:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15: verify: Precondition conjunct is false: size > -1
  //@ requires size > -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result < size;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41:
  //@ ensures \result < size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result <= size;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40:
  //@ ensures \result <= size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result == size;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:39: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:39:
  //@ ensures \result == size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result == 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:20:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:38:
  //@ ensures \result == 1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result >= 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:37: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:37:
  //@ ensures \result >= 1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result > 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:36: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:36:
  //@ ensures \result > 1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result == 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:23:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:35:
  //@ ensures \result == 0;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result >= 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:34:
  //@ ensures \result >= 0;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result > 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:33:
  //@ ensures \result > 0;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result < -1;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:32:
  //@ ensures \result < -1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result != -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:26:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:31:
  //@ ensures \result != -1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures \result > -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:30:
  //@ ensures \result > -1;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size < -1;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:28:) in method main
    func(-1);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:49:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:12: verify: Precondition conjunct is false: size < -1
  //@ requires size < -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size <= -1;
  //@ requires size != -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27:) in method main
    func(-1);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:48:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13: verify: Precondition conjunct is false: size != -1
  //@ requires size != -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size <= -1;
  //@ ensures \result != size;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:27:
  //@ ensures \result != size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size <= -1;
  //@ ensures \result >= size;
  //@ ensures \result > size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:26:
  //@ ensures \result > size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size < 0;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size <= -1;
  //@ ensures \result >= size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24:) in method main
    func(0);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:46:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:9: verify: Precondition conjunct is false: size < 0
  //@ requires size < 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ requires size != 0;
  //@ requires size <= -1;
  //@ ensures \result >= size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:23:) in method main
    func(0);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:45:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:10: verify: Precondition conjunct is false: size != 0
  //@ requires size != 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ requires size <= -1;
  //@ ensures \result >= size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:22:) in method main
    func(0);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:44:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:10: verify: Precondition conjunct is false: size <= -1
  //@ requires size <= -1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ ensures \result >= size;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:10:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:22:
  //@ ensures \result >= size;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  //@ ensures size >= 0 ==> \result >= 0;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:19:) in method func
    if (size < 8) return -1;
                  ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21:
  //@ ensures size >= 0 ==> \result >= 0;
      ^
2 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size < 1;
  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:19:) in method main
    func(1);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:42:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:6: verify: Precondition conjunct is false: size < 1
  //@ requires size < 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size <= 1;
  //@ requires size != 1;
  //@ requires size <= 0;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:18:) in method main
    func(1);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:41:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:7: verify: Precondition conjunct is false: size != 1
  //@ requires size != 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size <= 1;
  //@ requires size <= 0;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:17:) in method main
    func(1);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:7: verify: Precondition conjunct is false: size <= 0
  //@ requires size <= 0;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ requires size <= 1;
  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:16:) in method main
    func(2);
        ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:40:
  public static int func(int size) {
                    ^
/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:6: verify: Precondition conjunct is false: size <= 1
  //@ requires size <= 1;
                    ^
3 verification failures

class ArrayWhatNot {

  class what_not {
  };

  //@ ensures \result < 1;
  //@ ensures \result <= 1;
  //@ ensures \result != 1;
  //@ ensures \result < 0;
  //@ ensures \result <= 0;
  //@ ensures \result != 0;
  //@ ensures \result <= -1;
  //@ ensures \result == -1;
  //@ ensures \result >= -1;
  public static int func(int size) {
    if (size < 8) return -1;

    int int_array[] = new int[size];

    for (int i = 0; i < size; i++)
      int_array[i] = i;

    if (int_array[7] != 7)
      return 0;

    what_not what_not_array[] = new what_not[size];

    if (what_not_array.length != size)
      return 0;
    return 1;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    func(-2);
    func(-1);
    func(0);
    func(1);
    func(2);
    func(3);
    func(4);
    func(114);
    func(514);    
    func(580);
    func(1919);
    func(810);
    func(-514);
  }
}


/home/max/Documents/JMLGPT/tmp/ArrayWhatNot.java:21: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method func
      int_array[i] = i;
               ^
1 verification failure

