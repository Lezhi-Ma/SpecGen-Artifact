class GCD {
    //@ requires y1 < 1;
    //@ requires y1 <= 1;
    //@ requires y1 == 1;
    //@ requires y1 != 1;
    //@ requires y1 >= 1;
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:93: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:76:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:76: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:93:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 < 1
    //@ requires y1 < 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 <= 1;
    //@ requires y1 == 1;
    //@ requires y1 != 1;
    //@ requires y1 >= 1;
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:92: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:75:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:75: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:92:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 <= 1
    //@ requires y1 <= 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 == 1;
    //@ requires y1 != 1;
    //@ requires y1 >= 1;
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:91: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:74:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:74: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:91:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 == 1
    //@ requires y1 == 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 != 1;
    //@ requires y1 >= 1;
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:90: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:73:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:73: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:90:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 != 1
    //@ requires y1 != 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 >= 1;
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:89: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:72:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:72: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:89:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 >= 1
    //@ requires y1 >= 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 > 1;
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:88: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:71:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:71: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:88:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 > 1
    //@ requires y1 > 1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 < 0;
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:87: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:70:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:70: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:87:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 < 0
    //@ requires y1 < 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 <= 0;
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:86: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:69:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:69: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:86:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 <= 0
    //@ requires y1 <= 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 == 0;
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:85: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:68:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:68: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:85:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 == 0
    //@ requires y1 == 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 != 0;
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:84: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:67:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:67: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:84:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 != 0
    //@ requires y1 != 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 >= 0;
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:83: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:66:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:66: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:83:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 >= 0
    //@ requires y1 >= 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 > 0;
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:82: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:65:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:65: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:82:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 > 0
    //@ requires y1 > 0;
                    ^
3 verification failures

class GCD {
    //@ requires y1 < -1;
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:81: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:64:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:64: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:81:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 < -1
    //@ requires y1 < -1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 <= -1;
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:80: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:63:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:63: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:80:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 <= -1
    //@ requires y1 <= -1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 == -1;
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:79: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:62:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:62: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:79:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 == -1
    //@ requires y1 == -1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 != -1;
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:78: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:61:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:61: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:78:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 != -1
    //@ requires y1 != -1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 >= -1;
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:77: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:60:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:60: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:77:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 >= -1
    //@ requires y1 >= -1;
                    ^
3 verification failures

class GCD {
    //@ requires y1 > -1;
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:76: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:59:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:59: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:76:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y1 > -1
    //@ requires y1 > -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 < y1;
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:75: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:58:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:58: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:75:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 < y1
    //@ requires y2 < y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 <= y1;
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:74: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:57:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:57: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:74:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 <= y1
    //@ requires y2 <= y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 == y1;
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:73: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:56:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:56: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:73:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 == y1
    //@ requires y2 == y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 != y1;
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:72: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:55:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:55: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:72:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != y1
    //@ requires y2 != y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 >= y1;
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:71: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:54:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:54: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:71:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 >= y1
    //@ requires y2 >= y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 > y1;
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:70: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:53:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:53: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:70:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 > y1
    //@ requires y2 > y1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 < 1;
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:69: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:52:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:52: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:69:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 < 1
    //@ requires y2 < 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 <= 1;
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:68: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:51:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:51: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:68:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 <= 1
    //@ requires y2 <= 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 == 1;
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:67: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:50:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:50: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:67:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 == 1
    //@ requires y2 == 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 != 1;
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:66: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:49:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:49: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:66:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != 1
    //@ requires y2 != 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 >= 1;
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:65: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:48:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:48: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:65:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 >= 1
    //@ requires y2 >= 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 > 1;
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:64: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:47:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:47: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:64:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 > 1
    //@ requires y2 > 1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 < 0;
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:63: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:46:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:63:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 < 0
    //@ requires y2 < 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 <= 0;
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:62: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:45:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:62:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 <= 0
    //@ requires y2 <= 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 == 0;
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:61: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:44:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:61:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 == 0
    //@ requires y2 == 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 != 0;
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:60: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:43:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:60:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != 0
    //@ requires y2 != 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 >= 0;
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:59: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:42:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:59:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 >= 0
    //@ requires y2 >= 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 > 0;
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:58: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:41:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:58:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 > 0
    //@ requires y2 > 0;
                    ^
3 verification failures

class GCD {
    //@ requires y2 < -1;
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:40:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:57:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 < -1
    //@ requires y2 < -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 <= -1;
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:39:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:56:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 <= -1
    //@ requires y2 <= -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 == -1;
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:38:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:55:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 == -1
    //@ requires y2 == -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result < y2;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:39: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:5:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:39:
    //@ ensures \result < y2;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:37:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:54:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result != y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:38:
    //@ ensures \result != y2;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:36:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:53:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result > y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:37: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:8:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:37:
    //@ ensures \result > y2;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:35:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:52:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result < y1;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:36: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:8:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:36:
    //@ ensures \result < y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:34:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:34: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:51:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result <= y1;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:8:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:35:
    //@ ensures \result <= y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:33:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:50:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result == y1;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:8:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:34:
    //@ ensures \result == y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:32:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:49:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:13:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:33:
    //@ ensures \result == 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:31:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:31: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:48:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:14:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:32:
    //@ ensures \result >= 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:30:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:30: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:47:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:14:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:31:
    //@ ensures \result > 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:29:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:46:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:14:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:30:
    //@ ensures \result < 0;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:28:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:45:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:16:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:29:
    //@ ensures \result != 0;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:27:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:44:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:17:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:28:
    //@ ensures \result > 0;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:26:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:43:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:27: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:17:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:27:
    //@ ensures \result < -1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:25:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:42:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:17:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:26:
    //@ ensures \result <= -1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:24:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:41:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:25: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:17:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:25:
    //@ ensures \result == -1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:23:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:40:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result == y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:6:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:24:
    //@ ensures \result == y2;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:39: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:22:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:39:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:6:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:23:
    //@ ensures \result >= y2;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:38: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:21:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:38:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result != y1;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:6:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:22:
    //@ ensures \result != y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:37: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:20:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:37:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result > y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:21:
    //@ ensures \result > y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:36: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:19:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:36:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return y1;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:23:
    //@ ensures \result < 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:35: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:18:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:35:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result <= 1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return y1;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:22:
    //@ ensures \result <= 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:17:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:34:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result != 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return y1;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:21:
    //@ ensures \result != 1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:33: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:16:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:33:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:20: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return y1;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:20:
    //@ ensures \result <= 0;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:32: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:15:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:32:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result == 0;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:7:) in method gcd
          return y1;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:19:
    //@ ensures \result == 0;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:31: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:14:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:31:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= y1;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:6:) in method gcd
          return gcd(y1 - y2, y2);
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:21:
    //@ ensures \result >= y1;
        ^
/home/max/Documents/JMLGPT/tmp/GCD.java:30: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:13:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:30:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
5 verification failures

class GCD {
    //@ requires y2 != -1;
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:29: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:12:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:29:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 != -1
    //@ requires y2 != -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 >= -1;
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:28: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:11:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:28:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 >= -1
    //@ requires y2 >= -1;
                    ^
3 verification failures

class GCD {
    //@ requires y2 > -1;
    //@ ensures \result <= y2;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:27: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/GCD.java:10:) in method main
          gcd(i,j);
             ^
/home/max/Documents/JMLGPT/tmp/GCD.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:27:
    static int gcd(int y1, int y2) {
               ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Precondition conjunct is false: y2 > -1
    //@ requires y2 > -1;
                    ^
3 verification failures

class GCD {
    //@ ensures \result <= y2;
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}

/home/max/Documents/JMLGPT/tmp/GCD.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/GCD.java:2:) in method gcd
          return 0;
          ^
/home/max/Documents/JMLGPT/tmp/GCD.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/GCD.java:11:
    //@ ensures \result <= y2;
        ^
2 verification failures

class GCD {
    //@ ensures \result >= 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    //@ ensures y1 >= 0 ==> \result >= 0;
    //@ ensures y2 >= 0 ==> \result >= 0;
    static int gcd(int y1, int y2) {
        if (y1 <= 0 || y2 <= 0) {
          return 0;
        }
        if (y1 == y2) {
          return y1;
        }
        if (y1 > y2) {
          return gcd(y1 - y2, y2);
        }
        return gcd(y1, y2 - y1);
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
      for(int i = -5; i <= 10; i += 1) {
        for(int j = -5; j <= 10; j += 1) {
          gcd(i,j);
          gcd(j,i);
        }
      }
    }
}


