public class StringCompare05 {
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
  //@ non_null
  //@ ensures \result;
  //@ ensures !\result;
  //@ exsures (java.lang.NullPointerException ex) (false);
  //@ ensures string == null ==> \result;
  //@ ensures string == null ==> !\result;
  //@ ensures string != null ==> \result;
  //@ ensures string != null ==> !\result;
  public static boolean f (String string) {
    String s1 = new String(string);
    return s1 == string;
  }

  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123");
    f("#$%^#*123");
    f("fsgdhj");
    f("DiffBlue L1mitted");
    f("DiffBlue Limitted");
    f("HiiffblTe Limited");
    f("");
  }
}


/home/max/Documents/JMLGPT/tmp/StringCompare05.java:2: error: illegal start of type
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:2: error: Embedded block comment must terminate within the JML line comment
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
                                               ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:3: error: illegal start of type
  //@ non_null
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:4: error: ';' expected
  //@ ensures \result;
             ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:4: error: Token \result is not a type
  //@ ensures \result;
              ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:16: error: illegal start of type
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:16: error: unclosed comment
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
                                               ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:29: error: reached end of file while parsing
8 errors

public class StringCompare05 {
  //@ non_null
  //@ ensures \result;
  //@ ensures !\result;
  //@ exsures (java.lang.NullPointerException ex) (false);
  //@ ensures string == null ==> \result;
  //@ ensures string == null ==> !\result;
  //@ ensures string != null ==> \result;
  //@ ensures string != null ==> !\result;
  public static boolean f (String string) {
    String s1 = new String(string);
    return s1 == string;
  }

  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123");
    f("#$%^#*123");
    f("fsgdhj");
    f("DiffBlue L1mitted");
    f("DiffBlue Limitted");
    f("HiiffblTe Limited");
    f("");
  }
}


/home/max/Documents/JMLGPT/tmp/StringCompare05.java:2: error: No modifiers are allowed prior to a lightweight specification case
  //@ non_null
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:15: error: illegal start of type
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:15: error: unclosed comment
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
                                               ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:28: error: reached end of file while parsing
4 errors

public class StringCompare05 {
  //@ ensures \result;
  //@ ensures !\result;
  //@ exsures (java.lang.NullPointerException ex) (false);
  //@ ensures string == null ==> \result;
  //@ ensures string == null ==> !\result;
  //@ ensures string != null ==> \result;
  //@ ensures string != null ==> !\result;
  public static boolean f (String string) {
    String s1 = new String(string);
    return s1 == string;
  }

  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123");
    f("#$%^#*123");
    f("fsgdhj");
    f("DiffBlue L1mitted");
    f("DiffBlue Limitted");
    f("HiiffblTe Limited");
    f("");
  }
}


/home/max/Documents/JMLGPT/tmp/StringCompare05.java:14: error: illegal start of type
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
      ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:14: error: unclosed comment
  //@ */ throws java.lang.NullPointerException /* Houdini inferred exceptions
                                               ^
/home/max/Documents/JMLGPT/tmp/StringCompare05.java:27: error: reached end of file while parsing
3 errors

public class StringCompare05 {
  //@ ensures \result;
  //@ ensures !\result;
  //@ exsures (java.lang.NullPointerException ex) (false);
  //@ ensures string == null ==> \result;
  //@ ensures string == null ==> !\result;
  //@ ensures string != null ==> \result;
  //@ ensures string != null ==> !\result;
  public static boolean f (String string) {
    String s1 = new String(string);
    return s1 == string;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123");
    f("#$%^#*123");
    f("fsgdhj");
    f("DiffBlue L1mitted");
    f("DiffBlue Limitted");
    f("HiiffblTe Limited");
    f("");
  }
}


OpenJML not responding. Aborted.
