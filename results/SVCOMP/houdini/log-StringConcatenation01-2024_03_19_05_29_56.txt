public class StringConcatenation01 {
  //@ non_null
  //@ non_null
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures arg1 == null ==> \result;
  //@ ensures arg1 == null ==> !\result;
  //@ ensures arg1 != null ==> \result;
  //@ ensures arg1 != null ==> !\result;
  //@ ensures arg2 == null ==> \result;
  //@ ensures arg2 == null ==> !\result;
  //@ ensures arg2 != null ==> \result;
  //@ ensures arg2 != null ==> !\result;
  public static boolean f(String arg1, String arg2) {
    String[] args = new String[2];
    args[0] = arg1;
    args[1] = arg2;

    String s1 = args[0];
    String s2 = args[1];

    if (!(s1.equals(args[0]))) return false;
    if (!(s2.equals(args[1]))) return false;

    String tmp = s1.concat(s2);
    if (!(tmp.equals(args[0] + args[1]))) return false;

    tmp = s1;
    if (!(tmp.equals(args[0])))
      return false;
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123", "#$%^&*123");
    f("#$%^#*123", "#$%^#*123");
    f("fsgdhj", "fsgdhj");
    f("fsgdhj", "fsadhj");
    f("DiffBlue L1mitted", "DiffBlue L1mitted");
    f("DiffBlue Limitted", "DiffBlue L1mitted");
    f("HiiffblTe Limited", "");
  }
}


/home/max/Documents/JMLGPT/tmp/StringConcatenation01.java:2: error: No modifiers are allowed prior to a lightweight specification case
  //@ non_null
      ^
1 error

public class StringConcatenation01 {
  //@ non_null
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures arg1 == null ==> \result;
  //@ ensures arg1 == null ==> !\result;
  //@ ensures arg1 != null ==> \result;
  //@ ensures arg1 != null ==> !\result;
  //@ ensures arg2 == null ==> \result;
  //@ ensures arg2 == null ==> !\result;
  //@ ensures arg2 != null ==> \result;
  //@ ensures arg2 != null ==> !\result;
  public static boolean f(String arg1, String arg2) {
    String[] args = new String[2];
    args[0] = arg1;
    args[1] = arg2;

    String s1 = args[0];
    String s2 = args[1];

    if (!(s1.equals(args[0]))) return false;
    if (!(s2.equals(args[1]))) return false;

    String tmp = s1.concat(s2);
    if (!(tmp.equals(args[0] + args[1]))) return false;

    tmp = s1;
    if (!(tmp.equals(args[0])))
      return false;
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123", "#$%^&*123");
    f("#$%^#*123", "#$%^#*123");
    f("fsgdhj", "fsgdhj");
    f("fsgdhj", "fsadhj");
    f("DiffBlue L1mitted", "DiffBlue L1mitted");
    f("DiffBlue Limitted", "DiffBlue L1mitted");
    f("HiiffblTe Limited", "");
  }
}


/home/max/Documents/JMLGPT/tmp/StringConcatenation01.java:2: error: No modifiers are allowed prior to a lightweight specification case
  //@ non_null
      ^
1 error

public class StringConcatenation01 {
  //@ ensures \result;
  //@ ensures !\result;
  //@ ensures arg1 == null ==> \result;
  //@ ensures arg1 == null ==> !\result;
  //@ ensures arg1 != null ==> \result;
  //@ ensures arg1 != null ==> !\result;
  //@ ensures arg2 == null ==> \result;
  //@ ensures arg2 == null ==> !\result;
  //@ ensures arg2 != null ==> \result;
  //@ ensures arg2 != null ==> !\result;
  public static boolean f(String arg1, String arg2) {
    String[] args = new String[2];
    args[0] = arg1;
    args[1] = arg2;

    String s1 = args[0];
    String s2 = args[1];

    if (!(s1.equals(args[0]))) return false;
    if (!(s2.equals(args[1]))) return false;

    String tmp = s1.concat(s2);
    if (!(tmp.equals(args[0] + args[1]))) return false;

    tmp = s1;
    if (!(tmp.equals(args[0])))
      return false;
    return true;
  }

  //@ requires \nonnullelements(args);
  public static void main(String[] args) {
    f("#$%^&*123", "#$%^&*123");
    f("#$%^#*123", "#$%^#*123");
    f("fsgdhj", "fsgdhj");
    f("fsgdhj", "fsadhj");
    f("DiffBlue L1mitted", "DiffBlue L1mitted");
    f("DiffBlue Limitted", "DiffBlue L1mitted");
    f("HiiffblTe Limited", "");
  }
}


OpenJML not responding. Aborted.
