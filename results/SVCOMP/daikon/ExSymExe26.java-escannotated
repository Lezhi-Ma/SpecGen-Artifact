class Main {

  /*@ ensures \result == true; */
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  /*@ ensures (z <= 0)  ==  (\old(z) <= -1); */
  /*@ ensures (z <= 0)  ==  (\result == false); */
  /*@ ensures (z <= 0)  ==>  (\old(this) != null); */
  /*@ ensures (z >= 1)  ==  (\old(z) >= 0); */
  /*@ ensures (z >= 1)  ==  (\result == true); */
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}

class ExSymExe26 {
  /*@ requires args != null; */
  /*@ requires \typeof(args) == \type(java.lang.String[]); */
  /*@ requires (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  /*@ ensures (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  public static void main(String[] args) {
    Main e = new Main();
    for(int i = -5; i <= 5; i++) {
      for(int j = -5; j <= 5; j++) {
        Main.f();
        e.test(i, j, i - j);
        e.test(j, i, j + i);
      }
    }
  }
}
