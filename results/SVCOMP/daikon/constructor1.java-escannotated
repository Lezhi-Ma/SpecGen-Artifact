class sub {}
;

class A {
  /*@ invariant this.my_field == 0 || this.my_field == 2; */
  /*@ invariant this.my_sub == null; */
  /*@ ensures this.my_field == 0; */
  A() {}

  /*@ requires param == 1; */
  /*@ ensures this.my_field == 2; */
  A(int param) {
    assert (my_field == 0);
    my_field = 2;
  }

  /*@ spec_public */ int my_field;
  /*@ spec_public */ sub my_sub;

  /*@ spec_public */ static int something_static = 3;
}
;

class constructor1 {
  /*@ requires args != null; */
  /*@ requires \typeof(args) == \type(java.lang.String[]); */
  /*@ requires (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  /*@ ensures (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  public static void main(String[] args) {
    A some_a = new A();
    assert some_a.my_field == 0;
    assert some_a.my_sub == null;
    assert some_a.something_static == 3;
    A other_a = new A(1);
    assert other_a.my_field == 2;
    assert other_a.my_sub == null;
  }
}
;
