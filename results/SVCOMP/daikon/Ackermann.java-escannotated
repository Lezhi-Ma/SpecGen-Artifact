public class Ackermann {

  /*@ requires m >= 0; */
  /*@ requires n >= 0; */
  /*@ ensures \result > \old(n); */
  public static int ack(int m, int n) {
    if (m == 0) {
      return n + 1;
    }
    if (n == 0) {
      return ack(m - 1, 1);
    }
    return ack(m - 1, ack(m, n - 1));
  }

  /*@ requires args != null; */
  /*@ requires \typeof(args) == \type(java.lang.String[]); */
  /*@ requires (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  /*@ ensures (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
  public static void main(String[] args) {
    ack(0, 0);
    ack(1, 0);
    ack(0, 1);
    ack(1, 1);
    ack(1, 2);
    ack(2, 1);
    ack(2, 2);
    ack(0, 2);
    ack(2, 0);
    ack(2, 3);
    ack(3, 2);
    ack(1, 3);
    ack(3, 1);
    ack(3, 0);
    ack(3, 2);
    ack(2, 3);
    ack(0, 3);
    ack(3, 3);
  }

}
