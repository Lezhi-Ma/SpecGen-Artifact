import java.util.Random;

class assert6 {
  /*@ public normal_behavior
    @    assignable \nothing;
    @    ensures 0 <= \result && \result <= Integer.MAX_VALUE;
    @*/
  public static int getRandomInt() {
    return new Random().nextInt();
  }

  /*@ public normal_behavior
    @    ensures getRandomInt() >= 1000 ==> \result;
    @    ensures !(getRandomInt() >= 1000) ==> \result;
    @*/
  public static boolean checkRandomInt() {
    int i = getRandomInt();

    if (i >= 1000) {
      if (!(i >= 1000)) {
        assert false;
      }
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/assert6.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/assert6.java:6:) in method getRandomInt
    return new Random().nextInt();
    ^
/home/max/Documents/JMLGPT/tmp/assert6.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/assert6.java:9:
    @    ensures 0 <= \result && \result <= Integer.MAX_VALUE;
         ^
2 verification failures

