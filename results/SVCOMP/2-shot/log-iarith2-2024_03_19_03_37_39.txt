class iarith2 {
    //@ ensures \result == -((3 & 1 | 4) ^ 4 << 2 >> 1 >>> 1);
    private static int i() {
        int value = 3;
        value &= 1;
        value |= 4;
        value ^= 4;
        value <<= 2;
        value >>= 1;
        value = -value;
        value >>>= 1;
        return value;
    }

    //@ ensures \result == -((3L & 1L | 4L) ^ 4L << 2L >> 1L >>> 1L);
    private static long l() {
        long value = 3L;
        value &= 1L;
        value |= 4L;
        value ^= 4L;
        value <<= 2L;
        value >>= 1L;
        value = -value;
        value >>>= 1L;
        return value;
    }

    //@ ensures \result == \nothing;
    private static void s() {
        short lhs = 127;
        short rhs = 32767;
        if (lhs < rhs) {
            return;
        }
        assert false;
    }
}

