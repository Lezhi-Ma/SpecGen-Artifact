public class BinaryTree {
  private class Node {
    int value;
    Node left;
    Node right;

    Node(int v, Node l, Node r) {
      value = v;
      left = l;
      right = r;
    }
  }

  private Node root = null;

  //@ ensures root != null;
  public void insert(int v) {
    if (root == null) {
      root = new Node(v, null, null);
      return;
    }

    Node curr = root;
    while (true) {
      if (curr.value < v) {
        if (curr.right != null) {
          curr = curr.right;
        } else {
          curr.right = new Node(v, null, null);
          break;
        }
      } else if (curr.value > v) {
        if (curr.left != null) {
          curr = curr.left;
        } else {
          curr.left = new Node(v, null, null);
          break;
        }
      } else {
        break;
      }
    }
  }

  //@ requires root != null;
  //@ ensures \result == (\exists Node n; n != null; n.value == v);
  public boolean search(int v) {
    Node curr = root;
    while (curr != null) {
      if (curr.value == v) {
        return true;
      } else if (curr.value < v) {
        curr = curr.right;
      } else {
        curr = curr.left;
      }
    }
    return false;
  }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:16: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures root != null;
              ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:45: error: An identifier with private visibility may not be used in a requires clause with public visibility
  //@ requires root != null;
               ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:46: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (\exists Node n; n != null; n.value == v);
                                                      ^
3 errors

