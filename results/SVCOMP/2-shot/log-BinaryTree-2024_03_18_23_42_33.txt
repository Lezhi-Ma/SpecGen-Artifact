public class BinaryTree {
  /** Internal class representing a Node in the tree. */
  private class Node {
    int value;
    Node left;
    Node right;

    Node(int v, Node l, Node r) {
      value = v;
      left = l;
      right = r;
    }
  }

  private Node root = null;

  /** Inserts a value in to the tree. */
  //@ requires true;
  //@ ensures (\exists Node n; n.value == v; treeContains(root, n));
  public void insert(int v) {

    if (root == null) {
      root = new Node(v, null, null);
      return;
    }

    Node curr = root;
    while (true) {
      if (curr.value < v) {
        if (curr.right != null) {
          curr = curr.right;
        } else {
          curr.right = new Node(v, null, null);
          break;
        }
      } else if (curr.value > v) {
        if (curr.left != null) {
          curr = curr.left;
        } else {
          curr.left = new Node(v, null, null);
          break;
        }
      } else {
        break;
      }
    }
  }

  /** Searches for a value in the tree. */
  //@ requires true;
  //@ ensures \result <==> (\exists Node n; n.value == v; treeContains(root, n));
  public boolean search(int v) {
    Node curr = root;
    while (curr != null) {
      if (curr.value == v) {
        return true;
      } else if (curr.value < v) {
        curr = curr.right;
      } else {
        curr = curr.left;
      }
    }
    return false;
  }

  //@ requires true;
  //@ ensures \result <==> (node == null || node.value == v || treeContains(node.left, v) || treeContains(node.right, v));
  private boolean treeContains(Node node, int v) {
    if (node == null) {
      return false;
    }
    if (node.value == v) {
      return true;
    }
    return treeContains(node.left, v) || treeContains(node.right, v);
  }
}
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures (\exists Node n; n.value == v; treeContains(root, n));
                                ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures (\exists Node n; n.value == v; treeContains(root, n));
                                                          ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:19: error: incompatible types: BinaryTree.Node cannot be converted to int
  //@ ensures (\exists Node n; n.value == v; treeContains(root, n));
                                                                ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> (\exists Node n; n.value == v; treeContains(root, n));
                                             ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> (\exists Node n; n.value == v; treeContains(root, n));
                                                                       ^
/home/max/Documents/JMLGPT/tmp/BinaryTree.java:51: error: incompatible types: BinaryTree.Node cannot be converted to int
  //@ ensures \result <==> (\exists Node n; n.value == v; treeContains(root, n));
                                                                             ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
6 errors

