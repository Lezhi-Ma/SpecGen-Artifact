class Main {
    //@ ensures \result ==> (\forall double x; 0.0 <= x && x <= Long.MAX_VALUE / 2; test(x));
    //@ ensures !\result ==> (\exists double x; 0.0 <= x && x <= Long.MAX_VALUE / 2; !test(x));
    public static boolean f() {
        double x = Verifier.nondetDouble();
        if (x >= 0.0 && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ requires 0.0 <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result ==> x > 0;
    //@ ensures !\result ==> x <= 0;
    public boolean test(double x) {

        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2L.java:2: error: non-static method test(double) cannot be referenced from a static context
    //@ ensures \result ==> (\forall double x; 0.0 <= x && x <= Long.MAX_VALUE / 2; test(x));
                                                                                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2L.java:3: error: non-static method test(double) cannot be referenced from a static context
    //@ ensures !\result ==> (\exists double x; 0.0 <= x && x <= Long.MAX_VALUE / 2; !test(x));
                                                                                      ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2L.java:5: error: cannot find symbol
        double x = Verifier.nondetDouble();
                   ^
  symbol:   variable Verifier
  location: class Main
3 errors

