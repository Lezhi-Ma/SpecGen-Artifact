class Main {
  static int field;

  //@ requires arg >= 0;
  //@ ensures \result ==> field == arg % 100;
  //@ ensures \result ==> test(3, field);
  //@ ensures !\result ==> true;
  public static boolean f(int arg) {
    if (arg < 0)
      return true;
    int x = 3;
    Main inst = new Main();
    field = arg % 100;
    return inst.test(x, field);
  }
  
  //@ requires true;
  //@ ensures \result ==> System.out.println("Testing ExSymExe11");
  //@ ensures \result ==> z == -x && x == z * x;
  //@ ensures \result ==> (z <= 0 ==> System.out.println("branch FOO1")) && (z > 0 ==> System.out.println("branch FOO2"));
  //@ ensures \result ==> (y <= 0 ==> (System.out.println("branch BOO1") && \result == false)) && (y > 0 ==> (System.out.println("branch BOO2") && \result == true));
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe11");
    int y = 3;
    z = -x;
    x = z * x;
    if (z <= 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (y <= 0) {
      System.out.println("branch BOO1");
      return false;
    } else System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:5: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> field == arg % 100;
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:6: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> test(3, field);
                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:6: error: non-static method test(int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, field);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:18: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> System.out.println("Testing ExSymExe11");
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:20: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> (z <= 0 ==> System.out.println("branch FOO1")) && (z > 0 ==> System.out.println("branch FOO2"));
                                                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:20: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> (z <= 0 ==> System.out.println("branch FOO1")) && (z > 0 ==> System.out.println("branch FOO2"));
                                                                                                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:21: error: cannot find symbol
  //@ ensures \result ==> (y <= 0 ==> (System.out.println("branch BOO1") && \result == false)) && (y > 0 ==> (System.out.println("branch BOO2") && \result == true));
                           ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:21: error: 'void' type not allowed here
  //@ ensures \result ==> (y <= 0 ==> (System.out.println("branch BOO1") && \result == false)) && (y > 0 ==> (System.out.println("branch BOO2") && \result == true));
                                                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:21: error: cannot find symbol
  //@ ensures \result ==> (y <= 0 ==> (System.out.println("branch BOO1") && \result == false)) && (y > 0 ==> (System.out.println("branch BOO2") && \result == true));
                                                                                                   ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:21: error: 'void' type not allowed here
  //@ ensures \result ==> (y <= 0 ==> (System.out.println("branch BOO1") && \result == false)) && (y > 0 ==> (System.out.println("branch BOO2") && \result == true));
                                                                                                                                ^
10 errors

