class Main {

  //@ ensures \result == true <==> test(a, b, a);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ ensures \result == true <==> (y == z + 1 && z == z0 + x && x == x0 + 3 && (z > 0 ==> (\result == true && System.out.println("branch FOO1")) && (z <= 0 ==> (\result == false && System.out.println("branch FOO2"))) && (x > 0 ==> System.out.println("branch BOO1") && \result == true) && (x <= 0 ==> \result == false));
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe25");
    int z0 = z;
    int x0 = x;
    y = z + 1;
    z = z + x;
    x = x + 3;
    if (z > 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x > 0) System.out.println("branch BOO1");
    else {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe25.java:11: error: ')' expected
  //@ ensures \result == true <==> (y == z + 1 && z == z0 + x && x == x0 + 3 && (z > 0 ==> (\result == true && System.out.println("branch FOO1")) && (z <= 0 ==> (\result == false && System.out.println("branch FOO2"))) && (x > 0 ==> System.out.println("branch BOO1") && \result == true) && (x <= 0 ==> \result == false));
                                                                                                                                                                                                                                                                                                                               ^
1 error

