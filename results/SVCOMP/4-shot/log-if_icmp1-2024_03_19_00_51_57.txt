class if_icmp1 {
  //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  private static boolean f(int i, int j) {
    if (i == j) {
      return false;
    }
    if (i >= j) {
      return false;
    }
    if (j > i) {
      return true;
    } else {
      return false;
    }
    if (j <= i) {
      return false;
    }
    if (j < i) {
      return false;
    } else {
      return true;
    }
  }

  //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
  //@ ensures \result == -1 <==> i + 1 < 0;
  //@ ensures \result == f(i, i + 1);
  public static int fun(int i) {
    if (i + 1 < 0) return -1;
    return f(i, i + 1);
  }
}
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:3: error: incomparable types: boolean and int
  //@ ensures \result == -1 <==> i + 1 < 0;
                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:29: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == f(i, i + 1);
                         ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:29: error: incomparable types: int and boolean
  //@ ensures \result == f(i, i + 1);
                      ^
/home/max/Documents/JMLGPT/tmp/if_icmp1.java:32: error: incompatible types: boolean cannot be converted to int
    return f(i, i + 1);
            ^
4 errors

