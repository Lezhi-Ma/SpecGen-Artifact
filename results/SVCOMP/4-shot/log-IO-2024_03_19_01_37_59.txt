import java.io.*;
import java.sql.*;
import java.util.regex.*;

public class IO {

  private static final String dbUrl = "";
  private static final String dbUsername = "";
  private static final String dbPassword = "";

  //@ ensures System.out.print(str);
  public static void writeString(String str) {
    System.out.print(str);
  }

  //@ ensures System.out.println(line);
  public static void writeLine(String line) {
    System.out.println(line);
  }

  //@ ensures System.out.println(intNumber);
  public static void writeLine(int intNumber) {
    System.out.println(intNumber);
  }

  //@ ensures System.out.println(longNumber);
  public static void writeLine(long longNumber) {
    System.out.println(longNumber);
  }

  //@ ensures System.out.println(doubleNumber);
  public static void writeLine(double doubleNumber) {
    System.out.println(doubleNumber);
  }

  //@ ensures System.out.println(floatNumber);
  public static void writeLine(float floatNumber) {
    System.out.println(floatNumber);
  }

  //@ ensures System.out.println(shortNumber);
  public static void writeLine(short shortNumber) {
    System.out.println(shortNumber);
  }

  //@ ensures System.out.println(byteHex);
  public static void writeLine(byte byteHex) {
    System.out.println(byteHex);
  }

  //@ ensures \result != null;
  public static Connection getDBConnection() throws SQLException {
    return DriverManager.getConnection(dbUrl, dbUsername, dbPassword);
  }

  public static final boolean STATIC_FINAL_TRUE = true;
  public static final boolean STATIC_FINAL_FALSE = false;
  public static final int STATIC_FINAL_FIVE = 5;

  public static boolean staticTrue = true;
  public static boolean staticFalse = false;
  public static int staticFive = 5;

  //@ ensures \result == true;
  public static boolean staticReturnsTrue() {
    return true;
  }

  //@ ensures \result == false;
  public static boolean staticReturnsFalse() {
    return false;
  }

  //@ ensures \result == true || \result == false;
  public static boolean staticReturnsTrueOrFalse() {
    return (new java.util.Random()).nextBoolean();
  }

  //@ ensures \result != null;
  public static String toHex(byte byteBuffer[]) {
    StringBuffer strBuffer = new StringBuffer(byteBuffer.length * 2);
    int i;

    for (i = 0; i < byteBuffer.length; i++) {
      if (((int) byteBuffer[i] & 0xff) < 0x10) {
        strBuffer.append("0");
      }

      strBuffer.append(Long.toString((int) byteBuffer[i] & 0xff, 16));
    }

    return strBuffer.toString();
  }
}
