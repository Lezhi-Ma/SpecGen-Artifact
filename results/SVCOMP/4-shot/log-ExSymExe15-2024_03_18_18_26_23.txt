class Main {
  static int field;
  static int field2;

  //@ requires arg != null;
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
  public static boolean f(Short arg) {
    int x = 13000;
    Main inst = new Main();
    field = arg;
    if (field < 0)
      return true;
    return inst.test(x, field, field2);
  }
  
  //@ requires true;
  //@ ensures \result ==> r <= 99 || x > z;
  //@ ensures !\result ==> r > 99 && x <= z;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe15");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r <= 99) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x <= z) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: <identifier> expected
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                      ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: Expected a semicolon to separate the parts of a JML quantified expression
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                       ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: ')' expected
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                                                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: <identifier> expected
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: Method specs may not precede a variable declaration
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                                                               ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: <identifier> expected
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                                                                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:6: error: <identifier> expected
  //@ ensures \result ==> field < 0 || (\forall int x, int z, int r; test(x, field, field2); r <= 99 || x > z);
                                                                                                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: <identifier> expected
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: Expected a semicolon to separate the parts of a JML quantified expression
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: ')' expected
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: <identifier> expected
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: Method specs may not precede a variable declaration
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: <identifier> expected
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExe15.java:7: error: <identifier> expected
  //@ ensures !\result ==> (field >= 0 && (\exists int x, int z, int r; test(x, field, field2); r > 99 && x <= z));
                                                                                                                ^
14 errors

