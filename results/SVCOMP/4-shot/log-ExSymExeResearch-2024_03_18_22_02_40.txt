class Main {

    //@ requires arg >= Integer.MIN_VALUE && arg <= Integer.MAX_VALUE;
    //@ ensures \result <==> (\exists int x; x == arg && x >= 0) || (\exists int x; x == -arg && x < 0);
    public static boolean f(int arg) {
        int x = arg > 0 ? arg : -arg;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y) != x + y;
    }

    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
    //@ ensures \result >= 0 && \result < 100;
    public int test(int a, int b) { // invokevirtual
        int result = 0;
        if (a >= 0 && a < 100 && b >= 0 && b < 100) {
            int sum = a + b;
            int diff = a - b;
            int temp;

            if (sum > 0) temp = a;
            else temp = b;
            if (temp < diff) result = temp;
            else result = diff;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:9: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:14:) in method f
        return inst.test(x, y) != x + y;
                        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:9:
    public int test(int a, int b) { // invokevirtual
               ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:12: verify: Precondition conjunct is false: a < 100
    //@ requires a >= 0 && a < 100 && b >= 0 && b < 100;
                             ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13:) in method test
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeResearch.java:26:
    //@ ensures \result >= 0 && \result < 100;
        ^
5 verification failures

