public class Primes {

    //@ requires m >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == n * m;
    public static int mult(int n, int m) {
        if (m < 0) {
            return mult(n, -m);
        }
        if (m == 0) {
            return 0;
        }
        if (m == 1) {
            return 1;
        }
        return n + mult(n, m - 1);
    }

    //@ requires m >= 0;
    //@ ensures \result == 1 || \result == 0;
    public static int multiple_of(int n, int m) {
        if (m < 0) {
            return multiple_of(n, -m);
        }
        if (n < 0) {
            return multiple_of(-n, m); // false
        }
        if (m == 0) {
            return 0; // false
        }
        if (n == 0) {
            return 1; // true
        }
        return multiple_of(n - m, m);
    }

    //@ ensures \result == 1 || \result == 0;
    public static int is_prime(int n) {
        return is_prime_(n, n - 1);
    }

    //@ requires m >= 0;
    //@ ensures \result == 1 || \result == 0;
    public static int is_prime_(int n, int m) {
        if (n <= 1) {
            return 0; // false
        } else if (n == 2) {
            return 1; // true
        } else {
            if (m <= 1) {
                return 1; // true
            } else {
                if (multiple_of(n, m) == 0) {
                    return 0; // false
                }
                return is_prime_(n, m - 1);
            }
        }
    }

}
