class A extends RuntimeException {
  int i = 1;
}
;

class B extends A {}
;

public class exceptions11 {
  //@ requires k == 0 ==> \result == 1;
  //@ requires k != 0 ==> \result == 1;
  //@ ensures \result == 1;
  static int foo(int k) {
    try {
      if (k == 0) {
        A a = new A();
        throw a;
      } else {
        A b = new A();
        throw b;
      }

    } catch (B exc) {
      assert exc.i == 1;
    }
    return 1;
  }

  //@ ensures \result == 1;
  public static void main(String[] args) {
    try {
      A a = new A();
      foo(6);
    } catch (A exc) {
      assert exc.i == 2;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions11.java:10: error: A \result expression may not be in a requires clause
  //@ requires k == 0 ==> \result == 1;
                           ^
/home/max/Documents/JMLGPT/tmp/exceptions11.java:11: error: A \result expression may not be in a requires clause
  //@ requires k != 0 ==> \result == 1;
                           ^
/home/max/Documents/JMLGPT/tmp/exceptions11.java:29: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 1;
               ^
3 errors

