class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires arg >= 0;
  //@ ensures \result <==> field2 < 99;
  public static boolean f(int arg) {
    if (arg < 0)
      return true;
    int x = arg;

    Main inst = new Main();
    field = 9;
    return inst.test(x, arg, field2);
  }
  
  //@ requires r == x + z;
  //@ requires z == x - 3 - 4;
  //@ ensures \result <==> x >= z;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe13");
    int y = 3;
    r = x + z;
    z = x - y - 4;
    if (r < 99) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x < z) {
      System.out.println("branch BOO1");
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe13.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ExSymExe13.java:20:) in method f
    return inst.test(x, arg, field2);
                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExe13.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExe13.java:14:
  public boolean test(int x, int z, int r) {
                 ^
/home/max/Documents/JMLGPT/tmp/ExSymExe13.java:17: verify: Precondition conjunct is false: r == x + z
  //@ requires r == x + z;
                 ^
3 verification failures

