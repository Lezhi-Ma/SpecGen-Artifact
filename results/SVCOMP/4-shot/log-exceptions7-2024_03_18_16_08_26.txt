class A extends RuntimeException {}

class B extends A {}

class C extends B {}

class exceptions7 {
  //@ requires true;
  //@ ensures exc instanceof A ==> \result == false;
  //@ ensures exc instanceof B ==> \result == false;
  //@ ensures exc instanceof C ==> \result == false;
  public static void main(String[] args) {
    try {
      try {
        C c = new C();
        A a = new A();
        throw a;
      } catch (C exc) {
        assert false;
      } catch (B exc) {
        assert false;
      }
    } catch (A exc) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions7.java:9: error: cannot find symbol
  //@ ensures exc instanceof A ==> \result == false;
              ^
  symbol:   variable exc
  location: class exceptions7
/home/max/Documents/JMLGPT/tmp/exceptions7.java:9: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures exc instanceof A ==> \result == false;
                                    ^
/home/max/Documents/JMLGPT/tmp/exceptions7.java:10: error: cannot find symbol
  //@ ensures exc instanceof B ==> \result == false;
              ^
  symbol:   variable exc
  location: class exceptions7
/home/max/Documents/JMLGPT/tmp/exceptions7.java:10: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures exc instanceof B ==> \result == false;
                                    ^
/home/max/Documents/JMLGPT/tmp/exceptions7.java:11: error: cannot find symbol
  //@ ensures exc instanceof C ==> \result == false;
              ^
  symbol:   variable exc
  location: class exceptions7
/home/max/Documents/JMLGPT/tmp/exceptions7.java:11: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures exc instanceof C ==> \result == false;
                                    ^
6 errors

