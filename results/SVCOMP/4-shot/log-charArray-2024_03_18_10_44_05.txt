public class charArray {
  //@ requires c != null;
  //@ requires c.length > 0;
  //@ assignable c[0];
  //@ ensures c[0] == 's';
  public static char[] f(char c[]) {
    if (c != null && c.length > 0) {
      c[0] = 's';
    }
    return c;
  }

  //@ requires arg != null;
  //@ requires arg.length() == 5;
  //@ ensures \result == 1 <==> (new String("HELLO") + new String(f(arg.toCharArray()), 0, f(arg.toCharArray()).length)).charAt(5) == 's';
  //@ ensures \result == 0 <==> (new String("HELLO") + new String(f(arg.toCharArray()), 0, f(arg.toCharArray()).length)).charAt(5) != 's';
  public static int fun(String arg) {
    if (arg.length() != 5) return -1;
    char[] c = f(arg.toCharArray());
    String s = new String("HELLO") + new String(c, 0, c.length);
    return (s.charAt(5) == 's') ? 1 : 0;
  }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 20971520 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid23394.log

