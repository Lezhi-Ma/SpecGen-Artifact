class Main {
  static int field;

  //@ requires arg >= 0;
  //@ ensures \result <==> (\exists int x, int z; test(x, field));
  public static boolean f(int arg) {
    if (arg < 0)
      return true;
    int x = 3;
    Main inst = new Main();
    field = arg % 100;
    return inst.test(x, field);
  }
  
  //@ requires x == 3 && z == field;
  //@ ensures \result <==> (z <= 0 && y <= 0);
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe11");
    int y = 3;
    z = -x;
    x = z * x;
    if (z <= 0) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (y <= 0) {
      System.out.println("branch BOO1");
      return false;
    } else System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:5: error: <identifier> expected
  //@ ensures \result <==> (\exists int x, int z; test(x, field));
                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe11.java:5: error: Expected a semicolon to separate the parts of a JML quantified expression
  //@ ensures \result <==> (\exists int x, int z; test(x, field));
                                           ^
2 errors

