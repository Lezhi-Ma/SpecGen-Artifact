class Main {
  static class Node {
    //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
    //@ ensures \result == false <==> a > b;
    //@ ensures \result == true <==> a <= b;
    public boolean test(int a, int b) {

      if (a > b) {
        return false;
      } else if (a == b) System.out.println("eq");
      else
        System.out.println("<");
      return true;
    }
  }

  //@ requires arg <= Integer.MAX_VALUE;
  //@ ensures \result == true <==> arg >= Integer.MAX_VALUE;
  //@ ensures \result == false <==> arg < Integer.MAX_VALUE;
  public static boolean f(int arg) {
    if (arg >= Integer.MAX_VALUE) return true;
    Main inst = new Main();
    Node n = new Node();
    return n.test(arg, arg + 1);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
    return n.test(arg, arg + 1);
    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
  //@ ensures \result == true <==> arg >= Integer.MAX_VALUE;
      ^
2 verification failures

