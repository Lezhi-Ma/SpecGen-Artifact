public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result == true || \result == false;
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        //@ assert s1.equals(args[0] + " ") ==> \result == true;
        //@ assert !s1.equals(args[0] + " ") ==> \result == false;
        if(!s1.equals(args[0] + " ")) return false;
        //@ assert s2.equals(args[1]) ==> \result == true;
        //@ assert !s2.equals(args[1]) ==> \result == false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringConcatenation02.java:11: error: A \result expression may not be in a assert clause
        //@ assert s1.equals(args[0] + " ") ==> \result == true;
                                                 ^
/home/max/Documents/JMLGPT/tmp/StringConcatenation02.java:12: error: A \result expression may not be in a assert clause
        //@ assert !s1.equals(args[0] + " ") ==> \result == false;
                                                  ^
/home/max/Documents/JMLGPT/tmp/StringConcatenation02.java:14: error: A \result expression may not be in a assert clause
        //@ assert s2.equals(args[1]) ==> \result == true;
                                           ^
/home/max/Documents/JMLGPT/tmp/StringConcatenation02.java:15: error: A \result expression may not be in a assert clause
        //@ assert !s2.equals(args[1]) ==> \result == false;
                                            ^
4 errors

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result == true || \result == false;
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        //@ assert s1.equals(args[0] + " ");
        //@ assert s2.equals(args[1]);
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
