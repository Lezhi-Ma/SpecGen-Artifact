public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> arr.length == 1 && arr[0] == 1)) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> arr.length == 1 && arr[0] == 1)) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                            ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> arr.length == 1 && arr[0] == 1)) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                               ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> arr.length == 1 && arr[0] == 1)) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                ^
  symbol:   variable arr
  location: class Array2
3 errors

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                          ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                             ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                               ^
  symbol:   variable arr
  location: class Array2
3 errors

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: bad operand types for binary operator '=='
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
                                                                                                                  ^
  first type:  int[][]
  second type: int
1 error

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: bad operand types for binary operator '=='
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> \result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
                                                                                                                  ^
  first type:  int[][]
  second type: int
1 error

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                             ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                  ^
  symbol:   variable arr
  location: class Array2
3 errors

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: bad operand types for binary operator '=='
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
                                                                                                     ^
  first type:  int[][]
  second type: int
1 error

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                             ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                  ^
  symbol:   variable arr
  location: class Array2
3 errors

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: bad operand types for binary operator '=='
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (new int[1].length == 1 && new int[1][0] == 1))) && (unknown <= 0 ==> (\result <==> new int[0].length == 0));
                                                                                                     ^
  first type:  int[][]
  second type: int
1 error

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                             ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                  ^
  symbol:   variable arr
  location: class Array2
3 errors

public class Array2 {

    //@ requires unknown > 0 || unknown <= 0;
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
    public static boolean func(int unknown) {
        int[] arr;
        if (unknown > 0)
            arr = new int[1];
        else
            arr = new int[0];

        if (unknown > 0)
            arr[0] = 1;

        if (unknown > 0)
            return arr.length == 1 && arr[0] == 1;
        else
            return arr.length == 0;
    }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                             ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                ^
  symbol:   variable arr
  location: class Array2
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: cannot find symbol
    //@ ensures \result <==> (unknown > 0 ==> (\result <==> (arr.length == 1 && arr[0] == 1))) && (unknown <= 0 ==> (\result <==> arr.length == 0));
                                                                                                                                  ^
  symbol:   variable arr
  location: class Array2
3 errors

