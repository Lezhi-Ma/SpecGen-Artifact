class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions14 {
    //@ requires true;
    //@ ensures \result == exc instanceof C;
    public static void main(String[] args) {
        try {
            try {
                C c = new C();
                A a = new A();
            } catch (C exc) {
                assert false;
            } catch (B exc) {
                assert false;
            }
        } catch (A exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions14.java:9: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures \result == exc instanceof C;
                 ^
/home/max/Documents/JMLGPT/tmp/exceptions14.java:9: error: cannot find symbol
    //@ ensures \result == exc instanceof C;
                           ^
  symbol:   variable exc
  location: class exceptions14
2 errors

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions14 {
    //@ requires true;
    //@ ensures true;
    public static void main(String[] args) {
        try {
            try {
                C c = new C();
                A a = new A();
            } catch (C exc) {
                assert false;
            } catch (B exc) {
                assert false;
            }
        } catch (A exc) {
            assert false;
        }
    }
}

