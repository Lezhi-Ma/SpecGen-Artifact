public class StringConstructors05 {
    //@ requires arg != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < arg.length(); arg.charAt(i) == 'diffblue'.charAt(i));
    public static boolean f(String arg) {
        char[] charArray = {'d', 'i', 'f', 'f', 'b', 'l', 'u', 'e'};
        String s3 = new String(charArray);
        return s3.equals(arg);
    }
}
/home/max/Documents/JMLGPT/tmp/StringConstructors05.java:3: error: unclosed character literal
    //@ ensures \result ==> (\forall int i; 0 <= i && i < arg.length(); arg.charAt(i) == 'diffblue'.charAt(i));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/StringConstructors05.java:3: error: unclosed character literal
    //@ ensures \result ==> (\forall int i; 0 <= i && i < arg.length(); arg.charAt(i) == 'diffblue'.charAt(i));
                                                                                                  ^
2 errors

public class StringConstructors05 {
    //@ requires arg != null;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < arg.length(); arg.charAt(i) == "diffblue".charAt(i));
    public static boolean f(String arg) {
        char[] charArray = {'d', 'i', 'f', 'f', 'b', 'l', 'u', 'e'};
        String s3 = new String(charArray);
        return s3.equals(arg);
    }
}
