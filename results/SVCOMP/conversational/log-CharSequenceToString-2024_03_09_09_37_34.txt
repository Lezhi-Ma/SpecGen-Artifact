public class CharSequenceToString {
    //@ requires arg != null;
    //@ ensures \result ==> i == -1 || i == 5;
    public static boolean main(String arg) {
        CharSequence cs = (CharSequence) arg;
        String s = cs.toString();
        int i = -1;
        if (s.equals("case1")) i = cs.length();
        return i == -1 || i == 5;
    }
}
/home/max/Documents/JMLGPT/tmp/CharSequenceToString.java:3: error: cannot find symbol
    //@ ensures \result ==> i == -1 || i == 5;
                            ^
  symbol:   variable i
  location: class CharSequenceToString
/home/max/Documents/JMLGPT/tmp/CharSequenceToString.java:3: error: cannot find symbol
    //@ ensures \result ==> i == -1 || i == 5;
                                       ^
  symbol:   variable i
  location: class CharSequenceToString
2 errors

public class CharSequenceToString {
    //@ requires arg != null;
    //@ ensures \result ==> cs.length() == -1 || cs.length() == 5;
    public static boolean main(String arg) {
        CharSequence cs = (CharSequence) arg;
        String s = cs.toString();
        if (s.equals("case1")) {
            int i = cs.length();
            return i == -1 || i == 5;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/CharSequenceToString.java:3: error: cannot find symbol
    //@ ensures \result ==> cs.length() == -1 || cs.length() == 5;
                            ^
  symbol:   variable cs
  location: class CharSequenceToString
/home/max/Documents/JMLGPT/tmp/CharSequenceToString.java:3: error: cannot find symbol
    //@ ensures \result ==> cs.length() == -1 || cs.length() == 5;
                                                 ^
  symbol:   variable cs
  location: class CharSequenceToString
2 errors

public class CharSequenceToString {
    //@ requires arg != null;
    //@ ensures \result ==> arg.length() == -1 || arg.length() == 5;
    public static boolean main(String arg) {
        CharSequence cs = (CharSequence) arg;
        String s = cs.toString();
        if (s.equals("case1")) {
            int i = cs.length();
            return i == -1 || i == 5;
        }
        return true;
    }
}
