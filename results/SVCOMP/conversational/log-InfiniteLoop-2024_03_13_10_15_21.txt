import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreasing 0; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreasing 0; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases 0; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases 0; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases 1; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases 1; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases i; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method infiniteLoop
        //@ decreases i; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases 0; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases 0; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases 1; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases 1; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases Integer.MAX_VALUE; // Loop does not terminate
            ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

    //@ ensures true;
    public static void infiniteLoop(String[] arg) {
        int i = 0;
        boolean b = new Random().nextBoolean();

        //@ maintaining b ==> true;
        //@ decreases 0; // Loop does not terminate
        while (b) {
            i++;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
        //@ decreases 0; // Loop does not terminate
            ^
1 verification failure

