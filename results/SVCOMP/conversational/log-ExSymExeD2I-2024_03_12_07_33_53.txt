class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> res > 0 && System.out.println("x >0") == null;
  //@ ensures !\result ==> res <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:13: error: cannot find symbol
  //@ ensures \result ==> res > 0 && System.out.println("x >0") == null;
                          ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:13: error: 'void' type not allowed here
  //@ ensures \result ==> res > 0 && System.out.println("x >0") == null;
                                                       ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:14: error: cannot find symbol
  //@ ensures !\result ==> res <= 0;
                           ^
  symbol:   variable res
  location: class Main
4 errors

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0 && System.out.println("x >0") == null;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:13: error: 'void' type not allowed here
  //@ ensures \result ==> x > 0 && System.out.println("x >0") == null;
                                                     ^
2 errors

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: non-static method test(double) cannot be referenced from a static context
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && test(x);
                                                                    ^
1 error

class Main {

  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
  //@ ensures !\result ==> x < 0.0 || x > Integer.MAX_VALUE / 2;
  public static boolean f (double x) {
    if (x >= 0.0 && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ ensures \result ==> x > 0;
  //@ ensures !\result ==> x <= 0;
  public boolean test(double x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeD2I.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> x >= 0.0 && x <= Integer.MAX_VALUE / 2 && new Main().test(x);
                                                                    ^
1 error

