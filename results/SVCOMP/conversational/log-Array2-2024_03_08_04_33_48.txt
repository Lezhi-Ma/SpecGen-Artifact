public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result <==> unknown > 0 ==> (\result == true ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result <==> unknown > 0 ==> (\result == true ==> \result.length == 1);
  //@ ensures \result <==> unknown <= 0 ==> \result.length == 0;
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result <==> unknown > 0 ==> (\result == true ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result <==> unknown > 0 ==> (\result == true ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                                              ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result <==> unknown > 0 ==> (\result == true ==> \result.length == 1);
                                                                       ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result <==> unknown <= 0 ==> \result.length == 0;
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result == true ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result == true ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result == true ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result == true ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                        ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result == true ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                                 ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result == true ==> (unknown > 0 ==> \result.length == 1);
                                                          ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result == true ==> (unknown <= 0 ==> \result.length == 0);
                                                           ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

public class Array2 {

  //@ requires unknown > 0 || unknown <= 0;
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
  public static boolean func(int unknown) {
    int[] arr;
    if (unknown > 0)
      arr = new int[1];
    else
      arr = new int[0];

    if (unknown > 0)
      arr[0] = 1;

    if (unknown > 0)
      return arr.length == 1 && arr[0] == 1;
    else
      return arr.length == 0;
  }

}
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                ^
/home/max/Documents/JMLGPT/tmp/Array2.java:4: error: array required, but boolean found
  //@ ensures \result ==> (unknown > 0 ==> (\exists int i; 0 <= i && i < \result.length; \result[i] == 1));
                                                                                         ^
/home/max/Documents/JMLGPT/tmp/Array2.java:5: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown > 0 ==> \result.length == 1);
                                                  ^
/home/max/Documents/JMLGPT/tmp/Array2.java:6: error: boolean cannot be dereferenced
  //@ ensures \result ==> (unknown <= 0 ==> \result.length == 0);
                                                   ^
4 errors

