class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
  //@ requires true;
  //@ ensures \result == true;
  public static boolean f(int x) {
    try {
      x++;
    } catch (A exc) {
      return false;
    }

    try {
      throw new B();
    } catch (B exc) {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:23: error: unreachable statement
    return true;
    ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
  //@ requires true;
  //@ ensures \result == false;
  public static boolean f(int x) {
    try {
      x++;
    } catch (A exc) {
      return false;
    }

    try {
      throw new B();
    } catch (B exc) {
      return false;
    }

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:23: error: unreachable statement
    return true;
    ^
1 error

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions16 {
  //@ requires true;
  //@ ensures \result == false;
  public static boolean f(int x) {
    try {
      x++;
    } catch (A exc) {
      return false;
    }

    try {
      throw new B();
    } catch (B exc) {
      return false;
    }

    return false;
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions16.java:23: error: unreachable statement
    return false;
    ^
1 error

