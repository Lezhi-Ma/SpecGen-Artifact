class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(x >= 0 && x <= '\uffff');
  //@ ensures \result == 1 <==> my_char == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:5: error: cannot find symbol
  //@ ensures \result == 0 <==> !(x >= 0 && x <= '\uffff');
                                  ^
  symbol:   variable x
  location: class char1
/home/max/Documents/JMLGPT/tmp/char1.java:5: error: cannot find symbol
  //@ ensures \result == 0 <==> !(x >= 0 && x <= '\uffff');
                                            ^
  symbol:   variable x
  location: class char1
/home/max/Documents/JMLGPT/tmp/char1.java:6: error: cannot find symbol
  //@ ensures \result == 1 <==> my_char == 0;
                                ^
  symbol:   variable my_char
  location: class char1
3 errors

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: The prover cannot establish an assertion (UndefinedCalledMethodPrecondition: /home/max/Documents/JMLGPT/openjml/specs/java/lang/String.jml:333:) in method fun
  //@ ensures \result == 0 <==> !(arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
                                            ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/String.jml:333: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:5:
    public /*@ pure @*/ char charAt(int index)
                             ^
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: Associated method exit
      return -1;
      ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/CharSequence.jml:79: verify: Precondition conjunct is false: 0 <= index < charArray.length
      @      requires 0 <= index < charArray.length;
                                 ^
4 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

class char1 {

  //@ requires arg.length() >= 0;
  //@ ensures \result == -1 <==> arg.length() < 1;
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
  //@ ensures \result == 1 <==> arg.length() > 0 && arg.charAt(0) == 0;
  public static int fun(String arg) {
    if (arg.length() < 1)
      return -1;
    char my_char = arg.charAt(0);
    int x = my_char;
    if (!(arg.length() > 0 && x >= 0 && x <= '\uffff'))
      return 0;

    my_char = '\uffff';
    my_char++;
    if (my_char == 0)
      return 0;
    return 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/char1.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/char1.java:5:) in method fun
      return -1;
      ^
/home/max/Documents/JMLGPT/tmp/char1.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/char1.java:9:
  //@ ensures \result == 0 <==> !(arg.length() > 0 && arg.charAt(0) >= 0 && arg.charAt(0) <= '\uffff');
      ^
2 verification failures

