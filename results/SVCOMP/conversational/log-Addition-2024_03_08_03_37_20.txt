public class Addition {

    //@ requires true;
    //@ ensures \result == m;
    public static int addition(int m, int n) {
        if (n == 0) {
            return m;
        }
        if (n > 0) {
            return addition(m + 1, n - 1);
        } else {
            return addition(m - 1, n + 1);
        }
    }
}
/home/max/Documents/JMLGPT/tmp/Addition.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Addition.java:4:) in method addition
            return addition(m + 1, n - 1);
            ^
/home/max/Documents/JMLGPT/tmp/Addition.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Addition.java:10:
    //@ ensures \result == m;
        ^
2 verification failures

public class Addition {

    //@ requires true;
    //@ ensures \result == m;
    public static int addition(int m, int n) {
        if (n == 0) {
            return m;
        }
        if (n > 0) {
            return addition(m + 1, n - 1);
        } else {
            return addition(m - 1, n + 1);
        }
    }
}
/home/max/Documents/JMLGPT/tmp/Addition.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Addition.java:4:) in method addition
            return addition(m + 1, n - 1);
            ^
/home/max/Documents/JMLGPT/tmp/Addition.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Addition.java:10:
    //@ ensures \result == m;
        ^
2 verification failures

public class Addition {

    //@ requires true;
    //@ ensures \result == m + n;
    public static int addition(int m, int n) {
        if (n == 0) {
            return m;
        }
        if (n > 0) {
            return addition(m + 1, n - 1);
        } else {
            return addition(m - 1, n + 1);
        }
    }
}

