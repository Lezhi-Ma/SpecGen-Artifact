class multinewarray {
    //@ ensures \result ==> some_a.length == 4;
    //@ ensures \result ==> some_a[0].length == 3;
    //@ ensures \result ==> some_a[0][0].length == 2;
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> some_a.length == 4;
                            ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> some_a[0].length == 3;
                            ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> some_a[0][0].length == 2;
                            ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                          ^
  symbol:   variable x
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                                                           ^
  symbol:   variable y
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:5: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:6: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
7 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                          ^
  symbol:   variable x
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                                                           ^
  symbol:   variable y
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < x; (\forall int j; 0 <= j && j < y; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
6 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) 
            for (int j = 0; j < y; ++j) 
                int_array[i][j] = i + j;

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) {
            for (int j = 0; j < y; ++j) {
                int_array[i][j] = i + j;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

class multinewarray {
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
    //@ ensures \result ==> int_array[2][4] == 6;
    public static boolean f() {
        int[][][] some_a = new int[4][3][2];

        assert some_a.length == 4;
        assert some_a[0].length == 3;
        assert some_a[0][0].length == 2;

        int x = 3;
        int y = 5;
        int[][] int_array = new int[x][y];

        for (int i = 0; i < x; ++i) {
            for (int j = 0; j < y; ++j) {
                int_array[i][j] = i + j;
            }
        }

        return int_array[2][4] == 6;
    }
}
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                             ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:2: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 4; some_a[i].length == 3 && (\forall int j; 0 <= j && j < 3; some_a[i][j].length == 2));
                                                                                                                       ^
  symbol:   variable some_a
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:3: error: cannot find symbol
    //@ ensures \result ==> (\forall int i; 0 <= i && i < 3; (\forall int j; 0 <= j && j < 5; int_array[i][j] == i + j));
                                                                                              ^
  symbol:   variable int_array
  location: class multinewarray
/home/max/Documents/JMLGPT/tmp/multinewarray.java:4: error: cannot find symbol
    //@ ensures \result ==> int_array[2][4] == 6;
                            ^
  symbol:   variable int_array
  location: class multinewarray
4 errors

