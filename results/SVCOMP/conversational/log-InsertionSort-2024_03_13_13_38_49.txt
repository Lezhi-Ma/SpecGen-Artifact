public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            while ((j >= 0) && (a[j] > x)) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while ((j >= 0) && (a[j] > x)) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while ((j >= 0) && (a[j] > x)) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            //@ maintaining 0 <= j && j < N;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; i <= l && l <= j; a[k] <= a[l]));
            //@ decreases j;
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

public class InsertionSort {

    //@ requires a != null;
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
    public static void sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) {
            int j = i - 1;
            int x = a[i];
            while (j >= 0 && a[j] > x) {
                a[j + 1] = a[j];
                j--;
            }
            a[j + 1] = x;
        }
    }

}
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:4:) in method sort
    public static void sort(int[] a) {
                       ^
/home/max/Documents/JMLGPT/tmp/InsertionSort.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/InsertionSort.java:5:
    //@ ensures (\forall int i; 0 <= i && i < a.length-1; a[i] <= a[i+1]);
        ^
2 verification failures

