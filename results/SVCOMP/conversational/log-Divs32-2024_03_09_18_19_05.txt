public class Divs32 {

    static final int MAX_INT = 2147483647;
    static final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
                           ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
                           ^
2 errors

public class Divs32 {

    static final int MAX_INT = 2147483647;
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:13: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
                           ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:14: error: An identifier with package visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
                           ^
2 errors

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:17:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:40:
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
        ^
2 verification failures

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:43: error: Method specifications without a following method declaration
    //@ ensures MAX_INT == 2147483647;
        ^
1 error

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
    public static void main(String[] args) {

    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:17:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:40:
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
        ^
2 verification failures

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:43: error: Method specifications without a following method declaration
    //@ ensures MAX_INT == 2147483647;
        ^
1 error

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
    public static void main(String[] args) {

    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:17:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:40:
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
        ^
2 verification failures

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:43: error: Method specifications without a following method declaration
    //@ ensures MAX_INT == 2147483647;
        ^
1 error

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
    public static void main(String[] args) {

    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:17:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:40:
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
        ^
2 verification failures

public class Divs32 {

    //@ spec_public
    static final int MAX_INT = 2147483647;
    //@ spec_public
    static final int MIN_INT = -2147483648;

    //@ spec_public
    int numerator;
    //@ spec_public
    int denominator;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT && numerator >= 0 ==> denominator == 0;
    //@ ensures \result == MIN_INT && numerator < 0 ==> denominator == 0;
    //@ ensures \result == -(numerator / denominator) && ((numerator < 0) != (denominator < 0)) && denominator != 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }

    //@ ensures MAX_INT == 2147483647;
    //@ ensures MIN_INT == -2147483648;
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:43: error: Method specifications without a following method declaration
    //@ ensures MAX_INT == 2147483647;
        ^
1 error

