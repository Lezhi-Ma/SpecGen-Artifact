public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == buffer.toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: cannot find symbol
  //@ ensures \result == true <==> \result == buffer.toString().equals("detimiL eTlBffiiH");
                                              ^
  symbol:   variable buffer
  location: class StringBuilderChars06
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

public class StringBuilderChars06 {
  //@ requires arg != null;
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
  public static boolean f(String arg) {
    StringBuilder buffer = new StringBuilder(arg);
    buffer.reverse();
    return buffer.toString().equals("detimiL eTlBffiiH");
  }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars06.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == true <==> \result == new StringBuilder(arg).reverse().toString().equals("detimiL eTlBffiiH");
                                              ^
1 error

