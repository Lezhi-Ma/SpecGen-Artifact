public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        byte result = (byte) (x + 248);
        return result == -3;
    }
}
/home/max/Documents/JMLGPT/tmp/swap1.java:5: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        byte result = (byte) (x + 248);
                      ^
1 verification failure

public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        int temp = x + 248;
        byte result = (byte) temp;
        return result == -3;
    }
}
/home/max/Documents/JMLGPT/tmp/swap1.java:6: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        byte result = (byte) temp;
                      ^
1 verification failure

public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        int temp = x + 248;
        byte result = (byte) (temp % 256);
        return result == -3;
    }
}
/home/max/Documents/JMLGPT/tmp/swap1.java:6: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        byte result = (byte) (temp % 256);
                      ^
1 verification failure

public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        int temp = x + 248;
        byte result = (byte) ((temp + 256) % 256);
        return result == -3;
    }
}
/home/max/Documents/JMLGPT/tmp/swap1.java:6: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        byte result = (byte) ((temp + 256) % 256);
                      ^
1 verification failure

public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        int temp = x + 248;
        byte result = (byte) ((temp % 256 + 256) % 256);
        return result == -3;
    }
}
/home/max/Documents/JMLGPT/tmp/swap1.java:6: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method f
        byte result = (byte) ((temp % 256 + 256) % 256);
                      ^
1 verification failure

public class swap1 {
    //@ ensures \result == true;
    public static boolean f() {
        byte x = 5;
        int temp = x + 248;
        byte result = (byte) ((temp & 0xFF) - 256);
        return result == -3;
    }
}

