public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> buffer.capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: cannot find symbol
    //@ ensures \result ==> buffer.capacity() == 69;
                            ^
  symbol:   variable buffer
  location: class StringBuilderCapLen04
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> new StringBuilder(arg).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new StringBuilder(arg).capacity() == 69;
                            ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> new StringBuilder(arg).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new StringBuilder(arg).capacity() == 69;
                            ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> \result = (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: unexpected type
    //@ ensures \result ==> \result = (new StringBuilder(arg)).capacity() == 69;
                        ^
  required: variable
  found:    value
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> \result = (new StringBuilder(arg)).capacity() == 69;
                                       ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Assignments are not allowed where pure expressions are expected
    //@ ensures \result ==> \result = (new StringBuilder(arg)).capacity() == 69;
                                    ^
3 errors

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result == (new StringBuilder(arg)).capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new StringBuilder(arg)).capacity() == 69;
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (new StringBuilder(arg)).capacity() == 69;
                        ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (new StringBuilder(arg)).capacity() == 69;
                                                               ^
3 errors

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result == (new StringBuilder(arg)).capacity();
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new StringBuilder(arg)).capacity();
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (new StringBuilder(arg)).capacity();
                        ^
2 errors

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result == 69;
                        ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> \result == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result ==> \result == 69;
                                    ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: incomparable types: boolean and int
    //@ ensures \result == 69;
                        ^
1 error

public class StringBuilderCapLen04 {
    //@ requires arg != null;
    //@ ensures \result ==> buffer.capacity() == 69;
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.capacity() == 69;
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderCapLen04.java:3: error: cannot find symbol
    //@ ensures \result ==> buffer.capacity() == 69;
                            ^
  symbol:   variable buffer
  location: class StringBuilderCapLen04
1 error

