class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (res + 1 <= res + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:9: error: cannot find symbol
  //@ ensures \result == (res + 1 <= res + 2);
                          ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:9: error: cannot find symbol
  //@ ensures \result == (res + 1 <= res + 2);
                                     ^
  symbol:   variable res
  location: class Main
3 errors

class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
1 error

class Main {

  //@ ensures \result == inst.test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: cannot find symbol
  //@ ensures \result == inst.test(x, 5);
                         ^
  symbol:   variable inst
  location: class Main
1 error

class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
1 error

class Main {

  //@ ensures \result == (new Main()).test(x, 5);
  public static boolean f(long x) {
    return (new Main()).test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Main()).test(x, 5);
                          ^
1 error

class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
1 error

class Main {

  //@ ensures \result == (new Main()).test(x, 5);
  public static boolean f(long x) {
    return (new Main()).test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Main()).test(x, 5);
                          ^
1 error

class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
1 error

class Main {

  //@ ensures \result == (new Main()).test(x, 5);
  public static boolean f(long x) {
    return (new Main()).test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Main()).test(x, 5);
                          ^
1 error

class Main {

  //@ ensures \result == test(x, 5);
  public static boolean f(long x) {
    Main inst = new Main();
    return inst.test(x, 5);
  }

  //@ ensures \result == (x + 1 <= x + 2);
  public boolean test(long x, long y) {

    long res = x;
    if (res + 1 > res + 2) {
      return false;
    } else
      System.out.println("x <=0");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeLCMP.java:3: error: non-static method test(long,long) cannot be referenced from a static context
  //@ ensures \result == test(x, 5);
                         ^
1 error

