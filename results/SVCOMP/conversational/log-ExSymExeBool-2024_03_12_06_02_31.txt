class Main {

  //@ ensures \result ==> test(y, x);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
  //@ ensures \result ==> test(y, x);
                               ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
  //@ ensures \result ==> test(y, x);
                                  ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
3 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> inst.test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: cannot find symbol
  //@ ensures \result ==> inst.test(true, 3);
                          ^
  symbol:   variable inst
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

class Main {

  //@ ensures \result ==> test(true, 3);
  public static boolean f() {
    int x = 3;
    boolean y = true;
    Main inst = new Main();
    return inst.test(y, x);
  }

  /*
   * test IINC & IFLE bytecodes (Note: javac compiles ">" to IFLE)
   */
  //@ requires true;
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
  //@ ensures \result ==> !x ==> \result == true && true;
  //@ ensures !\result ==> false;
  public boolean test(boolean x, int z) {
    System.out.println("Testing ExSymExeBool");
    z++;
    if (x) System.out.println("branch FOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:3: error: non-static method test(boolean,int) cannot be referenced from a static context
  //@ ensures \result ==> test(true, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeBool.java:15: error: 'void' type not allowed here
  //@ ensures \result ==> x ==> \result == true && System.out.println("branch FOO1");
                                                                     ^
2 errors

