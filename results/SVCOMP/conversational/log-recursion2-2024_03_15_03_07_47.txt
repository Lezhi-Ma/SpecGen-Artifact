class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

class recursion2 {
  //@ ensures \result == 10;
  public static boolean f() {
    return recursion_test(0) == 10;
  }

  //@ requires 0 <= depth && depth <= 10;
  //@ ensures \result == 10 - depth;
  static int recursion_test(int depth) {
    if (depth < 10) return recursion_test(depth + 1) + 1;
    else return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/recursion2.java:2: error: incomparable types: boolean and int
  //@ ensures \result == 10;
                      ^
1 error

