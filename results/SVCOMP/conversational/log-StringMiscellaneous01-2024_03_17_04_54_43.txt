public class StringMiscellaneous01 {
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                           ^
  symbol:   variable s1
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                          ^
  symbol:   variable s1
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                                       ^
  symbol:   variable s1
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                                                                     ^
  symbol:   variable s1
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                                                           ^
  symbol:   variable s2
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                                                                                                                                   ^
  symbol:   variable s3
  location: class StringMiscellaneous01
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> s1.length() == 25 && (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) == s2.charAt(s1.length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; s3.charAt(i) == charArray[i]);
                                                                                                                                                                                                                   ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
7 errors

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
1 error

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                               ^
2 errors

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
1 error

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                               ^
2 errors

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
1 error

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
1 error

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                               ^
2 errors

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: cannot find symbol
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == charArray[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
  symbol:   variable charArray
  location: class StringMiscellaneous01
1 error

public class StringMiscellaneous01 {
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
  public static boolean f() {
    String s1 = "Automatic Test Generation";
    String s2 = "noitareneG tseT citamotuA";
    String s3 = "Autom";
    char[] charArray = new char[5];

    if(s1.length() != 25) return false;

    int i = 0;
    //@ maintaining 0 <= count && count <= s1.length();
    //@ maintaining 0 <= i && i <= s1.length();
    //@ decreases count;
    for (int count = s1.length() - 1; count >= 0; count--) {
      System.out.printf("%c ", s1.charAt(count));
      if(s1.charAt(count) != s2.charAt(i)) return false;
      ++i;
    }

    // copy characters from string into charArray
    s1.getChars(0, 5, charArray, 0);
    i = 0;
    //@ maintaining 0 <= i && i <= 5;
    //@ decreases 5 - i;
    for (char character : charArray) {
      System.out.print(character);
      if(s3.charAt(i) != character) return false;
      ++i;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                     ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous01.java:2: error: unclosed character literal
  //@ ensures \result <==> "Automatic Test Generation".length() == 25 && (\forall int count; 0 <= count && count < "Automatic Test Generation".length(); "Automatic Test Generation".charAt(count) == "noitareneG tseT citamotuA".charAt("Automatic Test Generation".length() - 1 - count)) && (\forall int i; 0 <= i && i < 5; "Autom".charAt(i) == 'charArray'[i]);
                                                                                                                                                                                                                                                                                                                                                               ^
2 errors

