class Main {

  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe29");
    if (z != x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x != r) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                  ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                       ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                            ^
  symbol:   variable r
  location: class Main
8 errors

class Main {

  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe29");
    if (z != x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x != r) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                  ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                       ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                            ^
  symbol:   variable r
  location: class Main
8 errors

class Main {

  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe29");
    if (z != x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x != r) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                  ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                       ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                            ^
  symbol:   variable r
  location: class Main
8 errors

class Main {

  //@ requires x == 3 && z == 5 && r == 9;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe29");
    if (z != x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x != r) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ requires x == 3 && z == 5 && r == 9;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ requires x == 3 && z == 5 && r == 9;
                         ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:3: error: cannot find symbol
  //@ requires x == 3 && z == 5 && r == 9;
                                   ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                            ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                      ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:4: error: cannot find symbol
  //@ ensures \result <==> (z != x && x != r);
                                           ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:5: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                             ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:5: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                  ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:5: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                       ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:5: error: cannot find symbol
  //@ ensures !\result <==> (z == x || x == r);
                                            ^
  symbol:   variable r
  location: class Main
11 errors

class Main {

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public static boolean f(int x, int z, int r) {
    Main inst = new Main();
    return inst.test(x, z, r);
  }

  //@ requires x >= 0 && z >= 0 && r >= 0;
  //@ ensures \result <==> (z != x && x != r);
  //@ ensures !\result <==> (z == x || x == r);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe29");
    if (z != x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x != r) System.out.println("branch BOO1");
    else {
      return false;
    }
    return true;
  }
}
