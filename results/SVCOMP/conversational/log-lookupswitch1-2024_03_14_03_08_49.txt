class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result ==> (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ==> j == i + 1;
    //@ ensures \result ==> (i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000) ==> j == -1;
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
    //@ ensures \result ==> (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ==> j == i + 1;
                                                                                                          ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:4: error: cannot find symbol
    //@ ensures \result ==> (i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000) ==> j == -1;
                                                                                                          ^
  symbol:   variable j
  location: class lookupswitch1
2 errors

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result ==> (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ==> \result == i + 1;
    //@ ensures \result ==> (i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000) ==> \result == -1;
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result ==> (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ==> \result == i + 1;
                                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:4: error: incomparable types: boolean and int
    //@ ensures \result ==> (i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000) ==> \result == -1;
                                                                                                                  ^
2 errors

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

class lookupswitch1 {
    //@ requires Integer.MIN_VALUE <= i && i <= Integer.MAX_VALUE;
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
    public static boolean f(int i) {
        int j;

        switch (i) {
            case 1:
                j = 2;
                break;
            case 10:
                j = 11;
                break;
            case 100:
                j = 101;
                break;
            case 1000:
                j = 1001;
                break;
            case 10000:
                j = 10001;
                break;
            case 100000:
                j = 100001;
                break;
            default:
                j = -1;
        }

        return (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (j == i + 1) : (j == -1);
    }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) ? (i + 1) : -1);
                        ^
1 error

