/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/exceptions10
 * The benchmark was taken from the repo: 24 January 2018
 */
class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
  //@ requires true;
  //@ ensures (\exists A exc; exc != null; exc instanceof A);
  static void foo() {
    try {
      A b = new A();
      throw b;
    } catch (A exc) {
      assert false;
    }
  }

  //@ requires true;
  //@ ensures (\exists B exc; exc != null; exc instanceof B);
  public static void main(String[] args) {
    try {
      A a = new A();
      foo();
    } catch (B exc) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:23: verify: The prover cannot establish an assertion (Assert) in method foo
      assert false;
      ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/exceptions10.java:28:) in method main
  public static void main(String[] args) {
                     ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/exceptions10.java:29:
  //@ ensures (\exists B exc; exc != null; exc instanceof B);
      ^
3 verification failures

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/exceptions10
 * The benchmark was taken from the repo: 24 January 2018
 */
class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
  //@ requires true;
  //@ ensures (\exists A exc; exc != null; exc instanceof A);
  static void foo() {
    try {
      A b = new A();
      throw b;
    } catch (A exc) {
      // assert false;
    }
  }

  //@ requires true;
  //@ ensures (\exists B exc; exc != null; exc instanceof B);
  public static void main(String[] args) {
    try {
      A a = new A();
      foo();
    } catch (B exc) {
      // assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/exceptions10.java:28:) in method main
  public static void main(String[] args) {
                     ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/exceptions10.java:29:
  //@ ensures (\exists B exc; exc != null; exc instanceof B);
      ^
2 verification failures

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/cbmc-java/exceptions10
 * The benchmark was taken from the repo: 24 January 2018
 */
class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
  //@ requires true;
  //@ ensures (\exists A exc; exc != null; exc instanceof A);
  static void foo() {
    try {
      A b = new A();
      throw b;
    } catch (A exc) {
      // assert false;
    }
  }

  //@ requires true;
  //@ ensures true;
  public static void main(String[] args) {
    try {
      A a = new A();
      foo();
    } catch (B exc) {
      // assert false;
    }
  }
}

