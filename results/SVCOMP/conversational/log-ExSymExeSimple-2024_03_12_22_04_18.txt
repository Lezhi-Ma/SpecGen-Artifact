class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg <= Integer.MAX_VALUE;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 1;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 1;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 1) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 1;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 1;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 2;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 2;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 1) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 2;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 2;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 3;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 3;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 2) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 3;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 3;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 4;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 4;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 3) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 4;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 4;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 5;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 5;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 4) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 5;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 5;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 6;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 6;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 5) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 6;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 6;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 7;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 7;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 6) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 7;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 7;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 8;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 8;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 7) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 8;
        ^
2 verification failures

class Main {
    static class Node {
        //@ requires a <= Integer.MAX_VALUE && b <= Integer.MAX_VALUE;
        //@ ensures \result == false <==> a > b;
        //@ ensures \result == true <==> a <= b;
        public boolean test(int a, int b) {

            if (a > b) {
                return false;
            } else if (a == b) System.out.println("eq");
            else
                System.out.println("<");
            return true;
        }
    }

    //@ requires arg < Integer.MAX_VALUE - 8;
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 9;
    //@ ensures \result == false <==> arg < Integer.MAX_VALUE - 9;
    public static boolean f(int arg) {
        if (arg >= Integer.MAX_VALUE - 8) return true;
        Main inst = new Main();
        Node n = new Node();
        return n.test(arg, arg + 1);
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18:) in method f
        return n.test(arg, arg + 1);
        ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:24:
    //@ ensures \result == true <==> arg >= Integer.MAX_VALUE - 9;
        ^
2 verification failures

