class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ maintaining true;
    //@ decreasing \infinite;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:15: error: This backslash token is unknown: \infinite
    //@ decreasing \infinite;
                   ^
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ maintaining true;
        ^
2 errors

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ maintaining true;
    //@ decreases \infinite;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:15: error: This backslash token is unknown: \infinite
    //@ decreases \infinite;
                  ^
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ maintaining true;
        ^
2 errors

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ maintaining true;
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ maintaining true;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

class A extends RuntimeException {}

class B extends A {}

public class exception18 {
  //@ requires true;
  //@ ensures (\exists A e; e != null; e.equals(\result));
  private static void foo() {
    A a = new A();
    throw a;
  }

  public static void main(String[] args) {
    //@ decreasing 0;
    try {
      foo();
      assert false;
    } catch (B e) {
      assert false;
    } catch (A e) {
      // expected here
    }
  }
}
/home/max/Documents/JMLGPT/tmp/exceptions18.java:14: error: Loop specifications must immediately precede a loop statement
    //@ decreasing 0;
        ^
1 error

