public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable this.name, this.value;
      @    ensures this.name == name && this.value == value;
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result == name;
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result == value;
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: References to 'this' are not permitted in constructor assignable clauses: this
      @    assignable this.name, this.value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: References to 'this' are not permitted in constructor assignable clauses: this
      @    assignable this.name, this.value;
                                 ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures this.name == name && this.value == value;
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result == name;
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result == value;
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable this.name, this.value;
      @    ensures this.name == name && this.value == value;
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result == name;
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result == value;
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: References to 'this' are not permitted in constructor assignable clauses: this
      @    assignable this.name, this.value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: References to 'this' are not permitted in constructor assignable clauses: this
      @    assignable this.name, this.value;
                                 ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

public class Cookie {
    private /*@ spec_public @*/ String name;
    private /*@ spec_public @*/ String value;

    /*@ public normal_behavior
      @    requires name != null && value != null;
      @    assignable name, value;
      @    ensures name.equals(\old(name)) && value.equals(\old(value));
      @*/
    public Cookie(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(name);
      @*/
    public String getName() {
        return name;
    }

    /*@ public normal_behavior
      @    ensures \result.equals(value);
      @*/
    public String getValue() {
        return value;
    }
}
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: name
      @    assignable name, value;
                      ^
/home/max/Documents/JMLGPT/tmp/Cookie.java:7: error: An assignable clause may not contain method formal parameters: value
      @    assignable name, value;
                            ^
2 errors

