public class boundcheck200 {

    //@ requires i >= 0;
    private static void recursion(int i) {
        //@ maintaining i >= 0;
        //@ decreases i;
        if (i == 0) {
            return;
        }
        if (i > 0) {
            recursion(i - 1);
        }
        if (i < 0) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/boundcheck200.java:5: error: Loop specifications must immediately precede a loop statement
        //@ maintaining i >= 0;
            ^
1 error

public class boundcheck200 {

    //@ requires i >= 0;
    //@ ensures i == 0;
    private static void recursion(int i) {
        //@ maintaining i >= 0;
        //@ decreases i;
        if (i == 0) {
            return;
        }
        if (i > 0) {
            recursion(i - 1);
        }
        if (i < 0) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/boundcheck200.java:6: error: Loop specifications must immediately precede a loop statement
        //@ maintaining i >= 0;
            ^
1 error

public class boundcheck200 {

    //@ requires i >= 0;
    //@ ensures i == 0;
    private static void recursion(int i) {
        if (i == 0) {
            return;
        }
        if (i > 0) {
            //@ maintaining i >= 0;
            //@ decreases i;
            recursion(i - 1);
        }
        if (i < 0) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/boundcheck200.java:10: error: Loop specifications must immediately precede a loop statement
            //@ maintaining i >= 0;
                ^
1 error

public class boundcheck200 {

    //@ requires i >= 0;
    //@ ensures i == 0;
    private static void recursion(int i) {
        if (i == 0) {
            return;
        }
        if (i > 0) {
            recursion(i - 1);
        }
        if (i < 0) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/boundcheck200.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/boundcheck200.java:4:) in method recursion
    private static void recursion(int i) {
                        ^
/home/max/Documents/JMLGPT/tmp/boundcheck200.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/boundcheck200.java:5:
    //@ ensures i == 0;
        ^
2 verification failures

public class boundcheck200 {

    //@ requires i >= 0;
    //@ ensures i >= 0;
    private static void recursion(int i) {
        if (i == 0) {
            return;
        }
        if (i > 0) {
            recursion(i - 1);
        }
        if (i < 0) {
            assert false;
        }
    }
}

