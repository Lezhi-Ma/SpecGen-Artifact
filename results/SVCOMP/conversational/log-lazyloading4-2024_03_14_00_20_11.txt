class Problem {
  private static final Object[] DEFAULT = {};
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result ==> data != null;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result ==> new Problem().checkInvariant();
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:5: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures data == DEFAULT;
              ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:5: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures data == DEFAULT;
                      ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:10: error: An identifier with private visibility may not be used in a ensures clause with package visibility
  //@ ensures \result ==> data != null;
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> new Problem().checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> new Problem().checkInvariant();
                                       ^
5 errors

class Problem {
  //@ spec_public
  private static final Object[] DEFAULT = {};
  //@ spec_public
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result ==> data != null;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result ==> new Problem().checkInvariant();
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: Object allocation is not permitted in specification expressions
  //@ ensures \result ==> new Problem().checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> new Problem().checkInvariant();
                                       ^
2 errors

class Problem {
  //@ spec_public
  private static final Object[] DEFAULT = {};
  //@ spec_public
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result ==> data != null;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result;
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/lazyloading4.java:19:) in method f
    return new Problem().checkInvariant();
    ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/lazyloading4.java:21:
  //@ ensures \result;
      ^
2 verification failures

class Problem {
  //@ spec_public
  private static final Object[] DEFAULT = {};
  //@ spec_public
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result ==> data != null;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == new Problem().checkInvariant();
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == new Problem().checkInvariant();
                         ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == new Problem().checkInvariant();
                                      ^
2 errors

class Problem {
  //@ spec_public
  private static final Object[] DEFAULT = {};
  //@ spec_public
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result == data != null;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result == (new Problem()).checkInvariant();
  public static boolean f() {
    return (new Problem()).checkInvariant();
  }
}
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:12: error: bad operand types for binary operator '=='
  //@ ensures \result == data != null;
                      ^
  first type:  boolean
  second type: Object
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: Object allocation is not permitted in specification expressions
  //@ ensures \result == (new Problem()).checkInvariant();
                          ^
/home/max/Documents/JMLGPT/tmp/lazyloading4.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == (new Problem()).checkInvariant();
                                        ^
3 errors

class Problem {
  //@ spec_public
  private static final Object[] DEFAULT = {};
  //@ spec_public
  private Object data;

  //@ ensures data == DEFAULT;
  Problem() {
    this.data = DEFAULT;
  }

  //@ ensures \result;
  boolean checkInvariant() {
    return data != null;
  }
}

public class lazyloading4 {
  //@ ensures \result;
  public static boolean f() {
    return new Problem().checkInvariant();
  }
}

