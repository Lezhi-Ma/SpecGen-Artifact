import java.io.BufferedReader;
import java.io.StringReader;

public class BufferedReaderReadLine {

  //@ requires br != null;
  //@ ensures \result != null ==> \result.equals(br.readLine());
  public static String check(BufferedReader br) throws Exception {
    String s = br.readLine();
    return s;
  }

  //@ requires arg != null;
  //@ ensures numLines > 0;
  public static void main(String arg) {
    String thisLine = null;
    int numLines = 0;

    try {
      BufferedReader br = new BufferedReader(new StringReader(arg));
      String line = check(br);
      while ((thisLine = check(br)) != null) {
        System.out.println(thisLine);
        numLines += 1;
      }
    } catch (Exception e) {
      e.printStackTrace();
      return;
    }
    assert numLines > 0;
  }
}
/home/max/Documents/JMLGPT/tmp/BufferedReaderReadLine.java:14: error: cannot find symbol
  //@ ensures numLines > 0;
              ^
  symbol:   variable numLines
  location: class BufferedReaderReadLine
1 error

import java.io.BufferedReader;
import java.io.StringReader;

public class BufferedReaderReadLine {

  //@ requires br != null;
  //@ ensures \result != null ==> \result.equals(br.readLine());
  public static String check(BufferedReader br) throws Exception {
    String s = br.readLine();
    return s;
  }

  //@ requires arg != null;
  //@ ensures \result > 0;
  public static void main(String arg) {
    String thisLine = null;
    int numLines = 0;

    try {
      BufferedReader br = new BufferedReader(new StringReader(arg));
      String line = check(br);
      while ((thisLine = check(br)) != null) {
        System.out.println(thisLine);
        numLines += 1;
      }
    } catch (Exception e) {
      e.printStackTrace();
      return;
    }
    assert numLines > 0;
  }
}
/home/max/Documents/JMLGPT/tmp/BufferedReaderReadLine.java:14: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result > 0;
               ^
1 error

import java.io.BufferedReader;
import java.io.StringReader;

public class BufferedReaderReadLine {

  //@ requires br != null;
  //@ ensures \result > 0;
  public static int check(BufferedReader br) throws Exception {
    String s = br.readLine();
    return s != null ? 1 : 0;
  }

  //@ requires arg != null;
  //@ ensures numLines > 0;
  public static void main(String arg) {
    String thisLine = null;
    int numLines = 0;

    try {
      BufferedReader br = new BufferedReader(new StringReader(arg));
      String line = br.readLine();
      while ((thisLine = br.readLine()) != null) {
        System.out.println(thisLine);
        numLines += 1;
      }
    } catch (Exception e) {
      e.printStackTrace();
      return;
    }
    assert numLines > 0;
  }
}
/home/max/Documents/JMLGPT/tmp/BufferedReaderReadLine.java:14: error: cannot find symbol
  //@ ensures numLines > 0;
              ^
  symbol:   variable numLines
  location: class BufferedReaderReadLine
1 error

import java.io.BufferedReader;
import java.io.StringReader;

public class BufferedReaderReadLine {

  //@ requires br != null;
  //@ ensures \result > 0;
  public static int check(BufferedReader br) throws Exception {
    String s = br.readLine();
    return s != null ? 1 : 0;
  }

  //@ requires arg != null;
  //@ ensures \result > 0;
  public static int main(String arg) {
    String thisLine = null;
    int numLines = 0;

    try {
      BufferedReader br = new BufferedReader(new StringReader(arg));
      String line = br.readLine();
      while ((thisLine = br.readLine()) != null) {
        System.out.println(thisLine);
        numLines += 1;
      }
    } catch (Exception e) {
      e.printStackTrace();
      return 0;
    }
    assert numLines > 0;
    return numLines;
  }
}
