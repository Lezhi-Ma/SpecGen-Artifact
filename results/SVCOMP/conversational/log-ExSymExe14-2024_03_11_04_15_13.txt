class Main {
  static int field;
  static int field2;

  //@ requires arg != null;
  //@ ensures \result <==> arg < 0;
  public static boolean f(Short arg) {
    if (arg < 0)
      return true;
    int x = arg;

    Main inst = new Main();
    field = arg;
    return inst.test(x, arg, field2);
  }
  
  //@ ensures \result ==> r == x + z && x == z - 3 && z >= x && (x <= r ==> System.out.println("branch BOO1")) && (x > r ==> System.out.println("branch BOO2"));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe14");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z <= x) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x <= r) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe14.java:17: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> r == x + z && x == z - 3 && z >= x && (x <= r ==> System.out.println("branch BOO1")) && (x > r ==> System.out.println("branch BOO2"));
                                                                                              ^
/home/max/Documents/JMLGPT/tmp/ExSymExe14.java:17: error: incompatible types: void cannot be converted to boolean
  //@ ensures \result ==> r == x + z && x == z - 3 && z >= x && (x <= r ==> System.out.println("branch BOO1")) && (x > r ==> System.out.println("branch BOO2"));
                                                                                                                                               ^
2 errors

class Main {
  static int field;
  static int field2;

  //@ requires arg != null;
  //@ ensures \result <==> arg < 0;
  public static boolean f(Short arg) {
    if (arg < 0)
      return true;
    int x = arg;

    Main inst = new Main();
    field = arg;
    return inst.test(x, arg, field2);
  }
  
  //@ ensures r == x + z && x == z - 3 && z >= x && (x <= r ==> \result == true) && (x > r ==> \result == true);
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe14");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z <= x) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x <= r) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
