class Main {
  static int field;
  static int field2;

  //@ requires x == 3;
  //@ requires z == field;
  //@ requires r == field2;
  //@ ensures \result <==> z >= x && x < r;
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires x == 3;
  //@ requires z == field;
  //@ requires r == field2;
  //@ ensures \result <==> z >= x && x < r;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ requires x == 3;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ requires z == field;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: An identifier with package visibility may not be used in a requires clause with public visibility
  //@ requires z == field;
                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:7: error: cannot find symbol
  //@ requires r == field2;
               ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:7: error: An identifier with package visibility may not be used in a requires clause with public visibility
  //@ requires r == field2;
                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                         ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:17: error: An identifier with package visibility may not be used in a requires clause with public visibility
  //@ requires z == field;
                    ^
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:18: error: An identifier with package visibility may not be used in a requires clause with public visibility
  //@ requires r == field2;
                    ^
11 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires x == 3;
  //@ requires z == field;
  //@ requires r == field2;
  //@ ensures \result <==> z >= x && x < r;
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires x == 3;
  //@ requires z == field;
  //@ requires r == field2;
  //@ ensures \result <==> z >= x && x < r;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:5: error: cannot find symbol
  //@ requires x == 3;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:6: error: cannot find symbol
  //@ requires z == field;
               ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:7: error: cannot find symbol
  //@ requires r == field2;
               ^
  symbol:   variable r
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                           ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                     ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe20.java:8: error: cannot find symbol
  //@ ensures \result <==> z >= x && x < r;
                                         ^
  symbol:   variable r
  location: class Main
7 errors

class Main {
  static /*@ spec_public @*/ int field;
  static /*@ spec_public @*/ int field2;

  //@ requires 3 == 3;
  //@ requires field == field;
  //@ requires field2 == field2;
  //@ ensures \result <==> field >= 3 && 3 < field2;
  public static boolean main() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field, field2);
  }

  //@ requires 3 == 3;
  //@ requires field == field;
  //@ requires field2 == field2;
  //@ ensures \result <==> field >= 3 && 3 < field2;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe20");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z >= x) System.out.println("branch FOO1");
    else System.out.println("branch FOO2");
    if (x >= r) {
      return false;
    } else System.out.println("branch BOO2");

    return true;
  }
}
