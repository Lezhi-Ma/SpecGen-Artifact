class Main {

  //@ ensures \result ==> test(a, b, a);
  //@ ensures !\result ==> !test(a, b, a);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                               ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                                  ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ ensures \result ==> test(a, b, a);
                                     ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, a);
                                 ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, a);
                                    ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, a);
                                       ^
  symbol:   variable a
  location: class Main
6 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  //@ ensures !\result ==> !test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures !\result ==> !test(3, 8, 3);
                            ^
2 errors

class Main {

  //@ ensures \result ==> test(3, 8, 3);
  //@ ensures !\result ==> !test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures \result ==> test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: non-static method test(int,int,int) cannot be referenced from a static context
  //@ ensures !\result ==> !test(3, 8, 3);
                            ^
2 errors

class Main {

  //@ ensures \result ==> inst.test(3, 8, 3);
  //@ ensures !\result ==> !inst.test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ ensures \result ==> inst.test(3, 8, 3);
                          ^
  symbol:   variable inst
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures !\result ==> !inst.test(3, 8, 3);
                            ^
  symbol:   variable inst
  location: class Main
2 errors

class Main {

  //@ ensures \result ==> this.test(3, 8, 3);
  //@ ensures !\result ==> !this.test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> this.test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> !this.test(3, 8, 3);
                            ^
2 errors

class Main {

  //@ ensures \result ==> this.test(3, 8, 3);
  //@ ensures !\result ==> !this.test(3, 8, 3);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: non-static variable this cannot be referenced from a static context
  //@ ensures \result ==> this.test(3, 8, 3);
                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: non-static variable this cannot be referenced from a static context
  //@ ensures !\result ==> !this.test(3, 8, 3);
                            ^
2 errors

class Main {

  //@ requires a == 3 && b == 8 && c == 3;
  //@ ensures \result ==> test(a, b, c);
  //@ ensures !\result ==> !test(a, b, c);
  public static boolean f() {
    int a = 3;
    Main inst = new Main();
    int b = 8;
    return inst.test(a, b, a);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires a == 3 && b == 8 && c == 3;
               ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires a == 3 && b == 8 && c == 3;
                         ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires a == 3 && b == 8 && c == 3;
                                   ^
  symbol:   variable c
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(a, b, c);
                               ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(a, b, c);
                                  ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(a, b, c);
                                     ^
  symbol:   variable c
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, c);
                                 ^
  symbol:   variable a
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, c);
                                    ^
  symbol:   variable b
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(a, b, c);
                                       ^
  symbol:   variable c
  location: class Main
9 errors

class Main {

  //@ requires x == 3 && y == 8 && z == 3;
  //@ ensures \result ==> test(x, y, z);
  //@ ensures !\result ==> !test(x, y, z);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    int y = 8;
    return inst.test(x, y, x);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                                   ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                  ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                     ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                    ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                       ^
  symbol:   variable z
  location: class Main
9 errors

class Main {

  //@ requires x == 3 && y == 8 && z == 3;
  //@ ensures \result ==> test(x, y, z);
  //@ ensures !\result ==> !test(x, y, z);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    int y = 8;
    return inst.test(x, y, x);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                                   ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                  ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                     ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                    ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                       ^
  symbol:   variable z
  location: class Main
9 errors

class Main {

  //@ requires x == 3 && y == 8 && z == 3;
  //@ ensures \result ==> test(x, y, z);
  //@ ensures !\result ==> !test(x, y, z);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    int y = 8;
    return inst.test(x, y, x);
  }

  //@ requires x == z;
  //@ ensures \result ==> (z > 0 && y > 0);
  //@ ensures !\result ==> (z <= 0 || y <= 0);
  public boolean test(int x, int y, int z) {
    System.out.println("Testing ExSymExe26");
    y = x;
    z++;
    if (z > 0) System.out.println("branch FOO1");
    else {
      return false;
    }
    if (y > 0) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                         ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:3: error: cannot find symbol
  //@ requires x == 3 && y == 8 && z == 3;
                                   ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                               ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                  ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:4: error: cannot find symbol
  //@ ensures \result ==> test(x, y, z);
                                     ^
  symbol:   variable z
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                    ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe26.java:5: error: cannot find symbol
  //@ ensures !\result ==> !test(x, y, z);
                                       ^
  symbol:   variable z
  location: class Main
9 errors

