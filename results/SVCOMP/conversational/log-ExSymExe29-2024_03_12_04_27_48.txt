class Main {
    //@ ensures \result ==> test(x, y, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: cannot find symbol
    //@ ensures \result ==> test(x, y, 9);
                                 ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: cannot find symbol
    //@ ensures \result ==> test(x, y, 9);
                                    ^
  symbol:   variable y
  location: class Main
2 errors

class Main {
    //@ ensures \result ==> test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: non-static method test(int,int,int) cannot be referenced from a static context
    //@ ensures \result ==> test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> inst.test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: cannot find symbol
    //@ ensures \result ==> inst.test(3, 5, 9);
                            ^
  symbol:   variable inst
  location: class Main
1 error

class Main {
    //@ ensures \result ==> test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: non-static method test(int,int,int) cannot be referenced from a static context
    //@ ensures \result ==> test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> new Main().test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new Main().test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: non-static method test(int,int,int) cannot be referenced from a static context
    //@ ensures \result ==> test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> new Main().test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new Main().test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: non-static method test(int,int,int) cannot be referenced from a static context
    //@ ensures \result ==> test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> new Main().test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new Main().test(3, 5, 9);
                            ^
1 error

class Main {
    //@ ensures \result ==> test(3, 5, 9);
    public static boolean f() {
        int x = 3;
        int y = 5;
        Main inst = new Main();
        return inst.test(x, y, 9);
    }

    //@ requires x == 3 && z == 5 && r == 9;
    //@ ensures \result ==> false;
    public boolean test(int x, int z, int r) {
        System.out.println("Testing ExSymExe29");
        if (z != x) System.out.println("branch FOO1");
        else System.out.println("branch FOO2");
        if (x != r) System.out.println("branch BOO1");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe29.java:2: error: non-static method test(int,int,int) cannot be referenced from a static context
    //@ ensures \result ==> test(3, 5, 9);
                            ^
1 error

