public class StartsWith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) throws IOException {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:1: error: class StartsWith is public, should be declared in a file named StartsWith.java
public class StartsWith {
       ^
/home/max/Documents/JMLGPT/tmp/startswith.java:5: error: cannot find symbol
    public boolean doPost(String request) throws IOException {
                                                 ^
  symbol:   class IOException
  location: class StartsWith
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class StartsWith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class StartsWith
4 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) throws IOException {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:5: error: cannot find symbol
    public boolean doPost(String request) throws IOException {
                                                 ^
  symbol:   class IOException
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class startswith
3 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;

        String[] argsEnv = {param};

        if (param.equals("") && param.equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
                                                    ^
  symbol:   variable param
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
                                                   ^
  symbol:   variable param
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;

        if (param.equals("") && param.equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
                                                    ^
  symbol:   variable param
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
                                                   ^
  symbol:   variable param
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;

        if (param.equals("") && param.equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
                                                    ^
  symbol:   variable param
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
                                                   ^
  symbol:   variable param
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;

        if (param.equals("") && param.equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && param.equals("GOTCHA"));
                                                    ^
  symbol:   variable param
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && param.equals("GOTCHA");
                                                   ^
  symbol:   variable param
  location: class startswith
2 errors

public class startswith {
    //@ requires request != null;
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
    public boolean doPost(String request) {
        String param = request;
        String[] argsEnv = {param};

        if (param.equals("") && argsEnv[0].equals("GOTCHA")) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/startswith.java:3: error: cannot find symbol
    //@ ensures \result ==> !(request.equals("") && argsEnv[0].equals("GOTCHA"));
                                                    ^
  symbol:   variable argsEnv
  location: class startswith
/home/max/Documents/JMLGPT/tmp/startswith.java:4: error: cannot find symbol
    //@ ensures !\result ==> request.equals("") && argsEnv[0].equals("GOTCHA");
                                                   ^
  symbol:   variable argsEnv
  location: class startswith
2 errors

