public class StringCompare01 {
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for equality using equals method
        assert s1.equals("test") == true;

        // Test for inequality using != operator
        assert s1 != "test" == true;

        // Test for case-insensitive equality using equalsIgnoreCase method
        assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison using compareTo method
        assert s1.compareTo(s2) == 13;

        assert s2.compareTo(s1) == -13;

        assert s1.compareTo(s1) == 0;

        assert s3.compareTo(s4) == -32;

        assert s4.compareTo(s3) == 32;

        // Test regionMatches method for case sensitive comparison
        assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches method for case insensitive comparison
        assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 335544320 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid11640.log

public class StringCompare01 {
    //@ requires args != null;
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for equality using equals method
        assert s1.equals("test") == true;

        // Test for inequality using != operator
        assert s1 != "test" == true;

        // Test for case-insensitive equality using equalsIgnoreCase method
        assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison using compareTo method
        assert s1.compareTo(s2) == 13;

        assert s2.compareTo(s1) == -13;

        assert s1.compareTo(s1) == 0;

        assert s3.compareTo(s4) == -32;

        assert s4.compareTo(s3) == 32;

        // Test regionMatches method for case sensitive comparison
        assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches method for case insensitive comparison
        assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 339738624 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid11686.log

public class StringCompare01 {
    //@ requires args != null;
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for equality using equals method
        assert s1.equals("test") == true;

        // Test for inequality using != operator
        assert s1 != "test" == true;

        // Test for case-insensitive equality using equalsIgnoreCase method
        assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison using compareTo method
        assert s1.compareTo(s2) == 13;

        assert s2.compareTo(s1) == -13;

        assert s1.compareTo(s1) == 0;

        assert s3.compareTo(s4) == -32;

        assert s4.compareTo(s3) == 32;

        // Test regionMatches method for case sensitive comparison
        assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches method for case insensitive comparison
        assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
