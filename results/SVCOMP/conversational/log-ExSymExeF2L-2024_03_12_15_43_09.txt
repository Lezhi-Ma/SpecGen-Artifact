class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: non-static method test(float) cannot be referenced from a static context
    //@ ensures \result <==> test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> new Main().test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: non-static method test(float) cannot be referenced from a static context
    //@ ensures \result <==> test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> new Main().test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: non-static method test(float) cannot be referenced from a static context
    //@ ensures \result <==> test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> new Main().test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: non-static method test(float) cannot be referenced from a static context
    //@ ensures \result <==> test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> new Main().test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: non-static method test(float) cannot be referenced from a static context
    //@ ensures \result <==> test(x);
                             ^
1 error

class Main {
    //@ requires 0.0f <= x && x <= Long.MAX_VALUE / 2;
    //@ ensures \result <==> new Main().test(x);
    public static boolean f(float x) {
        if (x >= 0.0f && x <= Long.MAX_VALUE / 2) {
            Main inst = new Main();
            return inst.test(x);
        }
        return true;
    }

    //@ ensures \result <==> (long)(x + 1) > 0;
    public boolean test(float x) {
        long res = (long) ++x;
        if (res > 0) System.out.println("x >0");
        else {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2L.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().test(x);
                             ^
1 error

