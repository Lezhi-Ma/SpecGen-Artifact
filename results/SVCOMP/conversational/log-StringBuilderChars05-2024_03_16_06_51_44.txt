public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result ==> buffer.toString().equals("HiffBllTe Limited");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: cannot find symbol
    //@ ensures \result ==> buffer.toString().equals("HiffBllTe Limited");
                            ^
  symbol:   variable buffer
  location: class StringBuilderChars05
1 error

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result ==> \result == true && buffer.toString().equals("HiffBllTe Limited");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: cannot find symbol
    //@ ensures \result ==> \result == true && buffer.toString().equals("HiffBllTe Limited");
                                               ^
  symbol:   variable buffer
  location: class StringBuilderChars05
1 error

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (buffer.toString().equals("HiffBllTe Limited"));
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: cannot find symbol
    //@ ensures \result == (buffer.toString().equals("HiffBllTe Limited"));
                            ^
  symbol:   variable buffer
  location: class StringBuilderChars05
1 error

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
    public static boolean f(String arg) {
        return new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: void cannot be dereferenced
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                                                                    ^
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:5: error: void cannot be dereferenced
        return new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited");
                                                       ^
3 errors

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    public static boolean f(String arg) {
        return checkStringBuilder(arg);
    }

    //@ requires arg != null;
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
    private static boolean checkStringBuilder(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (checkStringBuilder(arg));
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:9: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:9: error: void cannot be dereferenced
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                                                                    ^
3 errors

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    public static boolean f(String arg) {
        return checkStringBuilder(arg);
    }

    //@ requires arg != null;
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
    private static /*@ spec_public @*/ boolean checkStringBuilder(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:9: error: Object allocation is not permitted in specification expressions
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                            ^
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:9: error: void cannot be dereferenced
    //@ ensures \result == (new StringBuilder(arg).setCharAt(0, 'H').setCharAt(6, 'T').toString().equals("HiffBllTe Limited"));
                                                                    ^
2 errors

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    public static boolean f(String arg) {
        return checkStringBuilder(arg);
    }

    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    private static boolean checkStringBuilder(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:3: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (checkStringBuilder(arg));
                            ^
1 error

public class StringBuilderChars05 {
    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    public static boolean f(String arg) {
        return checkStringBuilder(arg);
    }

    //@ requires arg != null;
    //@ ensures \result == (checkStringBuilder(arg));
    private static /*@ spec_public @*/ boolean checkStringBuilder(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        buffer.setCharAt(0, 'H');
        buffer.setCharAt(6, 'T');
        return buffer.toString().equals("HiffBllTe Limited");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars05.java:9: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
    //@ ensures \result == (checkStringBuilder(arg));
                                              ^
  Reason: No logical function for method StringBuilderChars05.checkStringBuilder(arg) checkStringBuilder(java.lang.String)
error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
  Reason: Unexpected exception: APPLY-HELPER java.lang.NullPointerException: Cannot read field "type" because "arg" is null
java.lang.NullPointerException: Cannot read field "type" because "arg" is null
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitParens(JmlAssertionAdder.java:12078)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCParens.accept(JCTree.java:1969)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitBinary(JmlAssertionAdder.java:13597)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBinary.accept(JCTree.java:2111)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertJML(JmlAssertionAdder.java:1648)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:10710)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8031)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1752)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitReturn(JmlAssertionAdder.java:7186)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1664)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1441)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertMethodBodyNoInit(JmlAssertionAdder.java:1235)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlMethodDecl(JmlAssertionAdder.java:17247)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlMethodDecl.accept(JmlTree.java:1383)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlClassDecl(JmlAssertionAdder.java:15904)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlClassDecl.accept(JmlTree.java:1295)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1441)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlEsc.check(JmlEsc.java:112)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.esc(JmlCompiler.java:536)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.flow(JmlCompiler.java:362)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:936)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.compile(JmlCompiler.java:197)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:321)
	at jdk.compiler/org.jmlspecs.openjml.Main.compile(Main.java:534)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:374)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:332)
	at jdk.compiler/org.jmlspecs.openjml.Main.main(Main.java:295)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:53)
java.lang.NullPointerException: Cannot read field "type" because "arg" is null
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitParens(JmlAssertionAdder.java:12078)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCParens.accept(JCTree.java:1969)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitBinary(JmlAssertionAdder.java:13597)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBinary.accept(JCTree.java:2111)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertJML(JmlAssertionAdder.java:1648)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:10710)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8031)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1752)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitReturn(JmlAssertionAdder.java:7186)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCReturn.accept(JCTree.java:1664)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1441)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertMethodBodyNoInit(JmlAssertionAdder.java:1235)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlMethodDecl(JmlAssertionAdder.java:17247)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlMethodDecl.accept(JmlTree.java:1383)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlClassDecl(JmlAssertionAdder.java:15904)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlClassDecl.accept(JmlTree.java:1295)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1441)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlEsc.check(JmlEsc.java:112)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.esc(JmlCompiler.java:536)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.flow(JmlCompiler.java:362)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:936)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.compile(JmlCompiler.java:197)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:321)
	at jdk.compiler/org.jmlspecs.openjml.Main.compile(Main.java:534)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:374)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:332)
	at jdk.compiler/org.jmlspecs.openjml.Main.main(Main.java:295)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:53)
java.lang.NullPointerException: Cannot read field "type" because "arg" is null
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitParens(JmlAssertionAdder.java:12078)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCParens.accept(JCTree.java:1969)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitBinary(JmlAssertionAdder.java:13597)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCBinary.accept(JCTree.java:2111)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1554)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertJML(JmlAssertionAdder.java:1648)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.addPostConditions(JmlAssertionAdder.java:5428)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertMethodBodyNoInit(JmlAssertionAdder.java:1256)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlMethodDecl(JmlAssertionAdder.java:17247)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlMethodDecl.accept(JmlTree.java:1383)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlClassDecl(JmlAssertionAdder.java:15904)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlClassDecl.accept(JmlTree.java:1295)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1441)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlEsc.check(JmlEsc.java:112)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.esc(JmlCompiler.java:536)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.flow(JmlCompiler.java:362)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:936)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.compile(JmlCompiler.java:197)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:321)
	at jdk.compiler/org.jmlspecs.openjml.Main.compile(Main.java:534)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:374)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:332)
	at jdk.compiler/org.jmlspecs.openjml.Main.main(Main.java:295)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:53)
2 errors

