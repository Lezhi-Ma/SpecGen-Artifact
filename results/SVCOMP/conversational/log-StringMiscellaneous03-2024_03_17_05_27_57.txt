public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= count && count <= s1.length();
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases count;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:6: verify: The prover cannot establish an assertion (LoopInvariant) in method f
        //@ maintaining 0 <= count && count <= s1.length();
            ^
1 verification failure

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(i))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s1.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s2.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s1.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s2.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s1.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s1.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s2.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s2.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
        ^
2 verification failures

public class StringMiscellaneous03 {
    //@ requires s1 != null && s2 != null;
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
    public static boolean f(String s1, String s2) {
        int i = 0;
        //@ maintaining 0 <= i && i <= s1.length();
        //@ decreases s1.length() - i;
        for (int count = s1.length() - 1; count >= 0; count--) {
            if (s1.charAt(count) == s2.charAt(s2.length() - 1 - count))
                return false;
            ++i;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3:) in method f
        return true;
        ^
/home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringMiscellaneous03.java:13:
    //@ ensures \result <==> (\forall int count; 0 <= count && count < s1.length(); s1.charAt(count) != s2.charAt(s2.length() - 1 - count));
        ^
2 verification failures

