enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; System.out.println(e));
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures e == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:8: error: incompatible types: void cannot be converted to boolean
  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; System.out.println(e));
                                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: cannot find symbol
  //@ ensures e == enum1.VAL5;
              ^
  symbol:   variable e
  location: class Main
2 errors

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures e == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: cannot find symbol
  //@ ensures e == enum1.VAL5;
              ^
  symbol:   variable e
  location: class Main
1 error

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures \result == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == enum1.VAL5;
               ^
1 error

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures e == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: cannot find symbol
  //@ ensures e == enum1.VAL5;
              ^
  symbol:   variable e
  location: class Main
1 error

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures \result == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == enum1.VAL5;
               ^
1 error

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures e == enum1.VAL5;
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}
/home/max/Documents/JMLGPT/tmp/enum1.java:17: error: cannot find symbol
  //@ ensures e == enum1.VAL5;
              ^
  symbol:   variable e
  location: class Main
1 error

enum enum1 {
  VAL1,
  VAL2,
  VAL3,
  VAL4,
  VAL5;

  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  static {
    for (enum1 e : enum1.values()) {
      System.out.println(e);
    }
  }
}

class Main {
  //@ ensures (\forall enum1 e; e == enum1.VAL1 || e == enum1.VAL2 || e == enum1.VAL3 || e == enum1.VAL4 || e == enum1.VAL5; true);
  public static void main(String[] args) {
    enum1 e = enum1.VAL5;
    assert (e == enum1.VAL5);
  }
}

