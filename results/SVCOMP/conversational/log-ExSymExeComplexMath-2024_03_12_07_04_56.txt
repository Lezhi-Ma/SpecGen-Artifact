class Main {
  static /*@ spec_public */ int field;

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test2(0.0);
  }

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public boolean test2(double in) {
    if (Math.round(in) > 16.0) {
      return false;
    } else {
      System.out.println("do2()");
      return true;
    }
  }

  //@ ensures x == 0 && y != 0 ==> System.out.println(">>>>>>>>>>>> 1");
  //@ ensures x != 0 ==> System.out.println(">>>>>>>>>>>> LOOK!");
  //@ ensures x < 0 ==> System.out.println(">>>>>>>>>>>>>>> ???");
  //@ ensures x > 0 ==> System.out.println(">>>>>>>>>>>>>>> !!!1");
  public void angleXY_(double x1, double y1) {
    double x = x1;
    double y = y1;
    if (x == 0 && y != 0) {
      System.out.println(">>>>>>>>>>>> 1");
    } else {
      System.out.println(">>>>>>>>>>>> LOOK!");
      if (x < 0) {
        System.out.println(">>>>>>>>>>>>>>> ???");
      } else if (x > 0) {
        System.out.println(">>>>>>>>>>>>>>> !!!1");
      }
    }
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:4: error: cannot find symbol
  //@ ensures \result == true <==> Math.round(in) <= 16.0;
                                              ^
  symbol:   variable in
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:22: error: cannot find symbol
  //@ ensures x == 0 && y != 0 ==> System.out.println(">>>>>>>>>>>> 1");
              ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:22: error: cannot find symbol
  //@ ensures x == 0 && y != 0 ==> System.out.println(">>>>>>>>>>>> 1");
                        ^
  symbol:   variable y
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:22: error: incompatible types: void cannot be converted to boolean
  //@ ensures x == 0 && y != 0 ==> System.out.println(">>>>>>>>>>>> 1");
                                                     ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:23: error: cannot find symbol
  //@ ensures x != 0 ==> System.out.println(">>>>>>>>>>>> LOOK!");
              ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:23: error: incompatible types: void cannot be converted to boolean
  //@ ensures x != 0 ==> System.out.println(">>>>>>>>>>>> LOOK!");
                                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:24: error: cannot find symbol
  //@ ensures x < 0 ==> System.out.println(">>>>>>>>>>>>>>> ???");
              ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:24: error: incompatible types: void cannot be converted to boolean
  //@ ensures x < 0 ==> System.out.println(">>>>>>>>>>>>>>> ???");
                                          ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:25: error: cannot find symbol
  //@ ensures x > 0 ==> System.out.println(">>>>>>>>>>>>>>> !!!1");
              ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:25: error: incompatible types: void cannot be converted to boolean
  //@ ensures x > 0 ==> System.out.println(">>>>>>>>>>>>>>> !!!1");
                                          ^
10 errors

class Main {
  static /*@ spec_public */ int field;

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test2(0.0);
  }

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public boolean test2(double in) {
    if (Math.round(in) > 16.0) {
      return false;
    } else {
      System.out.println("do2()");
      return true;
    }
  }

  //@ ensures x1 == 0 && y1 != 0 ==> System.out.println(">>>>>>>>>>>> 1");
  //@ ensures x1 != 0 ==> System.out.println(">>>>>>>>>>>> LOOK!");
  //@ ensures x1 < 0 ==> System.out.println(">>>>>>>>>>>>>>> ???");
  //@ ensures x1 > 0 ==> System.out.println(">>>>>>>>>>>>>>> !!!1");
  public void angleXY_(double x1, double y1) {
    double x = x1;
    double y = y1;
    if (x == 0 && y != 0) {
      System.out.println(">>>>>>>>>>>> 1");
    } else {
      System.out.println(">>>>>>>>>>>> LOOK!");
      if (x < 0) {
        System.out.println(">>>>>>>>>>>>>>> ???");
      } else if (x > 0) {
        System.out.println(">>>>>>>>>>>>>>> !!!1");
      }
    }
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:4: error: cannot find symbol
  //@ ensures \result == true <==> Math.round(in) <= 16.0;
                                              ^
  symbol:   variable in
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:22: error: incompatible types: void cannot be converted to boolean
  //@ ensures x1 == 0 && y1 != 0 ==> System.out.println(">>>>>>>>>>>> 1");
                                                       ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:23: error: incompatible types: void cannot be converted to boolean
  //@ ensures x1 != 0 ==> System.out.println(">>>>>>>>>>>> LOOK!");
                                            ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:24: error: incompatible types: void cannot be converted to boolean
  //@ ensures x1 < 0 ==> System.out.println(">>>>>>>>>>>>>>> ???");
                                           ^
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:25: error: incompatible types: void cannot be converted to boolean
  //@ ensures x1 > 0 ==> System.out.println(">>>>>>>>>>>>>>> !!!1");
                                           ^
5 errors

class Main {
  static /*@ spec_public */ int field;

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test2(0.0);
  }

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public boolean test2(double in) {
    if (Math.round(in) > 16.0) {
      return false;
    } else {
      System.out.println("do2()");
      return true;
    }
  }

  //@ ensures x1 == 0 && y1 != 0;
  //@ ensures x1 != 0;
  //@ ensures x1 < 0;
  //@ ensures x1 > 0;
  public void angleXY_(double x1, double y1) {
    double x = x1;
    double y = y1;
    if (x == 0 && y != 0) {
      System.out.println(">>>>>>>>>>>> 1");
    } else {
      System.out.println(">>>>>>>>>>>> LOOK!");
      if (x < 0) {
        System.out.println(">>>>>>>>>>>>>>> ???");
      } else if (x > 0) {
        System.out.println(">>>>>>>>>>>>>>> !!!1");
      }
    }
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:4: error: cannot find symbol
  //@ ensures \result == true <==> Math.round(in) <= 16.0;
                                              ^
  symbol:   variable in
  location: class Main
1 error

class Main {
  static /*@ spec_public */ int field;

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test2(0.0);
  }

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public boolean test2(double in) {
    if (Math.round(in) > 16.0) {
      return false;
    } else {
      System.out.println("do2()");
      return true;
    }
  }

  //@ ensures x1 == 0 && y1 != 0;
  //@ ensures x1 != 0;
  //@ ensures x1 < 0;
  //@ ensures x1 > 0;
  public void angleXY_(double x1, double y1) {
    double x = x1;
    double y = y1;
    if (x == 0 && y != 0) {
      System.out.println(">>>>>>>>>>>> 1");
    } else {
      System.out.println(">>>>>>>>>>>> LOOK!");
      if (x < 0) {
        System.out.println(">>>>>>>>>>>>>>> ???");
      } else if (x > 0) {
        System.out.println(">>>>>>>>>>>>>>> !!!1");
      }
    }
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeComplexMath.java:4: error: cannot find symbol
  //@ ensures \result == true <==> Math.round(in) <= 16.0;
                                              ^
  symbol:   variable in
  location: class Main
1 error

class Main {
  static /*@ spec_public */ int field;

  //@ ensures field == 9;
  //@ ensures \result == true <==> Math.round(0.0) <= 16.0;
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test2(0.0);
  }

  //@ ensures \result == true <==> Math.round(in) <= 16.0;
  public boolean test2(double in) {
    if (Math.round(in) > 16.0) {
      return false;
    } else {
      System.out.println("do2()");
      return true;
    }
  }

  //@ ensures x1 == 0 && y1 != 0;
  //@ ensures x1 != 0;
  //@ ensures x1 < 0;
  //@ ensures x1 > 0;
  public void angleXY_(double x1, double y1) {
    double x = x1;
    double y = y1;
    if (x == 0 && y != 0) {
      System.out.println(">>>>>>>>>>>> 1");
    } else {
      System.out.println(">>>>>>>>>>>> LOOK!");
      if (x < 0) {
        System.out.println(">>>>>>>>>>>>>>> ???");
      } else if (x > 0) {
        System.out.println(">>>>>>>>>>>>>>> !!!1");
      }
    }
  }
}
