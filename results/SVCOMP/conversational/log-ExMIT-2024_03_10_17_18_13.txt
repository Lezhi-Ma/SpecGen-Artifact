import java.util.Random;

public class ExMIT {
  //@ requires (\exists int i; i == 0);
  //@ ensures \result == 0 || \result == 1;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires i == 0;
  //@ ensures \result == 0 || \result == 1;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      assert false;
      return 1;
    }
    return 0;
  }

  //@ requires i > 0;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
               ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
                               ^
2 errors

import java.util.Random;

public class ExMIT {
  //@ requires (\exists int i; i == 0);
  //@ ensures \result == 0 || \result == 1;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires i == 0;
  //@ ensures \result == 0 || \result == 1;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      assert false;
      return 1;
    }
    return 0;
  }

  //@ requires i > 0;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
               ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
                               ^
2 errors

import java.util.Random;

public class ExMIT {
  //@ requires (\exists int i; i == 0);
  //@ ensures \result == 0 || \result == 1;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires i == 0;
  //@ ensures \result == 0 || \result == 1;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      assert false;
      return 1;
    }
    return 0;
  }

  //@ requires i > 0;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
               ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:5: error: A \result expression may not be used in the specification of a method that returns void
  //@ ensures \result == 0 || \result == 1;
                               ^
2 errors

import java.util.Random;

public class ExMIT {
  //@ requires (\exists int i; i == 0);
  //@ ensures true;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires i == 0;
  //@ ensures true;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      assert false;
      return 1;
    }
    return 0;
  }

  //@ requires i > 0;
  //@ ensures true;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}

