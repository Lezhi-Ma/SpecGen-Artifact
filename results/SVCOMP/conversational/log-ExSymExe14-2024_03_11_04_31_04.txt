class Main {
  static int field;
  static int field2;

  //@ requires arg != null;
  //@ requires arg < 0;
  //@ ensures \result ==> (\exists int x; x == arg; (\forall Main inst; inst != null; inst.test(x, arg, field2)));
  public static boolean f(Short arg) {
    if (arg < 0)
      return true;
    int x = arg;

    Main inst = new Main();
    field = arg;
    return inst.test(x, arg, field2);
  }
  
  //@ requires r <= Integer.MAX_VALUE && x <= Integer.MAX_VALUE && z <= Integer.MAX_VALUE && z >= Integer.MIN_VALUE;
  //@ ensures \result ==> x <= z && z <= r;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe14");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z <= x) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x <= r) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe14.java:7: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result ==> (\exists int x; x == arg; (\forall Main inst; inst != null; inst.test(x, arg, field2)));
                                                                                                        ^
1 error

class Main {
  private static /*@ spec_public @*/ int field;
  private static /*@ spec_public @*/ int field2;

  //@ requires arg != null;
  //@ requires arg < 0;
  //@ ensures \result ==> (\exists int x; x == arg; (\forall Main inst; inst != null; inst.test(x, arg, field2)));
  public static boolean f(Short arg) {
    if (arg < 0)
      return true;
    int x = arg;

    Main inst = new Main();
    field = arg;
    return inst.test(x, arg, field2);
  }
  
  //@ requires r <= Integer.MAX_VALUE && x <= Integer.MAX_VALUE && z <= Integer.MAX_VALUE && z >= Integer.MIN_VALUE;
  //@ ensures \result ==> x <= z && z <= r;
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe14");
    int y = 3;
    r = x + z;
    x = z - y;
    z = r;
    if (z <= x) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (x <= r) System.out.println("branch BOO1");
    else System.out.println("branch BOO2");

    return true;
  }
}
