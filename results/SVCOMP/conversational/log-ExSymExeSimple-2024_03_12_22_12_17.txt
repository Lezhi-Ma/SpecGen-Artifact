class Main {
  static class Node {
    //@ ensures \result ==> a <= b;
    //@ ensures !\result ==> a > b;
    public boolean test(int a, int b) {
      if (a > b) {
        return false;
      } else if (a == b) {
        System.out.println("eq");
      } else {
        System.out.println("<");
      }
      return true;
    }
  }

  //@ ensures \result ==> arg < Integer.MAX_VALUE;
  //@ ensures !\result ==> arg >= Integer.MAX_VALUE;
  public static boolean f(int arg) {
    if (arg >= Integer.MAX_VALUE) return true;
    Main inst = new Main();
    Node n = new Node();
    return n.test(arg, arg + 1);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:20: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:17:) in method f
    if (arg >= Integer.MAX_VALUE) return true;
                                  ^
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:20:
  //@ ensures \result ==> arg < Integer.MAX_VALUE;
      ^
2 verification failures

class Main {
  static class Node {
    //@ ensures \result ==> a <= b;
    //@ ensures !\result ==> a > b;
    public boolean test(int a, int b) {
      if (a > b) {
        return false;
      } else if (a == b) {
        System.out.println("eq");
      } else {
        System.out.println("<");
      }
      return true;
    }
  }

  //@ ensures \result ==> arg < Integer.MAX_VALUE;
  //@ ensures !\result ==> arg >= Integer.MAX_VALUE;
  public static boolean f(int arg) {
    if (arg >= Integer.MAX_VALUE) return false;
    Main inst = new Main();
    Node n = inst.new Node();
    return n.test(arg, arg + 1);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeSimple.java:22: error: qualified new of static class
    Node n = inst.new Node();
             ^
1 error

class Main {
  static class Node {
    //@ ensures \result ==> a <= b;
    //@ ensures !\result ==> a > b;
    public boolean test(int a, int b) {
      if (a > b) {
        return false;
      } else if (a == b) {
        System.out.println("eq");
      } else {
        System.out.println("<");
      }
      return true;
    }
  }

  //@ ensures \result ==> arg < Integer.MAX_VALUE;
  //@ ensures !\result ==> arg >= Integer.MAX_VALUE;
  public static boolean f(int arg) {
    if (arg >= Integer.MAX_VALUE) return false;
    Node n = new Node();
    return n.test(arg, arg + 1);
  }
}

