class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a;
        } catch (Exception exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
            B b = (B) a;
                  ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
            B b = (B) a; // This cast will throw a ClassCastException
                  ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Exception e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
            B b = (B) a; // This cast will throw a ClassCastException
                  ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:10: verify: The prover cannot establish an assertion (PossiblyBadCast) in method f: a java.lang.Object cannot be proved to be a B
            B b = (B) a; // This cast will throw a ClassCastException
                  ^
1 verification failure

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (Error e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception Error has already been caught
        } catch (Error e) {
          ^
1 error

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (Exception e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception Exception has already been caught
        } catch (Exception e) {
          ^
1 error

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (RuntimeException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception RuntimeException has already been caught
        } catch (RuntimeException e) {
          ^
1 error

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (Error e) {
            return false;
        } catch (RuntimeException r) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception Error has already been caught
        } catch (Error e) {
          ^
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:17: error: exception RuntimeException has already been caught
        } catch (RuntimeException r) {
          ^
2 errors

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (Exception e) {
            return false;
        } catch (Error er) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception Exception has already been caught
        } catch (Exception e) {
          ^
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:17: error: exception Error has already been caught
        } catch (Error er) {
          ^
2 errors

class A {}

class B {}

public class ClassCastException3 {
    //@ ensures \result == true || \result == false;
    public static boolean f() {
        try {
            Object a = new A();
            B b = (B) a; // This cast will throw a ClassCastException
        } catch (ClassCastException exc) {
            return false;
        } catch (Throwable t) {
            return false;
        } catch (RuntimeException r) {
            return false;
        } catch (Error er) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:15: error: exception RuntimeException has already been caught
        } catch (RuntimeException r) {
          ^
/home/max/Documents/JMLGPT/tmp/ClassCastException3.java:17: error: exception Error has already been caught
        } catch (Error er) {
          ^
2 errors

