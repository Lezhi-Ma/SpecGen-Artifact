public class StringCompare01 {
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for String equality
        //@ assert s1.equals("test") == true;

        // Test for reference inequality
        //@ assert s1 != "test";

        // Test for case-insensitive equality
        //@ assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison
        //@ assert s1.compareTo(s2) == 13;
        //@ assert s2.compareTo(s1) == -13;
        //@ assert s1.compareTo(s1) == 0;
        //@ assert s3.compareTo(s4) == -32;
        //@ assert s4.compareTo(s3) == 32;

        // Test regionMatches (case sensitive)
        //@ assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches (ignore case)
        //@ assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 339738624 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid11837.log

public class StringCompare01 {
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for String equality
        //@ assert s1.equals("test") == true;

        // Test for reference inequality
        //@ assert s1 != "test";

        // Test for case-insensitive equality
        //@ assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison
        //@ assert s1.compareTo(s2) == 13;
        //@ assert s2.compareTo(s1) == -13;
        //@ assert s1.compareTo(s1) == 0;
        //@ assert s3.compareTo(s4) == -32;
        //@ assert s4.compareTo(s3) == 32;

        // Test regionMatches (case sensitive)
        //@ assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches (ignore case)
        //@ assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 220200960 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid11869.log

public class StringCompare01 {
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for String equality
        //@ assert s1.equals("test") == true;

        // Test for reference inequality
        //@ assert s1 != "test";

        // Test for case-insensitive equality
        //@ assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison
        //@ assert s1.compareTo(s2) == 13;
        //@ assert s2.compareTo(s1) == -13;
        //@ assert s1.compareTo(s1) == 0;
        //@ assert s3.compareTo(s4) == -32;
        //@ assert s4.compareTo(s3) == 32;

        // Test regionMatches (case sensitive)
        //@ assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches (ignore case)
        //@ assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 344981504 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid11903.log

public class StringCompare01 {
    public static void main(String[] args) {
        String s1 = new String("test");
        String s2 = "goodbye";
        String s3 = "Automatic Test Generation";
        String s4 = "automatic test generation";

        // Test for String equality
        //@ assert s1.equals("test") == true;

        // Test for reference inequality
        //@ assert s1 != "test";

        // Test for case-insensitive equality
        //@ assert s3.equalsIgnoreCase(s4) == true;

        // Test for lexicographical comparison
        //@ assert s1.compareTo(s2) == 13;
        //@ assert s2.compareTo(s1) == -13;
        //@ assert s1.compareTo(s1) == 0;
        //@ assert s3.compareTo(s4) == -32;
        //@ assert s4.compareTo(s3) == 32;

        // Test regionMatches (case sensitive)
        //@ assert !s3.regionMatches(0, s4, 0, 5);

        // Test regionMatches (ignore case)
        //@ assert s3.regionMatches(true, 0, s4, 0, 5);
    }
}
