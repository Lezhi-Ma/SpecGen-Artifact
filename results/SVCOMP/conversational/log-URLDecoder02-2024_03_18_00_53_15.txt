public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = Verifier.nondetString() + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:12: error: cannot find symbol
        String s1 = Verifier.nondetString() + "some-url";
                    ^
  symbol:   variable Verifier
  location: class URLDecoder02
1 error

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

public class URLDecoder02 {

    /*@ public normal_behavior
      @    requires arg != null;
      @    ensures \result <==> true;
      @ also
      @    requires arg == null;
      @    ensures \result <==> false;
      @*/
    public static boolean f(String arg) {

        String s1 = "some-random-string" + "some-url";

        try {
            String s2 = java.net.URLDecoder.decode(s1, "UTF-8");
            if (!s2.startsWith("some")) {
                return false;
            }
        } catch (java.io.UnsupportedEncodingException e) {
            return false;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5:) in method f
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/URLDecoder02.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/URLDecoder02.java:17:
      @    ensures \result <==> true;
           ^
2 verification failures

