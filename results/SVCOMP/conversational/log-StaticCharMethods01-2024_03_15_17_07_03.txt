/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/jbmc-strings/StaticCharMethods01
 * The benchmark was taken from the repo: 24 January 2018
 */
public class StaticCharMethods01 {
  //@ ensures \result <==> (Character.isDefined(c) == false) &&
  //@                    (Character.isDigit(c) == true) &&
  //@                    (Character.isJavaIdentifierStart(c) == true) &&
  //@                    (Character.isJavaIdentifierPart(c) == false) &&
  //@                    (Character.isLetter(c) == true) &&
  //@                    (Character.isLetterOrDigit(c) == true) &&
  //@                    (Character.isLowerCase(c) == true) &&
  //@                    (Character.isUpperCase(c) == true) &&
  //@                    (Character.toUpperCase(c) != Character.toLowerCase(c));
  public static boolean f() {
    char c = 0;
    if(Character.isDefined(c) == false) return false;
    if(Character.isDigit(c) == true) return false;
    if(Character.isJavaIdentifierStart(c) == true) return false;
    if(Character.isJavaIdentifierPart(c) == false) return false;
    if(Character.isLetter(c) == true) return false;
    if(Character.isLetterOrDigit(c) == true) return false;
    if(Character.isLowerCase(c) == true) return false;
    if(Character.isUpperCase(c) == true) return false;
    if (Character.toUpperCase(c) != Character.toLowerCase(c)) return false;
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:10: error: cannot find symbol
  //@ ensures \result <==> (Character.isDefined(c) == false) &&
                                                ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:11: error: cannot find symbol
  //@                    (Character.isDigit(c) == true) &&
                                            ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:12: error: cannot find symbol
  //@                    (Character.isJavaIdentifierStart(c) == true) &&
                                                          ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:13: error: cannot find symbol
  //@                    (Character.isJavaIdentifierPart(c) == false) &&
                                                         ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:14: error: cannot find symbol
  //@                    (Character.isLetter(c) == true) &&
                                             ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:15: error: cannot find symbol
  //@                    (Character.isLetterOrDigit(c) == true) &&
                                                    ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:16: error: cannot find symbol
  //@                    (Character.isLowerCase(c) == true) &&
                                                ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:17: error: cannot find symbol
  //@                    (Character.isUpperCase(c) == true) &&
                                                ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:18: error: cannot find symbol
  //@                    (Character.toUpperCase(c) != Character.toLowerCase(c));
                                                ^
  symbol:   variable c
  location: class StaticCharMethods01
/home/max/Documents/JMLGPT/tmp/StaticCharMethods01.java:18: error: cannot find symbol
  //@                    (Character.toUpperCase(c) != Character.toLowerCase(c));
                                                                            ^
  symbol:   variable c
  location: class StaticCharMethods01
10 errors

/*
 * Origin of the benchmark:
 *     license: 4-clause BSD (see /java/jbmc-regression/LICENSE)
 *     repo: https://github.com/diffblue/cbmc.git
 *     branch: develop
 *     directory: regression/jbmc-strings/StaticCharMethods01
 * The benchmark was taken from the repo: 24 January 2018
 */
public class StaticCharMethods01 {
  //@ ensures \result <==> (Character.isDefined((char)0) == false) &&
  //@                    (Character.isDigit((char)0) == true) &&
  //@                    (Character.isJavaIdentifierStart((char)0) == true) &&
  //@                    (Character.isJavaIdentifierPart((char)0) == false) &&
  //@                    (Character.isLetter((char)0) == true) &&
  //@                    (Character.isLetterOrDigit((char)0) == true) &&
  //@                    (Character.isLowerCase((char)0) == true) &&
  //@                    (Character.isUpperCase((char)0) == true) &&
  //@                    (Character.toUpperCase((char)0) != Character.toLowerCase((char)0));
  public static boolean f() {
    char c = 0;
    if(Character.isDefined(c) == false) return false;
    if(Character.isDigit(c) == true) return false;
    if(Character.isJavaIdentifierStart(c) == true) return false;
    if(Character.isJavaIdentifierPart(c) == false) return false;
    if(Character.isLetter(c) == true) return false;
    if(Character.isLetterOrDigit(c) == true) return false;
    if(Character.isLowerCase(c) == true) return false;
    if(Character.isUpperCase(c) == true) return false;
    if (Character.toUpperCase(c) != Character.toLowerCase(c)) return false;
    return true;
  }
}
