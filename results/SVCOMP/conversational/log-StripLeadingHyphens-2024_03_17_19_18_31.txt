import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = str[0] == '-';
            if (temp_Boolean) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:14: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method stripLeadingHyphens
        temp_Boolean = (str[0] == '-' && str[1] == '-');
                           ^
1 verification failure

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = str[0] == '-';
            if (temp_Boolean) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-' && str.length > 0);
            if (temp_Boolean) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 0) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 0) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length == str.length || \result.length == str.length - 1 || \result.length == str.length - 2;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 1) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length <= str.length;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 0) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length <= str.length;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 1) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

import java.util.Arrays;

class StripLeadingHyphens {

    //@ requires str != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
    //@ ensures \result.length <= str.length;
    static char[] stripLeadingHyphens(char[] str) {
        boolean temp_Boolean = false;
        //@ assume str.length >= 2;
        if (str == null) {
            return null;
        }
        temp_Boolean = (str[0] == '-' && str.length > 1 && str[1] == '-');
        if (temp_Boolean) {
            return Arrays.copyOfRange(str, 2, str.length);
        } else {
            temp_Boolean = (str[0] == '-');
            if (temp_Boolean && str.length > 0) {
                return Arrays.copyOfRange(str, 1, str.length);
            }
        }
        return str;
    }
    
}
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7:) in method stripLeadingHyphens
                return Arrays.copyOfRange(str, 1, str.length);
                ^
/home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StripLeadingHyphens.java:21:
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != '-');
        ^
2 verification failures

