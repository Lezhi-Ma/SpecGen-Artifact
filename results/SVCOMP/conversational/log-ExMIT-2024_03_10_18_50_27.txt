import java.util.Random;

public class ExMIT {
    //@ requires \result == 0 || \result == 1;
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            assert false;
            return 1;
        }
        return 0;
    }

    //@ requires \result == 0 || \result == 1;
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: error: A \result expression may not be in a requires clause
    //@ requires \result == 0 || \result == 1;
                  ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: error: A \result expression may not be in a requires clause
    //@ requires \result == 0 || \result == 1;
                                  ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: error: A \result expression may not be in a requires clause
    //@ requires \result == 0 || \result == 1;
                  ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: error: A \result expression may not be in a requires clause
    //@ requires \result == 0 || \result == 1;
                                  ^
4 errors

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            assert false;
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:13:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:15:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
3 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

import java.util.Random;

public class ExMIT {
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
    public static int foo(int i) {
        if (2 * (i + 1) == 10) {
            return 1;
        }
        return 0;
    }

    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
    public static int boo(float i) {
        if ((i + 1) * 2 > 10) return 1;
        return 0;
    }

    public static void main(String[] args) {
        if (new Random().nextInt() == 1) foo(0);
    }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:12:) in method boo
        if ((i + 1) * 2 > 10) return 1;
                              ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:14:
    //@ ensures \result == 1 ==> (i + 1) * 2 <= 10;
        ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:4:) in method foo
            return 1;
            ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:7:
    //@ ensures \result == 1 ==> 2 * (i + 1) != 10;
        ^
4 verification failures

