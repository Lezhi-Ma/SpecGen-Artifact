class Main {

  //@ requires x >= 0.0f && x <= Integer.MAX_VALUE / 2;
  //@ ensures \result <==> (\result > 0);
  //@ ensures !\result <==> (\result <= 0);
  public static boolean f(float x) {
    if (x >= 0.0f && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ requires true;
  //@ ensures \result <==> (\result > 0);
  //@ ensures !\result <==> (\result <= 0);
  public boolean test(float x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:4: error: bad operand types for binary operator '>'
  //@ ensures \result <==> (\result > 0);
                                    ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:5: error: bad operand types for binary operator '<='
  //@ ensures !\result <==> (\result <= 0);
                                     ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:15: error: bad operand types for binary operator '>'
  //@ ensures \result <==> (\result > 0);
                                    ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:16: error: bad operand types for binary operator '<='
  //@ ensures !\result <==> (\result <= 0);
                                     ^
  first type:  boolean
  second type: int
4 errors

class Main {

  //@ requires x >= 0.0f && x <= Integer.MAX_VALUE / 2;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public static boolean f(float x) {
    if (x >= 0.0f && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ requires true;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public boolean test(float x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:4: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:5: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:15: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:16: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
4 errors

class Main {

  //@ requires x >= 0.0f && x <= Integer.MAX_VALUE / 2;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public static boolean f(float x) {
    if (x >= 0.0f && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ requires true;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public boolean test(float x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:4: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:5: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:15: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:16: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
4 errors

class Main {

  //@ requires x >= 0.0f && x <= Integer.MAX_VALUE / 2;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public static boolean f(float x) {
    if (x >= 0.0f && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ requires true;
  //@ ensures \result <==> res > 0;
  //@ ensures !\result <==> res <= 0;
  public boolean test(float x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:4: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:5: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:15: error: cannot find symbol
  //@ ensures \result <==> res > 0;
                           ^
  symbol:   variable res
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExeF2I.java:16: error: cannot find symbol
  //@ ensures !\result <==> res <= 0;
                            ^
  symbol:   variable res
  location: class Main
4 errors

class Main {

  //@ requires x >= 0.0f && x <= Integer.MAX_VALUE / 2;
  //@ ensures \result <==> x > 0;
  //@ ensures !\result <==> x <= 0;
  public static boolean f(float x) {
    if (x >= 0.0f && x <= Integer.MAX_VALUE / 2) {
      Main inst = new Main();
      return inst.test(x);
    }
    return true;
  }

  //@ requires true;
  //@ ensures \result <==> x > 0;
  //@ ensures !\result <==> x <= 0;
  public boolean test(float x) {

    int res = (int) ++x;
    if (res > 0) System.out.println("x >0");
    else {
      return false;
    }
    return true;
  }
}
