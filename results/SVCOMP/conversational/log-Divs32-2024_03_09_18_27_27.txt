public class Divs32 {

  static final int MAX_INT = 2147483647;
  static final int MIN_INT = -2147483648;

  //@ requires denominator != 0;
  //@ ensures \result == numerator / denominator;
  //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
  //@ ensures \result == MIN_INT ==> numerator < 0 && denominator == 0;
  //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
  //@ ensures \result == numerator / -denominator ==> numerator > 0 && denominator < 0;
  //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
  public static int divS32(int numerator, int denominator) {
    int quotient;
    int tempAbsQuotient;
    boolean quotientNeedsNegation = false;
    if (denominator == 0) {
      quotient = numerator >= 0 ? MAX_INT : MIN_INT;

      /* Divide by zero handler */
    } else {
      // quotientNeedsNegation = ((numerator < 0) != (denominator < 0));

      if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
      else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
      else quotientNeedsNegation = false;

      int calcDenominator;

      /* replacing this computation
      tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) /
              (denominator >= 0 ? denominator : -denominator);*/

      if (denominator >= 0) calcDenominator = denominator;
      else calcDenominator = -denominator;

      tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
      quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
    }

    return quotient;
  }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:8: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
                         ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == MIN_INT ==> numerator < 0 && denominator == 0;
                         ^
2 errors

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
    //@ ensures \result == MIN_INT ==> numerator < 0 && denominator == 0;
    //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
    //@ ensures \result == numerator / -denominator ==> numerator > 0 && denominator < 0;
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:7:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:34:
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
    //@ ensures \result == MIN_INT ==> numerator < 0 && denominator == 0;
    //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
    //@ ensures \result == numerator / -denominator ==> numerator > 0 && denominator < 0;
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;

            /* Divide by zero handler */
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:7:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:34:
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
    //@ ensures \result == MIN_INT ==> numerator < 0 && denominator == 0;
    //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
    //@ ensures \result == numerator / -denominator ==> numerator > 0 && denominator < 0;
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:7:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == MAX_INT ==> numerator >= 0 && denominator == 0;
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> (numerator >= 0 && denominator == 0) || (numerator < 0 && denominator != 0);
    //@ ensures \result == MIN_INT ==> (numerator < 0 && denominator == 0) || (numerator >= 0 && denominator != 0);
    //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
    //@ ensures \result == numerator / -denominator ==> numerator > 0 && denominator < 0;
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:9:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == -numerator / denominator ==> numerator < 0 && denominator > 0;
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> (numerator >= 0 && denominator == 0) || (numerator < 0 && denominator != 0);
    //@ ensures \result == MIN_INT ==> (numerator < 0 && denominator == 0) || (numerator >= 0 && denominator != 0);
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
    //@ ensures \result == numerator / -denominator ==> (numerator > 0 && denominator < 0) || (numerator < 0 && denominator > 0);
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:9:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> (numerator >= 0 && denominator == 0) || (numerator < 0 && denominator != 0);
    //@ ensures \result == MIN_INT ==> (numerator < 0 && denominator == 0) || (numerator >= 0 && denominator != 0);
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
    //@ ensures \result == numerator / -denominator ==> (numerator > 0 && denominator < 0) || (numerator < 0 && denominator > 0);
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:9:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> (numerator >= 0 && denominator == 0) || (numerator < 0 && denominator != 0);
    //@ ensures \result == MIN_INT ==> (numerator < 0 && denominator == 0) || (numerator >= 0 && denominator != 0);
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
    //@ ensures \result == numerator / -denominator ==> (numerator > 0 && denominator < 0) || (numerator < 0 && denominator > 0);
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:9:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures \result == MAX_INT ==> (numerator >= 0 && denominator == 0) || (numerator < 0 && denominator != 0);
    //@ ensures \result == MIN_INT ==> (numerator < 0 && denominator == 0) || (numerator >= 0 && denominator != 0);
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
    //@ ensures \result == numerator / -denominator ==> (numerator > 0 && denominator < 0) || (numerator < 0 && denominator > 0);
    //@ ensures \result == -numerator / -denominator ==> numerator < 0 && denominator < 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:9:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:32:
    //@ ensures \result == -numerator / denominator ==> (numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0);
        ^
2 verification failures

public class Divs32 {
    private static /*@ spec_public */ final int MAX_INT = 2147483647;
    private static /*@ spec_public */ final int MIN_INT = -2147483648;

    //@ requires denominator != 0;
    //@ ensures \result == numerator / denominator;
    //@ ensures (numerator >= 0 && denominator > 0) ==> \result >= 0;
    //@ ensures (numerator >= 0 && denominator < 0) ==> \result <= 0;
    //@ ensures (numerator < 0 && denominator > 0) ==> \result <= 0;
    //@ ensures (numerator < 0 && denominator < 0) ==> \result >= 0;
    public static int divS32(int numerator, int denominator) {
        int quotient;
        int tempAbsQuotient;
        boolean quotientNeedsNegation = false;
        if (denominator == 0) {
            quotient = numerator >= 0 ? MAX_INT : MIN_INT;
        } else {
            if ((numerator < 0) && (denominator > 0)) quotientNeedsNegation = true;
            else if ((numerator > 0) && (denominator < 0)) quotientNeedsNegation = true;
            else quotientNeedsNegation = false;

            int calcDenominator;

            if (denominator >= 0) calcDenominator = denominator;
            else calcDenominator = -denominator;

            tempAbsQuotient = (int) (numerator >= 0 ? numerator : -numerator) / calcDenominator;
            quotient = quotientNeedsNegation ? -(int) tempAbsQuotient : (int) tempAbsQuotient;
        }

        return quotient;
    }
}
/home/max/Documents/JMLGPT/tmp/Divs32.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Divs32.java:6:) in method divS32
        return quotient;
        ^
/home/max/Documents/JMLGPT/tmp/Divs32.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Divs32.java:31:
    //@ ensures \result == numerator / denominator;
        ^
2 verification failures

