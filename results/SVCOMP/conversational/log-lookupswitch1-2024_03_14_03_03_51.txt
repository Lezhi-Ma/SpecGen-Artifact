class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (j == i + 1);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == (j == -1);
  public static boolean f(int i) {
    int j;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (j == i + 1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: error: cannot find symbol
  //@ ensures \result == (j == -1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
2 errors

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (j == i + 1);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == (j == -1);
  public static boolean f(int i) {
    int j = 0;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (j == i + 1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: error: cannot find symbol
  //@ ensures \result == (j == -1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
2 errors

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (j == i + 1);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == (j == -1);
  public static boolean f(int i) {
    int j = 0;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (j == i + 1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: error: cannot find symbol
  //@ ensures \result == (j == -1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
2 errors

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (j == i + 1);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == (j == -1);
  public static boolean f(int i) {
    int j = 0;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (j == i + 1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: error: cannot find symbol
  //@ ensures \result == (j == -1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
2 errors

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == (j == -1);
  public static boolean f(int i) {
    int j = 0;

    switch (i) {
      case 1:
        j = 2;
        break;
      case 10:
        j = 11;
        break;
      case 100:
        j = 101;
        break;
      case 1000:
        j = 1001;
        break;
      case 10000:
        j = 10001;
        break;
      case 100000:
        j = 100001;
        break;
      default:
        j = -1;
    }

    if (i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000) return j == i + 1;
    else return j == -1;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                    ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                           ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                    ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                               ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                                                            ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: cannot find symbol
  //@ ensures \result == (i == 1 && j == 2) || (i == 10 && j == 11) || (i == 100 && j == 101) || (i == 1000 && j == 1001) || (i == 10000 && j == 10001) || (i == 100000 && j == 100001);
                                                                                                                                                                           ^
  symbol:   variable j
  location: class lookupswitch1
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:6: error: cannot find symbol
  //@ ensures \result == (j == -1);
                          ^
  symbol:   variable j
  location: class lookupswitch1
7 errors

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == -1;
  public static int f(int i) {
    int result = 0;

    switch (i) {
      case 1:
        result = 2;
        break;
      case 10:
        result = 11;
        break;
      case 100:
        result = 101;
        break;
      case 1000:
        result = 1001;
        break;
      case 10000:
        result = 10001;
        break;
      case 100000:
        result = 100001;
        break;
      default:
        result = -1;
    }

    return result;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
                      ^
1 error

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == -1;
  public static int f(int i) {
    int result = 0;

    switch (i) {
      case 1:
        result = 2;
        break;
      case 10:
        result = 11;
        break;
      case 100:
        result = 101;
        break;
      case 1000:
        result = 1001;
        break;
      case 10000:
        result = 10001;
        break;
      case 100000:
        result = 100001;
        break;
      default:
        result = -1;
    }

    return result;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
                      ^
1 error

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == -1;
  public static int f(int i) {
    int result = 0;

    switch (i) {
      case 1:
        result = 2;
        break;
      case 10:
        result = 11;
        break;
      case 100:
        result = 101;
        break;
      case 1000:
        result = 1001;
        break;
      case 10000:
        result = 10001;
        break;
      case 100000:
        result = 100001;
        break;
      default:
        result = -1;
    }

    return result;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
                      ^
1 error

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == -1;
  public static int f(int i) {
    int result = 0;

    switch (i) {
      case 1:
        result = 2;
        break;
      case 10:
        result = 11;
        break;
      case 100:
        result = 101;
        break;
      case 1000:
        result = 1001;
        break;
      case 10000:
        result = 10001;
        break;
      case 100000:
        result = 100001;
        break;
      default:
        result = -1;
    }

    return result;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
                      ^
1 error

class lookupswitch1 {
  //@ requires i == 1 || i == 10 || i == 100 || i == 1000 || i == 10000 || i == 100000;
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
  //@ also
  //@ requires i != 1 && i != 10 && i != 100 && i != 1000 && i != 10000 && i != 100000;
  //@ ensures \result == -1;
  public static int f(int i) {
    int result = 0;

    switch (i) {
      case 1:
        result = 2;
        break;
      case 10:
        result = 11;
        break;
      case 100:
        result = 101;
        break;
      case 1000:
        result = 1001;
        break;
      case 10000:
        result = 10001;
        break;
      case 100000:
        result = 100001;
        break;
      default:
        result = -1;
    }

    return result;
  }
}
/home/max/Documents/JMLGPT/tmp/lookupswitch1.java:3: error: incomparable types: int and boolean
  //@ ensures \result == (i == 1 && \result == 2) || (i == 10 && \result == 11) || (i == 100 && \result == 101) || (i == 1000 && \result == 1001) || (i == 10000 && \result == 10001) || (i == 100000 && \result == 100001);
                      ^
1 error

