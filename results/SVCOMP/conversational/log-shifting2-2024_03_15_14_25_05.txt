public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        //@ assert (1 << i) >= 1;
        //@ assert (1 << i) <= Integer.MAX_VALUE;
        //@ assert (1 << i) != 1 ==> \result == 1;
        //@ assert (1 << i) == 1 ==> \result == 0;
        return ((1 << i) != 1) ? 1 : 0;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:13: error: A \result expression may not be in a assert clause
        //@ assert (1 << i) != 1 ==> \result == 1;
                                      ^
/home/max/Documents/JMLGPT/tmp/shifting2.java:14: error: A \result expression may not be in a assert clause
        //@ assert (1 << i) == 1 ==> \result == 0;
                                      ^
2 errors

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 100;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 100) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/shifting2.java:11: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method f
        int result = ((1 << i) != 1) ? 1 : 0;
                         ^
1 verification failure

public class shifting2 {

    //@ requires i >= 1 && i <= 31;
    //@ ensures \result == 1 || \result == 0;
    public static int f(int i) {

        if (i < 1 || i > 31) {
            return -1;
        }

        int result = ((1 << i) != 1) ? 1 : 0;
        return result;
    }
}

