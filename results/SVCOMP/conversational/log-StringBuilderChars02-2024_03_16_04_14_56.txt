public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> new StringBuilder(arg).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new StringBuilder(arg).toString().equals("DiffBlue Limitted");
                            ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> new StringBuilder(arg).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new StringBuilder(arg).toString().equals("DiffBlue Limitted");
                            ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

public class StringBuilderChars02 {
    //@ requires arg != null;
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
    public static boolean f(String arg) {
        StringBuilder buffer = new StringBuilder(arg);
        return buffer.toString().equals("DiffBlue Limitted");
    }
}
/home/max/Documents/JMLGPT/tmp/StringBuilderChars02.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (new StringBuilder(arg)).toString().equals("DiffBlue Limitted");
                             ^
1 error

