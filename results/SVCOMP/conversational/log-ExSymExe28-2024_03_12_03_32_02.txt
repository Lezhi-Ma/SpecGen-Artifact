class Main {

  //@ ensures \result ==> (\exists int x, int z, int r; x == 3 && z == 5 && r == 9 && z != x && (x == r));
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x == 3 && z == 5 && r == 9;
  //@ ensures \result ==> (z != x && (x == r));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: <identifier> expected
  //@ ensures \result ==> (\exists int x, int z, int r; x == 3 && z == 5 && r == 9 && z != x && (x == r));
                                         ^
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:3: error: Expected a semicolon to separate the parts of a JML quantified expression
  //@ ensures \result ==> (\exists int x, int z, int r; x == 3 && z == 5 && r == 9 && z != x && (x == r));
                                          ^
2 errors

class Main {

  //@ ensures \result ==> (\exists int x; \exists int z; \exists int r; x == 3 && z == 5 && r == 9 && z != x && (x == r));
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x == 3 && z == 5 && r == 9;
  //@ ensures \result ==> (z != x && (x == r));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe28.java:9: error: missing return statement
  }
  ^
1 error

class Main {

  //@ ensures \result ==> (\exists int x; \exists int z; \exists int r; x == 3 && z == 5 && r == 9 && z != x && (x == r));
  public static boolean f() {
    int x = 3;
    int y = 5;
    Main inst = new Main();
    return inst.test(x, y, 9);
  }

  /*
   * test IF_ICMPNE  bytecode  (Note: javac compiles "==" to IF_ICMPNE)
   */
  //@ requires x == 3 && z == 5 && r == 9;
  //@ ensures \result ==> (z != x && (x == r));
  public boolean test(int x, int z, int r) {
    System.out.println("Testing ExSymExe28");
    if (z == x) {
      return false;
    } else System.out.println("branch FOO2");
    if (x == r) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }
}
