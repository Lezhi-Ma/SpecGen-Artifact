public class MinePump {

  boolean pumpRunning = false;

  boolean systemActive = true;

  Environment env;

  //@ requires env != null;
  //@ ensures this.env == env;
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  //@ ensures pumpRunning ==> env.lowerWaterLevel();
  //@ ensures systemActive ==> processEnvironment();
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  private void processEnvironment__wrappee__base() {}

  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
  public void processEnvironment() {
    if (pumpRunning && isMethaneAlarm()) {
      deactivatePump();
    } else {
      processEnvironment__wrappee__base();
    }
  }

  //@ ensures pumpRunning;
  void activatePump() {
    pumpRunning = true;
  }

  //@ ensures \result == pumpRunning;
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  //@ ensures !pumpRunning;
  void deactivatePump() {
    pumpRunning = false;
  }

  //@ ensures \result == env.isMethaneLevelCritical();
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  //@ ensures \result.equals("Pump(System:" + (systemActive ? "On" : "Off") + ",Pump:" + (pumpRunning ? "On" : "Off") + ") " + env.toString());
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  //@ ensures !pumpRunning && !systemActive;
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  //@ ensures !pumpRunning && systemActive;
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  //@ ensures \result == systemActive;
  public boolean isSystemActive() {
    return systemActive;
  }

  //@ ensures \result == env;
  public Environment getEnv() {
    return env;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:7: error: cannot find symbol
  Environment env;
  ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:11: error: cannot find symbol
  public MinePump(Environment env) {
                  ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:87: error: cannot find symbol
  public Environment getEnv() {
         ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:10: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures this.env == env;
                  ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:16: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning ==> env.lowerWaterLevel();
              ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:16: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning ==> env.lowerWaterLevel();
                              ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:17: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures systemActive ==> processEnvironment();
              ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:17: error: incompatible types: void cannot be converted to boolean
  //@ ensures systemActive ==> processEnvironment();
                                                 ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:25: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
              ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:25: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
                             ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:25: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
                                                   ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:26: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:26: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
                               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:26: error: incompatible types: void cannot be converted to boolean
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
                                                                ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:40: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == pumpRunning;
                         ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:55: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result.equals("Pump(System:" + (systemActive ? "On" : "Off") + ",Pump:" + (pumpRunning ? "On" : "Off") + ") " + env.toString());
                                               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:55: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result.equals("Pump(System:" + (systemActive ? "On" : "Off") + ",Pump:" + (pumpRunning ? "On" : "Off") + ") " + env.toString());
                                                                                          ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:55: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result.equals("Pump(System:" + (systemActive ? "On" : "Off") + ",Pump:" + (pumpRunning ? "On" : "Off") + ") " + env.toString());
                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:66: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning && !systemActive;
               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:66: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning && !systemActive;
                               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:75: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning && systemActive;
               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:75: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning && systemActive;
                              ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:81: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == systemActive;
                         ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:86: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result == env;
                         ^
24 errors

public class MinePump {

  //@ spec_public
  boolean pumpRunning = false;

  //@ spec_public
  boolean systemActive = true;

  //@ spec_public
  Environment env;

  //@ requires env != null;
  //@ ensures this.env == env;
  public MinePump(Environment env) {
    super();
    this.env = env;
  }

  //@ ensures pumpRunning ==> env.lowerWaterLevel();
  //@ ensures systemActive ==> processEnvironment();
  public void timeShift() {
    if (pumpRunning) env.lowerWaterLevel();
    if (systemActive) processEnvironment();
  }

  private void processEnvironment__wrappee__base() {}

  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
  public void processEnvironment() {
    if (pumpRunning && isMethaneAlarm()) {
      deactivatePump();
    } else {
      processEnvironment__wrappee__base();
    }
  }

  //@ ensures pumpRunning;
  void activatePump() {
    pumpRunning = true;
  }

  //@ ensures \result == pumpRunning;
  public boolean isPumpRunning() {
    return pumpRunning;
  }

  //@ ensures !pumpRunning;
  void deactivatePump() {
    pumpRunning = false;
  }

  //@ ensures \result == env.isMethaneLevelCritical();
  boolean isMethaneAlarm() {
    return env.isMethaneLevelCritical();
  }

  //@ ensures \result.equals("Pump(System:" + (systemActive ? "On" : "Off") + ",Pump:" + (pumpRunning ? "On" : "Off") + ") " + env.toString());
  @Override
  public String toString() {
    return "Pump(System:"
        + (systemActive ? "On" : "Off")
        + ",Pump:"
        + (pumpRunning ? "On" : "Off")
        + ") "
        + env.toString();
  }

  //@ ensures !pumpRunning && !systemActive;
  public void stopSystem() {
    if (pumpRunning) {
      deactivatePump();
    }
    assert !pumpRunning;
    systemActive = false;
  }

  //@ ensures !pumpRunning && systemActive;
  public void startSystem() {
    assert !pumpRunning;
    systemActive = true;
  }

  //@ ensures \result == systemActive;
  public boolean isSystemActive() {
    return systemActive;
  }

  //@ ensures \result == env;
  public Environment getEnv() {
    return env;
  }
}
/home/max/Documents/JMLGPT/tmp/MinePump.java:10: error: cannot find symbol
  Environment env;
  ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:14: error: cannot find symbol
  public MinePump(Environment env) {
                  ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:90: error: cannot find symbol
  public Environment getEnv() {
         ^
  symbol:   class Environment
  location: class MinePump
/home/max/Documents/JMLGPT/tmp/MinePump.java:20: error: incompatible types: void cannot be converted to boolean
  //@ ensures systemActive ==> processEnvironment();
                                                 ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:28: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures pumpRunning && isMethaneAlarm() ==> !pumpRunning;
                             ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:29: error: An identifier with private visibility may not be used in a ensures clause with public visibility
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
                               ^
/home/max/Documents/JMLGPT/tmp/MinePump.java:29: error: incompatible types: void cannot be converted to boolean
  //@ ensures !pumpRunning ==> processEnvironment__wrappee__base();
                                                                ^
7 errors

