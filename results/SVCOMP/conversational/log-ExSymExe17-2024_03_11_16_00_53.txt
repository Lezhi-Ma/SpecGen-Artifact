class Main {
  static int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(x, field);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:19: error: cannot find symbol
  //@ ensures \result <==> test(x, field);
                                ^
  symbol:   variable x
  location: class Main
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:19: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(x, field);
                                   ^
2 errors

class Main {
  static int field;
  
  //@ spec_public
  int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  int field;
      ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: non-static method test(int,int) cannot be referenced from a static context
  //@ ensures \result <==> test(3, field);
                           ^
3 errors

class Main {
  static int field;
  
  //@ spec_public
  int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  int field;
      ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
2 errors

class Main {
  static int field;
  
  //@ spec_public
  static int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  static int field;
             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: non-static method test(int,int) cannot be referenced from a static context
  //@ ensures \result <==> test(3, field);
                           ^
3 errors

class Main {
  static int field;
  
  //@ spec_public
  static int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public static boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  static int field;
             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: non-static method test(int,int) cannot be referenced from a static context
  //@ ensures \result <==> test(3, field);
                           ^
3 errors

class Main {
  static int field;
  
  //@ spec_public
  static int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  static int field;
             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
2 errors

class Main {
  static int field;
  
  //@ spec_public
  static int field;

  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:5: error: variable field is already defined in class Main
  static int field;
             ^
/home/max/Documents/JMLGPT/tmp/ExSymExe17.java:22: error: An identifier with package visibility may not be used in a ensures clause with public visibility
  //@ ensures \result <==> test(3, field);
                                   ^
2 errors

class Main {
  //@ spec_public
  static int field;
  
  //@ ensures \result <==> z == x - 0 - 4;
  public boolean test(int x, int z) {
    System.out.println("Testing ExSymExe17");
    int y = 0;
    z = x - y - 4;
    if (z == 0) {
      System.out.println("branch FOO1");
      return false;
    } else System.out.println("branch FOO2");
    if (y == 0) System.out.println("branch BOO1");
    else
      System.out.println("branch BOO2");
    return true;
  }

  //@ ensures \result <==> test(3, field);
  public boolean f() {
    int x = 3;
    Main inst = new Main();
    field = 9;
    return inst.test(x, field);
  }
}
