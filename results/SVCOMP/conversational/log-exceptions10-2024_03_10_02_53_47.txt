class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists B exc; exc != null; exc instanceof B);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/exceptions10.java:18:) in method main
    public static void main(String[] args) {
                       ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/exceptions10.java:19:
    //@ ensures (\exists B exc; exc != null; exc instanceof B);
        ^
3 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists B exc; exc != null; exc instanceof B);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/exceptions10.java:18:) in method main
    public static void main(String[] args) {
                       ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/exceptions10.java:19:
    //@ ensures (\exists B exc; exc != null; exc instanceof B);
        ^
3 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

class A extends RuntimeException {}

class B extends A {}

class C extends B {}

public class exceptions10 {
    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    static void foo() {
        try {
            A b = new A();
            throw b;
        } catch (A exc) {
            assert false;
        }
    }

    //@ ensures (\exists A exc; exc != null; exc instanceof A);
    public static void main(String[] args) {
        try {
            A a = new A();
            foo();
        } catch (B exc) {
            assert false;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/exceptions10.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
            assert false;
            ^
/home/max/Documents/JMLGPT/tmp/exceptions10.java:24: verify: The prover cannot establish an assertion (Assert) in method main
            assert false;
            ^
2 verification failures

