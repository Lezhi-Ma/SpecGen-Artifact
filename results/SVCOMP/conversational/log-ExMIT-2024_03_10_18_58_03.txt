import java.util.Random;

public class ExMIT {
  //@ requires true;
  //@ ensures true;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires true;
  //@ ensures \result == 0;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      assert false;
      return 1;
    }
    return 0;
  }

  //@ requires true;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:14: verify: The prover cannot establish an assertion (Assert) in method foo
      assert false;
      ^
1 verification failure

import java.util.Random;

public class ExMIT {
  //@ requires true;
  //@ ensures true;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires true;
  //@ ensures \result == 0;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      // assert false;
      return 1;
    }
    return 0;
  }

  //@ requires true;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}
/home/max/Documents/JMLGPT/tmp/ExMIT.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExMIT.java:11:) in method foo
      return 1;
      ^
/home/max/Documents/JMLGPT/tmp/ExMIT.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExMIT.java:15:
  //@ ensures \result == 0;
      ^
2 verification failures

import java.util.Random;

public class ExMIT {
  //@ requires true;
  //@ ensures true;
  public static void main(String[] args) {
    if (new Random().nextInt() == 1) foo(0);
  }

  //@ requires true;
  //@ ensures \result == 0 || \result == 1;
  public static int foo(int i) {
    if (2 * (i + 1) == 10) {
      // assert false;
      return 1;
    }
    return 0;
  }

  //@ requires true;
  //@ ensures \result == 0 || \result == 1;
  public static int boo(float i) {
    if ((i + 1) * 2 > 10) return 1;
    return 0;
  }
}

