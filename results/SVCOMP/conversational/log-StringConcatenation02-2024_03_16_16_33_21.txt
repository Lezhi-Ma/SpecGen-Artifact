public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(\old(arg1) + " ") && arg2.equals(\old(arg2)) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(\old(arg1) + " ") || !arg2.equals(\old(arg2));
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 39845888 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13756.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13795.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13808.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13821.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13835.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13848.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13861.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13874.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13887.log

public class StringConcatenation02 {
    //@ requires arg1 != null && arg2 != null;
    //@ ensures \result ==> arg1.equals(arg1 + " ") && arg2.equals(arg2) && args.length == 2;
    //@ ensures !\result ==> args.length != 2 || !arg1.equals(arg1 + " ") || !arg2.equals(arg2);
    public static boolean f(String arg1, String arg2) {
        String[] args = new String[2];
        args[0] = arg1;
        args[1] = arg2;

        String s1 = args[0];
        String s2 = args[1];
        if(!s1.equals(args[0] + " ")) return false;
        if(!s2.equals(args[1])) return false;
        return true;
    }
}
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 33554432 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/max/Documents/JMLGPT/hs_err_pid13900.log

