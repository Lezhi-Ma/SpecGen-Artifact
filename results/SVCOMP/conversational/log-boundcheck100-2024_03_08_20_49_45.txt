public class boundcheck100 {

  private static void recursion(int i) {
    //@ maintaining i >= 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:4: error: Loop specifications must immediately precede a loop statement
    //@ maintaining i >= 0;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ maintaining i >= 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:4: error: Loop specifications must immediately precede a loop statement
    //@ maintaining i >= 0;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

public class boundcheck100 {

  private static void recursion(int i) {
    //@ requires i >= 0;
    //@ ensures i == 0 || i < 0;
    //@ decreases i;
    if (i == 0) {
      return;
    }
    if (i > 0) {
      recursion(i - 1);
    }
    if (i < 0) {
      assert false;
    }
  }
}
/home/max/Documents/JMLGPT/tmp/boundcheck100.java:6: error: Loop specifications must immediately precede a loop statement
    //@ decreases i;
        ^
1 error

