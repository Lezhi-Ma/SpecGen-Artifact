static class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null) && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this));
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:1: error: modifier static not allowed here
static class Node {
       ^
1 error

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null) && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this));
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22:
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null) && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this));
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22:
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null) && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this));
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10:) in method swapNode
        return t;
        ^
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:22:
  //@ ensures !(\old(next != null) && elem > next.elem) ==> (\result == \old(this));
      ^
3 verification failures

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

class Node {
  int elem;
  Node next;
  static Node static_next;

  //@ ensures \result != null;
  //@ ensures \result.next != null;
  //@ ensures \result.next.next != null;
  //@ ensures (\old(next != null && elem > next.elem) ==> (\result == next && next == \old(next.next) && \result.next == \old(this))) || (\old(next == null) ==> (\result == \old(this)));
  Node swapNode() {

    static_next = new Node();
    static_next.next = new Node();
    static_next.next.next = new Node();
    if (next != null)
      if (elem > next.elem) {
        assert next != null;
        Node t = next;
        next = t.next;
        t.next = this;
        return t;
      }
    return this;
  }
}
/home/max/Documents/JMLGPT/tmp/ExGenSymExe.java:3: verify: The prover cannot establish an assertion (NullField) in method Node
  Node next;
       ^
1 verification failure

