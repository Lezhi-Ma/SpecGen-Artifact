public class StringConcatenation04 {
    //@ requires (\forall int i; 0 <= i && i < s1.length(); (int)Character.MIN_VALUE <= (int)s1.charAt(i) && (int)s1.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result <==> tmp.equals("Happy  at");
    public static boolean f(String s1){
        String tmp = s1;
        return tmp.equals("Happy  at");
    }
}
/home/max/Documents/JMLGPT/tmp/StringConcatenation04.java:3: error: cannot find symbol
    //@ ensures \result <==> tmp.equals("Happy  at");
                             ^
  symbol:   variable tmp
  location: class StringConcatenation04
1 error

public class StringConcatenation04 {
    private static String tmp;
    
    //@ requires (\forall int i; 0 <= i && i < s1.length(); (int)Character.MIN_VALUE <= (int)s1.charAt(i) && (int)s1.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result <==> tmp.equals("Happy  at");
    public static boolean f(String s1){
        tmp = s1;
        return tmp.equals("Happy  at");
    }
}
/home/max/Documents/JMLGPT/tmp/StringConcatenation04.java:5: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result <==> tmp.equals("Happy  at");
                             ^
1 error

public class StringConcatenation04 {
    private /*@ spec_public @*/ static String tmp;
    
    //@ requires (\forall int i; 0 <= i && i < s1.length(); (int)Character.MIN_VALUE <= (int)s1.charAt(i) && (int)s1.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result <==> tmp.equals("Happy  at");
    public static boolean f(String s1){
        tmp = s1;
        return tmp.equals("Happy  at");
    }
}

