class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> (new Main()).f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return (new Main()).f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    //@ ensures \result <==> i != null && i.equals(Integer.valueOf(4));
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> (new Main()).f(0, arg);
                              ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:12: error: cannot find symbol
    //@ ensures \result <==> i != null && i.equals(Integer.valueOf(4));
                             ^
  symbol:   variable i
  location: class Main
/home/max/Documents/JMLGPT/tmp/TestLazy.java:12: error: cannot find symbol
    //@ ensures \result <==> i != null && i.equals(Integer.valueOf(4));
                                          ^
  symbol:   variable i
  location: class Main
3 errors

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: non-static method f(int,int) cannot be referenced from a static context
    //@ ensures \result <==> f(0, arg);
                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:6: error: non-static method f(int,int) cannot be referenced from a static context
            return f(0, arg);
                   ^
2 errors

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> new Main().f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return new Main().f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().f(0, arg);
                             ^
1 error

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: non-static method f(int,int) cannot be referenced from a static context
    //@ ensures \result <==> f(0, arg);
                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:6: error: non-static method f(int,int) cannot be referenced from a static context
            return f(0, arg);
                   ^
2 errors

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> new Main().f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return new Main().f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().f(0, arg);
                             ^
1 error

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: non-static method f(int,int) cannot be referenced from a static context
    //@ ensures \result <==> f(0, arg);
                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:6: error: non-static method f(int,int) cannot be referenced from a static context
            return f(0, arg);
                   ^
2 errors

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> new Main().f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return new Main().f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().f(0, arg);
                             ^
1 error

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: non-static method f(int,int) cannot be referenced from a static context
    //@ ensures \result <==> f(0, arg);
                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:6: error: non-static method f(int,int) cannot be referenced from a static context
            return f(0, arg);
                   ^
2 errors

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> new Main().f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return new Main().f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: Object allocation is not permitted in specification expressions
    //@ ensures \result <==> new Main().f(0, arg);
                             ^
1 error

class Main {
    //@ requires arg == 0;
    //@ ensures \result <==> f(0, arg);
    public static boolean g (int arg) {
        if (arg == 0)
            return f(0, arg);
        return true;
    }

    //@ requires a < 5;
    //@ ensures \result <==> true;
    public boolean f(int a, int b) {
        Integer i = null;
        if (a < 5) {
            i = Integer.valueOf(4);
            i.floatValue();
        } else
            return false;
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/TestLazy.java:3: error: non-static method f(int,int) cannot be referenced from a static context
    //@ ensures \result <==> f(0, arg);
                             ^
/home/max/Documents/JMLGPT/tmp/TestLazy.java:6: error: non-static method f(int,int) cannot be referenced from a static context
            return f(0, arg);
                   ^
2 errors

