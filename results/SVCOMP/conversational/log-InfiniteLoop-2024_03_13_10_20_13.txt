import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b;
    //@ maintaining i >= 0;
    //@ decreases 0; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:11: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method infiniteLoop
    //@ maintaining b;
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases 0; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases 0; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases Integer.MAX_VALUE; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases Integer.MAX_VALUE; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases 0; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases 0; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases 1; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases 1; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases -1; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method infiniteLoop
    //@ decreases -1; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases Integer.MAX_VALUE; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases Integer.MAX_VALUE; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases 0; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases 0; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases 1; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreases) in method infiniteLoop
    //@ decreases 1; // Loop does not terminate
        ^
1 verification failure

import java.util.Random;

public class InfiniteLoop {

  //@ requires arg != null;
  //@ ensures true; // This method does not terminate normally
  public static void infiniteLoop(String[] arg) {
    int i = 0;
    boolean b = new Random().nextBoolean();

    //@ maintaining b == true || i == 0;
    //@ maintaining i >= 0;
    //@ decreases -1; // Loop does not terminate
    while (b) {
      i++;
    }
  }

}
/home/max/Documents/JMLGPT/tmp/InfiniteLoop.java:13: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method infiniteLoop
    //@ decreases -1; // Loop does not terminate
        ^
1 verification failure

