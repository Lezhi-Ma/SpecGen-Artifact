public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

public class StringStartEnd02 {

  //@ requires args.length >= 0 && args.length <= 4;
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
  public static boolean f(String[] args) {
    if (args.length < 4)
      return false;
    int i = 0;

    //@ maintaining 0 <= j && j <= 4;
    //@ maintaining 0 <= i && i <= j;
    //@ decreases 4 - j;
    for (int j = 0; j < 4; j++) {
      if (args[j].startsWith("te"))
        ++i;
    }

    return i == 1;
  }
  
}
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4:) in method f
      return false;
      ^
/home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/StringStartEnd02.java:7:
  //@ ensures \result <==> (\exists int j; 0 <= j && j < 4; args[j].startsWith("te"));
      ^
2 verification failures

