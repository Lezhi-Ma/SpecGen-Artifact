import java.util.Random;

class return2 {
    //@ ensures \result ==> v1 == v2;
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return v1 == v2;
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> v1 == v2;
                            ^
  symbol:   variable v1
  location: class return2
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> v1 == v2;
                                  ^
  symbol:   variable v2
  location: class return2
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> new Random().nextInt() == new Random().nextInt();
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return v1 == v2;
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new Random().nextInt() == new Random().nextInt();
                            ^
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> new Random().nextInt() == new Random().nextInt();
                                                      ^
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> v1 == v2;
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return v1 == v2;
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> v1 == v2;
                            ^
  symbol:   variable v1
  location: class return2
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> v1 == v2;
                                  ^
  symbol:   variable v2
  location: class return2
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (new Random().nextInt() == new Random().nextInt()));
    public static boolean f() {
        return new Random().nextInt() == new Random().nextInt();
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (new Random().nextInt() == new Random().nextInt()));
                                         ^
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (new Random().nextInt() == new Random().nextInt()));
                                                                   ^
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
    public static boolean f() {
        return Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt());
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                  ^
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                                                      ^
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2));
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return Math.abs(v1) == Math.abs(v2);
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: ')' expected
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2));
                                                                      ^
1 error

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return Math.abs(v1) == Math.abs(v2);
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
                                                  ^
  symbol:   variable v1
  location: class return2
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
                                                                  ^
  symbol:   variable v2
  location: class return2
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
    public static boolean f() {
        return Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt());
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                  ^
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                                                      ^
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
    public static boolean f() {
        int v1 = new Random().nextInt();
        int v2 = new Random().nextInt();
        return Math.abs(v1) == Math.abs(v2);
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
                                                  ^
  symbol:   variable v1
  location: class return2
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: cannot find symbol
    //@ ensures \result ==> (\result == (Math.abs(v1) == Math.abs(v2)));
                                                                  ^
  symbol:   variable v2
  location: class return2
2 errors

import java.util.Random;

class return2 {
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
    public static boolean f() {
        return Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt());
    }
}
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                  ^
/home/max/Documents/JMLGPT/tmp/return2.java:4: error: Object allocation is not permitted in specification expressions
    //@ ensures \result ==> (\result == (Math.abs(new Random().nextInt()) == Math.abs(new Random().nextInt())));
                                                                                      ^
2 errors

