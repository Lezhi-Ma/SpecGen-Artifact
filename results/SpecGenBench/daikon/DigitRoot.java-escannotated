class DigitRoot {
    /*@ ensures \result <= \old(num); */
    public static int digitRoot(int num) {
        while (num >= 10) {
            __Loop_Invariant_Dummy1(num);
            int sum = 0;
            while (num > 0) {
                __Loop_Invariant_Dummy2(num, sum);
                sum += num % 10;
                num /= 10;
            }
            num = sum;
        }
        return num;
    }

    public static void __Loop_Invariant_Dummy1(int num) {}

    /*@ requires num >= 1; */
    /*@ requires sum >= 0; */
    public static void __Loop_Invariant_Dummy2(int num, int sum) {}

    /*@ requires args != null; */
    /*@ requires \typeof(args) == \type(java.lang.String[]); */
    /*@ requires (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
    /*@ ensures (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
    public static void main(String[] args) {
        digitRoot(-2);
        digitRoot(-1);
        digitRoot(0);
        digitRoot(1);
        digitRoot(2);
        digitRoot(12);
        digitRoot(4);
        digitRoot(5);
        digitRoot(114);
        digitRoot(514);
        digitRoot(1919);
        digitRoot(810);
    }
}
