public class IsDescending {
    /*@ requires arr != null; */
    /*@ ensures (\result == false)  ==>  (\old(arr.length) >= 2); */
    public static boolean isDescending (int[] arr) {
        int n = arr.length;
        if (n < 2) {
            return true;
        }
        for (int i = 0; i < n-1 ; i++) {
            __Loop_Invariant_Dummy1(arr, n, i);
            if(arr[i] <= arr[i+1])
                return false;
        }
        return true;
    }

    /*@ requires n == arr.length; */
    /*@ requires arr != null; */
    /*@ requires n >= 2; */
    /*@ requires i >= 0; */
    /*@ requires i < arr.length-1; */
    /*@ ensures \old(i) < arr.length-1; */
    public static void __Loop_Invariant_Dummy1(int[] arr, int n, int i) {}

    /*@ requires args != null; */
    /*@ requires \typeof(args) == \type(java.lang.String[]); */
    /*@ requires (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
    /*@ ensures (args.length == 0) && ((\forall int i; (0 <= i && i <= args.length-1) ==> (args[i] != null))); */
    public static void main(String[] args) {
        int[] arr = new int[]{-2, -1, 0, 1, 2};
        isDescending(arr);
        arr = new int[]{0};
        isDescending(arr);
        arr = new int[]{-2, -1};
        isDescending(arr);
        arr = new int[]{2, 3};
        isDescending(arr);
        arr = new int[]{0, 1};
        isDescending(arr);
        arr = new int[]{-2, -3};
        isDescending(arr);
        arr = new int[]{0, -3, 1, 10};
        isDescending(arr);
        arr = new int[]{-3, 0, 1, 10};
        isDescending(arr);
        arr = new int[]{-2, -3, 0};
        isDescending(arr);
        arr = new int[]{-2, -1, 8};
        isDescending(arr);
        arr = new int[]{2, 2};
        isDescending(arr);
        arr = new int[]{0, 1, 213, 703, 713, -32};
        isDescending(arr);
        arr = new int[]{713, 703, 29, 28, 4, -1};
        isDescending(arr);
        arr = new int[]{0, 1, 213, 703, 713, 1919, 1243546};
        isDescending(arr);
        arr = new int[]{124, 29, 12, 4, 3, 2, -1};
        isDescending(arr);
        arr = new int[]{114, 512, 513, 514, 810, 927, 999, 0, 114514};
        isDescending(arr);
    }
}
