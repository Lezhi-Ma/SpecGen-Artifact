class PowerOfTwoLoop {
    //@ requires n != Integer.MIN_VALUE;
    //@ ensures \result <==> (n > 0 && (\exists int i; 0 <= i && i <= 31; n == 2^i));
    public boolean isPowerOfTwo(int n) {
        if(n <= 0) {
            return false;
        }
        //@ maintaining (n > 0 && (\exists int i; 0 <= i && i <= 31; n == 2^i)) <==> (\exists int i; 0 <= i && i <= 31; n == 2^i);
        //@ decreases n;
        while (n % 2 == 0) {
            n /= 2;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:3: error: bad operand types for binary operator '^'
    //@ ensures \result <==> (n > 0 && (\exists int i; 0 <= i && i <= 31; n == 2^i));
                                                                                ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:8: error: bad operand types for binary operator '^'
        //@ maintaining (n > 0 && (\exists int i; 0 <= i && i <= 31; n == 2^i)) <==> (\exists int i; 0 <= i && i <= 31; n == 2^i);
                                                                           ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:8: error: bad operand types for binary operator '^'
        //@ maintaining (n > 0 && (\exists int i; 0 <= i && i <= 31; n == 2^i)) <==> (\exists int i; 0 <= i && i <= 31; n == 2^i);
                                                                                                                              ^
  first type:  boolean
  second type: int
3 errors

