class PerfectNumber {
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
    public boolean isPerfectNumber(int num) {
        if (num == 1) {
            return false;
        }

        int sum = 1;
        //@ maintaining 1 <= sum && sum <= num;
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
        //@ decreases num - d;
        for (int d = 2; d * d <= num; ++d) {
            if (num % d == 0) {
                sum += d;
                if (d * d < num) {
                    sum += num / d;
                }
            }
        }
        return sum == num;
    }
}
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                       ^
  symbol:   variable sum
  location: class PerfectNumber
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: unexpected type
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                   ^
  required: variable
  found:    value
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: Assignments are not allowed where pure expressions are expected
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: cannot find symbol
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                                ^
  symbol:   variable sum
  location: class PerfectNumber
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: unexpected type
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                            ^
  required: variable
  found:    value
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:2: error: Assignments are not allowed where pure expressions are expected
    //@ ensures \result <==> (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                                    ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: variable d is already defined in method isPerfectNumber(int)
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                     ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: incompatible types: int cannot be converted to boolean
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                  ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: unexpected type
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                              ^
  required: variable
  found:    value
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: Assignments are not allowed where pure expressions are expected
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                      ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: incompatible types: int cannot be converted to boolean
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: unexpected type
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                       ^
  required: variable
  found:    value
/home/max/Documents/JMLGPT/tmp/PerfectNumber.java:10: error: Assignments are not allowed where pure expressions are expected
        //@ maintaining (\forall int d; 2 <= d && d * d <= num; num % d == 0 ==> (d * d < num ==> sum += d + num / d) && (d * d == num ==> sum += d));
                                                                                                                                               ^
13 errors

