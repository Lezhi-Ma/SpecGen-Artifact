import java.util.Arrays;

class LargestPerimeter {
    //@ requires A != null;
    //@ ensures \result >= 0;
    //@ ensures \result == 0 <==> (\forall int i; 0 <= i && i < A.length - 2; !(A[i] + A[i+1] > A[i+2]));
    //@ ensures \result > 0 ==> A[\result - 3] + A[\result - 2] > A[\result - 1];
    //@ ensures \result > 0 ==> \result == A[\result - 3] + A[\result - 2] + A[\result - 1];
    public int largestPerimeter(int[] A) {
        Arrays.sort(A);
        for (int i = A.length - 1; i >= 2; --i) {
            if (A[i - 2] + A[i - 1] > A[i]) {
                return A[i - 2] + A[i - 1] + A[i];
            }
        }
        return 0;
    }
}
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:12: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method largestPerimeter
            if (A[i - 2] + A[i - 1] > A[i]) {
                                       ^
1 verification failure

