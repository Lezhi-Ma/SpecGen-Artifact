public class IsSuffix {
    //@ requires pat != null && txt != null;
    //@ ensures \result == (\exists int i; 0 <= i && i < pat.length(); isSuffix(pat, txt, i));
    public boolean isSuffix (String pat, String txt) {
        int i = pat.length() - 1;
        //@ maintaining pat.length() - 1 >= i >= 0;
        //@ maintaining (\forall int k; i < k && k < pat.length(); !isSuffix(pat, txt, k));
        //@ decreases i;
        while(i >= 0) {
            int j = i - pat.length() + txt.length();
            if(j < 0 || pat.charAt(i) != txt.charAt(j))
                return false;
            i = i - 1;
        }
        return true;
    }

    //@ requires pat != null && txt != null && 0 <= i && i < pat.length();
    //@ ensures \result == (\exists int j; 0 <= j && j < txt.length(); pat.charAt(i) == txt.charAt(j));
    private boolean isSuffix(String pat, String txt, int i) {
        int j = i - pat.length() + txt.length();
        return j >= 0 && pat.charAt(i) == txt.charAt(j);
    }
}
/home/max/Documents/JMLGPT/tmp/IsSuffix.java:3: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == (\exists int i; 0 <= i && i < pat.length(); isSuffix(pat, txt, i));
                                                                       ^
/home/max/Documents/JMLGPT/tmp/IsSuffix.java:3: warning: A non-pure method is being called where it is not permitted: IsSuffix.isSuffix(java.lang.String,java.lang.String,int)
    //@ ensures \result == (\exists int i; 0 <= i && i < pat.length(); isSuffix(pat, txt, i));
                                                                               ^
/home/max/Documents/JMLGPT/tmp/IsSuffix.java:7: warning: A non-pure method is being called where it is not permitted: IsSuffix.isSuffix(java.lang.String,java.lang.String,int)
        //@ maintaining (\forall int k; i < k && k < pat.length(); !isSuffix(pat, txt, k));
                                                                            ^
1 error
2 warnings

