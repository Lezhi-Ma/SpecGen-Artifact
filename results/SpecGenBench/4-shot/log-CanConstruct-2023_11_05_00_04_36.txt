class CanConstruct {
    //@ requires ransomNote != null && magazine != null;
    //@ ensures \result == (\forall int i; 0 <= i && i < ransomNote.length(); countChar(ransomNote.charAt(i), magazine) >= countChar(ransomNote.charAt(i), ransomNote));
    public boolean canConstruct(String ransomNote, String magazine) {
        if (ransomNote.length() > magazine.length()) {
            return false;
        }
        int[] cnt = new int[26];
        for (char c : magazine.toCharArray()) {
            cnt[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            cnt[c - 'a']--;
            if(cnt[c - 'a'] < 0) {
                return false;
            }
        }
        return true;
    }

    //@ requires str != null;
    //@ ensures \result >= 0;
    public /*@ pure @*/ int countChar(char c, String str) {
        int count = 0;
        for (char ch : str.toCharArray()) {
            if (ch == c) {
                count++;
            }
        }
        return count;
    }
}
/home/max/Documents/JMLGPT/tmp/CanConstruct.java:6: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/CanConstruct.java:3:) in method canConstruct
            return false;
            ^
/home/max/Documents/JMLGPT/tmp/CanConstruct.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/CanConstruct.java:6:
    //@ ensures \result == (\forall int i; 0 <= i && i < ransomNote.length(); countChar(ransomNote.charAt(i), magazine) >= countChar(ransomNote.charAt(i), ransomNote));
        ^
/home/max/Documents/JMLGPT/tmp/CanConstruct.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/CanConstruct.java:22:) in method countChar
        return count;
        ^
/home/max/Documents/JMLGPT/tmp/CanConstruct.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/CanConstruct.java:30:
    //@ ensures \result >= 0;
        ^
4 verification failures

