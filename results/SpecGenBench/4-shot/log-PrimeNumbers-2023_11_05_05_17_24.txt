public class PrimeNumbers {
    private  static boolean div(int n, int d) { return n%d == 0; }
    //@ private instance invariant primeArray != null;
    private  int primeArray[];
    
    //@ requires n > 0;
    //@ ensures \result != null && \result.length == n;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; isPrime(\result[i]));
    public int[] primeList(int n) {
        int status = 1, num = 3, count, j;
        primeArray = new int[n];
        primeArray[0] = 2;

        //@ maintaining 2 <= count && count <= n + 1;
        //@ maintaining (\forall int i; 0 <= i && i < count - 1; isPrime(primeArray[i]));
        //@ decreases n - count;
        for (count = 2; count <= n;) { 

            //@ maintaining 2 <= j && j <= num/2 + 1;
            //@ maintaining (\forall int k; 2 <= k && k < j; !div(num, k));
            //@ decreases num/2 + 1 - j;
            for (j = 2; j <= num/2; j++) { 
                if (div(num,j)) {
                    status = 0;
                    break;
                }
            }

            if (status != 0) {  
                primeArray[count - 1] = num;
                count++;
            }
            status = 1;
            num++;
        } 
        return primeArray; 
    }
    
    //@ ensures \result ==> n > 1 && (\forall int i; 2 <= i && i < n; !div(n, i));
    //@ ensures !\result ==> n <= 1 || (\exists int i; 2 <= i && i < n; div(n, i));
    private /*@ pure @*/ boolean isPrime(int n) {
        if (n <= 1) {
            return false;
        }
        for (int i = 2; i < n; i++) {
            if (div(n, i)) {
                return false;
            }
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/PrimeNumbers.java:8: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures (\forall int i; 0 <= i && i < \result.length; isPrime(\result[i]));
                                                              ^
/home/max/Documents/JMLGPT/tmp/PrimeNumbers.java:20: warning: A non-pure method is being called where it is not permitted: PrimeNumbers.div(int,int)
            //@ maintaining (\forall int k; 2 <= k && k < j; !div(num, k));
                                                                 ^
/home/max/Documents/JMLGPT/tmp/PrimeNumbers.java:39: warning: A non-pure method is being called where it is not permitted: PrimeNumbers.div(int,int)
    //@ ensures \result ==> n > 1 && (\forall int i; 2 <= i && i < n; !div(n, i));
                                                                          ^
/home/max/Documents/JMLGPT/tmp/PrimeNumbers.java:40: warning: A non-pure method is being called where it is not permitted: PrimeNumbers.div(int,int)
    //@ ensures !\result ==> n <= 1 || (\exists int i; 2 <= i && i < n; div(n, i));
                                                                           ^
1 error
3 warnings

