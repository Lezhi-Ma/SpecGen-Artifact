class SelfDeviding {
    //@ requires num >= 0;
    //@ ensures \result ==> (\forall int i; i > 0 && i < num; (i % 10 != 0 && num % (i % 10) == 0));
    //@ ensures !\result ==> (\exists int i; i > 0 && i < num; (i % 10 == 0 || num % (i % 10) != 0));
    public static boolean isSelfDividable(int num) {
        int temp = num;
        //@ maintaining temp >= 0;
        //@ maintaining (\forall int i; i > 0 && i < temp; (i % 10 != 0 && num % (i % 10) == 0));
        //@ maintaining !(\exists int i; i > 0 && i < temp; (i % 10 == 0 || num % (i % 10) != 0));
        //@ decreases temp;
        while (temp > 0) {
            int digit = temp % 10;
            if (digit == 0 || num % digit != 0) {
                return false;
            }
            temp /= 10;
        }
        return true;
    }
}
/home/max/Documents/JMLGPT/tmp/SelfDividing.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/SelfDividing.java:4:) in method isSelfDividable
                return false;
                ^
/home/max/Documents/JMLGPT/tmp/SelfDividing.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/SelfDividing.java:14:
    //@ ensures !\result ==> (\exists int i; i > 0 && i < num; (i % 10 == 0 || num % (i % 10) != 0));
        ^
2 verification failures

