import java.lang.Math;

public class SolveQuadraticEquation {
    //@ requires a != 0 && (b*b - 4*a*c) >= 0;
    //@ ensures \result.length == 2 && \result[0] == (-b - Math.sqrt(b*b - 4*a*c)) / (2*a) && \result[1] == 0;
    public static double[] solve(int a, int b, int c) {
        double[] res = new double[2];
        double delta = b * b - 4 * a * c;
        if(delta >= 0) {
            res[0] = (-b - Math.sqrt(delta)) / (2 * a);
            res[1] = 0;
        }
        else {
            res[0] = -b / (2*a);
            res[1] = Math.sqrt(-delta) / (2*a);
        }
        return res;
    } 
}
/home/max/Documents/JMLGPT/tmp/SolveQuadraticEquation.java:10: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:264:) in method solve
            res[0] = (-b - Math.sqrt(delta)) / (2 * a);
                                    ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:264: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/SolveQuadraticEquation.java:10:
    public static /*@ pure @*/ double sqrt(double a);
                                      ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:247: verify: Precondition conjunct is false: Double.isNaN(a) || a < 0.0
      @   requires Double.isNaN(a) || a < 0.0;
                                   ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:250: verify: Precondition conjunct is false: a == Double.POSITIVE_INFINITY
      @   requires a == Double.POSITIVE_INFINITY;
                     ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:253: verify: Precondition conjunct is false: java.lang.Math.isPositiveZero(a)
      @   requires isPositiveZero(a);
                                 ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:256: verify: Precondition conjunct is false: java.lang.Math.isNegativeZero(a)
      @   requires isNegativeZero(a);
                                 ^
/home/max/Documents/JMLGPT/openjml/specs/java/lang/Math.jml:259: verify: Precondition conjunct is false: a > 0.0
      @   requires a > 0.0 && a < Double.POSITIVE_INFINITY;
                     ^
7 verification failures

