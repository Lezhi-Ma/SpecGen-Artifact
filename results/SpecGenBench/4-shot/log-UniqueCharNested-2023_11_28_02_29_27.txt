public class UniqueCharNested {

    //@ requires (\forall int i; 0 <= i && i < s.length(); (int)Character.MIN_VALUE <= (int)s.charAt(i) && (int)s.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < s.length(); (\forall int j; i+1 <= j && j < s.length(); s.charAt(i) != s.charAt(j)));
    //@ ensures 0 <= \result && \result < s.length() ==> (\forall int j; \result+1 <= j && j < s.length(); s.charAt(\result) != s.charAt(j));
    public static int uniqueChar(String s) {
        int j;
        for (int i = 0; i < s.length(); ++i) {
            char c1 = s.charAt(i);
            //@ maintaining i+1 <= j && j <= s.length();
            //@ maintaining (\forall int k; i+1 <= k && k < j; s.charAt(i) != s.charAt(k));
            //@ decreases s.length() - j;
            for (j = i + 1; j < s.length(); ++j) {
                char c2 = s.charAt(j);
                if(c1 == c2)
                    break;
            }
            if(j == s.length())
                return i;
        }
        return -1;
    }
    
}
/home/max/Documents/JMLGPT/tmp/UniqueCharNested.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/UniqueCharNested.java:4:) in method uniqueChar
        return -1;
        ^
/home/max/Documents/JMLGPT/tmp/UniqueCharNested.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UniqueCharNested.java:21:
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < s.length(); (\forall int j; i+1 <= j && j < s.length(); s.charAt(i) != s.charAt(j)));
        ^
2 verification failures

