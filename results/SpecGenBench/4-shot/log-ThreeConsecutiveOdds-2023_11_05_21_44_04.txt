public class ThreeConsecutiveOdds {

    //@ requires arr != null;
    //@ ensures \result == true <==> (\exists int i; 0 <= i && i <= arr.length - 3; (arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0);
    public boolean threeConsecutiveOdds(int[] arr) {
        int n = arr.length;

        //@ loop_invariant 0 <= i && i <= n - 3;
        //@ loop_invariant (\forall int j; 0 <= j && j < i; (arr[j] & 1) != 0 && (arr[j + 1] & 1) != 0 && (arr[j + 2] & 1) != 0) ==> \result == true;
        //@ decreases n - 3 - i;
        for (int i = 0; i <= n - 3; ++i) {
            if ((arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0) {
                return true;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/ThreeConsecutiveOdds.java:9: error: A \result expression may not be in a loop_invariant clause
        //@ loop_invariant (\forall int j; 0 <= j && j < i; (arr[j] & 1) != 0 && (arr[j + 1] & 1) != 0 && (arr[j + 2] & 1) != 0) ==> \result == true;
                                                                                                                                      ^
1 error

