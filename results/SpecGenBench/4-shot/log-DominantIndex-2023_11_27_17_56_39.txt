class DominantIndex {
    //@ requires nums != null && nums.length > 0;
    //@ ensures \result >= -1 && \result < nums.length;
    //@ ensures \result == -1 || (\forall int i; 0 <= i && i < nums.length && i != \result; 2 * nums[i] <= nums[\result]);
    //@ ensures \result == -1 || (\forall int i; 0 <= i && i < nums.length && i != \result && nums[i] <= nums[\result]);
    public static int dominantIndex(int[] nums) {
        int biggest_index = 0;

        //@ maintaining 0 <= i && i <= nums.length;
        //@ maintaining biggest_index >= 0 && biggest_index < i;
        //@ maintaining (\forall int j; 0 <= j && j < i; nums[j] <= nums[biggest_index]);
        //@ decreases nums.length - i;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[biggest_index])
                biggest_index = i;
        }

        //@ maintaining 0 <= i && i <= nums.length;
        //@ maintaining (\forall int j; 0 <= j && j < i && j != biggest_index; 2 * nums[j] <= nums[biggest_index]);
        //@ maintaining (\forall int j; 0 <= j && j < i && j != biggest_index; nums[j] <= nums[biggest_index]);
        //@ decreases nums.length - i;
        for (int i = 0; i < nums.length; i++) {
            if (i != biggest_index && 2 * nums[i] > nums[biggest_index])
                return -1;
        }

        return biggest_index;
    }
}
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:10: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method dominantIndex
        //@ maintaining biggest_index >= 0 && biggest_index < i;
            ^
1 verification failure

