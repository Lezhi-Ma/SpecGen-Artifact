class CalcComplement {
    //@ ensures \result >= 0;
    //@ ensures \result < num;
    public int calcComplement(int num) {
        int highbit = 0;
        //@ maintaining 0 <= i && i <= 30;
        //@ maintaining (\forall int j; 1 <= j && j < i; num < 1 << j);
        //@ decreases 30 - i;
        for (int i = 1; i <= 30; ++i) {
            if (num >= 1 << i) {
                highbit = i;
            } else {
                break;
            }            
        }
        int mask = highbit == 30 ? 0x7fffffff : (1 << (highbit + 1)) - 1;
        return num ^ mask;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcComplement.java:16: verify: The prover cannot establish an assertion (PossiblyLargeShift) in method calcComplement
        int mask = highbit == 30 ? 0x7fffffff : (1 << (highbit + 1)) - 1;
                                                   ^
1 verification failure

