class PowerOfTwoLoop {
    //@ ensures \result <==> n > 0 && (\forall int i; i >= 0 && i < \old(n); n % 4 != 0);
    public boolean isPowerOfTwo(int n) {
        if(n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ maintaining n % 4 == 0 ==> (\exists int i; i >= 0 && i < \old(n); n == \old(n) / (int)Math.pow(4, i));
        //@ decreases n;
        while (n % 4 == 0) {
            n /= 4;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfFourLoop.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method isPowerOfTwo
        //@ maintaining n % 4 == 0 ==> (\exists int i; i >= 0 && i < \old(n); n == \old(n) / (int)Math.pow(4, i));
            ^
1 verification failure

