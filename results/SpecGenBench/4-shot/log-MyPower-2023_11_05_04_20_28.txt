class MyPower {
    //@ requires n >= 0;
    //@ ensures \result == (\product int i; 0 <= i && i < n; x);
    public static int power(int x, int n) {
        int res = 1;
        //@ maintaining 0 <= i && i <= n;
        //@ maintaining res == (\product int k; 0 <= k && k < i; x);
        //@ decreases n - i;
        for(int i = 0; i < n; i++)
	    res = res * x;
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MyPower.java:7: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \product
        //@ maintaining res == (\product int k; 0 <= k && k < i; x);
                                ^
/home/max/Documents/JMLGPT/tmp/MyPower.java:7: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \product
        //@ maintaining res == (\product int k; 0 <= k && k < i; x);
                                ^
/home/max/Documents/JMLGPT/tmp/MyPower.java:7: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \product
        //@ maintaining res == (\product int k; 0 <= k && k < i; x);
                                ^
/home/max/Documents/JMLGPT/tmp/MyPower.java:3: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \product
    //@ ensures \result == (\product int i; 0 <= i && i < n; x);
                            ^
/home/max/Documents/JMLGPT/tmp/MyPower.java:7: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method power
        //@ maintaining res == (\product int k; 0 <= k && k < i; x);
            ^
4 warnings
1 verification failure

