import java.util.PriorityQueue;

class KthLargest {
    //@ requires nums != null && 0 < nums.length && k > 0 && k <= nums.length;
    //@ ensures \result == (\max int x; (\exists int i; 0 <= i && i < nums.length; nums[i] == x));
    public static int kthLargest(int[] nums, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        
        //@ assume pq != null && pq.isEmpty();
        
        //@ maintaining (\forall int x; (\exists int i; 0 <= i && i < nums.length; nums[i] == x) ==> (\exists int j; 0 <= j && j < pq.size(); pq.contains(j)));
        //@ maintaining pq.size() <= k;
        //@ decreases nums.length - pq.size();
        for (int x : nums) {
            pq.offer(x);
            if (pq.size() > k) {
                pq.poll();
            }
        }

        return pq.peek();
    }
}
/home/max/Documents/JMLGPT/tmp/KthLargest.java:5: error: incomparable types: int and boolean
    //@ ensures \result == (\max int x; (\exists int i; 0 <= i && i < nums.length; nums[i] == x));
                        ^
/home/max/Documents/JMLGPT/tmp/KthLargest.java:11: error: variable x is already defined in method kthLargest(int[],int)
        //@ maintaining (\forall int x; (\exists int i; 0 <= i && i < nums.length; nums[i] == x) ==> (\exists int j; 0 <= j && j < pq.size(); pq.contains(j)));
                                     ^
2 errors

