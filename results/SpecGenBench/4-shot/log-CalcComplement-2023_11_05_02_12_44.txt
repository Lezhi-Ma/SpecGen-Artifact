class CalcComplement {
    //@ requires 0 <= num && num <= Integer.MAX_VALUE;
    //@ ensures 0 <= \result && \result <= Integer.MAX_VALUE;
    //@ ensures (\forall int i; 0 <= i && i <= 30; num < 1 << i) <==> \result == num;
    //@ ensures (\forall int i; 0 <= i && i <= 30; num >= 1 << i) <==> \result == (num ^ mask);
    public int calcComplement(int num) {
        int highbit = 0;
        //@ maintaining 1 <= i && i <= 30;
        //@ maintaining (\forall int j; 1 <= j && j < i; num >= 1 << j) ==> highbit == i - 1;
        //@ decreases 30 - i;
        for (int i = 1; i <= 30; ++i) {
            if (num >= 1 << i) {
                highbit = i;
            } else {
                break;
            }            
        }
        int mask = highbit == 30 ? 0x7fffffff : (1 << (highbit + 1)) - 1;
        return num ^ mask;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcComplement.java:5: error: cannot find symbol
    //@ ensures (\forall int i; 0 <= i && i <= 30; num >= 1 << i) <==> \result == (num ^ mask);
                                                                                         ^
  symbol:   variable mask
  location: class CalcComplement
1 error

