class PowerOfTwoLoop {
    //@ requires n >= Integer.MIN_VALUE && n <= Integer.MAX_VALUE;
    //@ ensures \result <==> (\exists int i; 0 <= i && i <= 31; n == (int)Math.pow(2, i));
    public boolean isPowerOfTwo(int n) {
        if(n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ decreases n;
        while (n % 2 == 0) {
            n /= 2;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:6: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:3:) in method isPowerOfTwo
            return false;
            ^
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:6:
    //@ ensures \result <==> (\exists int i; 0 <= i && i <= 31; n == (int)Math.pow(2, i));
        ^
2 verification failures

