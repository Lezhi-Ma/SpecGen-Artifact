class CalcDuration {
    //@ requires timeSeries != null && (\forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0);
    //@ ensures \result >= 0;
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired == \sum int j; 0 <= j && j < i; timeSeries[j] + duration;
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:9: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining expired == \sum int j; 0 <= j && j < i; timeSeries[j] + duration;
                                   ^
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:9: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining expired == \sum int j; 0 <= j && j < i; timeSeries[j] + duration;
                                   ^
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:9: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining expired == \sum int j; 0 <= j && j < i; timeSeries[j] + duration;
                                   ^
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:9: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method calcDuration
        //@ maintaining expired == \sum int j; 0 <= j && j < i; timeSeries[j] + duration;
            ^
3 warnings
1 verification failure

