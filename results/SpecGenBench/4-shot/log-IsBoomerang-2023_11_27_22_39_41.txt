class IsBoomerang {
    //@ requires points != null && points.length == 3 && points[0] != null && points[0].length == 2 && points[1] != null && points[1].length == 2 && points[2] != null && points[2].length == 2;
    //@ ensures \result ==> (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) != 0;
    //@ ensures !\result ==> (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) == 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        return v1[0] * v2[1] - v1[1] * v2[0] != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:4:) in method isBoomerang
        return v1[0] * v2[1] - v1[1] * v2[0] != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8:
    //@ ensures !\result ==> (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) == 0;
        ^
2 verification failures

