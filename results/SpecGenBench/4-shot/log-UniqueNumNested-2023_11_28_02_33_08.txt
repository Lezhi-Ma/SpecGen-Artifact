public class UniqueNumNested {
    //@ requires arr != null;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < arr.length; (\forall int j; i+1 <= j && j < arr.length; arr[i] != arr[j]));
    //@ ensures 0 <= \result && \result < arr.length ==> (\forall int j; \result+1 <= j && j < arr.length; arr[\result] != arr[j]);
    public static int uniqueNum(int[] arr) {
        for (int i = 0; i < arr.length; ++i) {
            //@ maintaining 0 <= i && i <= arr.length;
            //@ maintaining (\forall int j; 0 <= j && j < i; (\forall int k; i+1 <= k && k < arr.length; arr[j] != arr[k]));
            //@ decreases arr.length - i;
            for (int j = i + 1; j < arr.length; ++j) {
                if(arr[i] == arr[j])
                    break;
            }
            if(j == arr.length)
                return i;
        }
        return -1;
    }
}
/home/max/Documents/JMLGPT/tmp/UniqueNumNested.java:8: error: variable j is already defined in method uniqueNum(int[])
            //@ maintaining (\forall int j; 0 <= j && j < i; (\forall int k; i+1 <= k && k < arr.length; arr[j] != arr[k]));
                                         ^
/home/max/Documents/JMLGPT/tmp/UniqueNumNested.java:14: error: cannot find symbol
            if(j == arr.length)
               ^
  symbol:   variable j
  location: class UniqueNumNested
2 errors

