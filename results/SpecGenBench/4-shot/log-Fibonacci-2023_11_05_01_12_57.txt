public class Fibonacci {

    //@ requires n >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\forall int i; 0 <= i && i <= n; fib[i] == fibCompute(i));
    public static int fibCompute(int n) {
        if(n < 0) return -1;
        else if(n == 0) return 0;

        int[] fib = new int[n + 1];
        fib[0] = 0;
        fib[1] = 1;
        int index = 2;

        //@ maintaining 2 <= index && index <= fib.length;
        //@ maintaining (\forall int i; 0 <= i && i < index; fib[i] == fibCompute(i));
        //@ decreases fib.length - index;
        while (index < fib.length) {
            fib[index] = fib[index - 2] + fib[index - 1];
            index++;         
        }

        return fib[n];
    }

}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:5: error: cannot find symbol
    //@ ensures (\forall int i; 0 <= i && i <= n; fib[i] == fibCompute(i));
                                                  ^
  symbol:   variable fib
  location: class Fibonacci
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:5: warning: A non-pure method is being called where it is not permitted: Fibonacci.fibCompute(int)
    //@ ensures (\forall int i; 0 <= i && i <= n; fib[i] == fibCompute(i));
                                                                      ^
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:16: warning: A non-pure method is being called where it is not permitted: Fibonacci.fibCompute(int)
        //@ maintaining (\forall int i; 0 <= i && i < index; fib[i] == fibCompute(i));
                                                                                 ^
1 error
2 warnings

