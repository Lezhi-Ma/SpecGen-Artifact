public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 ==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures \result >= 0 && \result < x.length ==> x[\result] == 0;
    public static int FindFirstZero(int[] x) {
        assert x.length >= 0;
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;

            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ maintaining index < x.length ==> x[index] == 0;
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:15: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method FindFirstZero
            //@ maintaining index < x.length ==> x[index] == 0;
                ^
1 verification failure

