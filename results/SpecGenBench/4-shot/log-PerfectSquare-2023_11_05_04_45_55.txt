class PerfectSquare {
    //@ requires num >= 0;
    //@ ensures \result <==> (\exists int i; 0 <= i && i * i <= num; i * i == num);
    public static boolean isPerfectSquare(int num) {
        if(num == 0)
            return true;

        for(int i = 1; i * i <= num; i++) {
            if(i * i == num)
                return true;
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:6: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/PerfectSquare.java:3:) in method isPerfectSquare
            return true;
            ^
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/PerfectSquare.java:6:
    //@ ensures \result <==> (\exists int i; 0 <= i && i * i <= num; i * i == num);
        ^
2 verification failures

