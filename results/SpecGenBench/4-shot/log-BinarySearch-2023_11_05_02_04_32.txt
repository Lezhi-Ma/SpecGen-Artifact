public class BinarySearch {
    //@ requires arr != null;
    //@ ensures \result == -1 || (0 <= \result && \result < arr.length && arr[\result] == key);
    public static int Binary(int[] arr, int key) {
        if (arr.length == 0) {
            return -1;
        } else {
            int low = 0;
            int high = arr.length;
            int mid = high / 2;

            //@ maintaining low <= high && (low == high ==> \result == -1) && (low < high ==> arr[mid] != key);
            //@ decreases high - low;
            while (low < high && arr[mid] != key) {
                if (arr[mid] < key) {
                    low = mid + 1;
                } else {
                    high = mid;
                }
                mid = low + (high - low) / 2;
            }
            if (low >= high) {
                return -1;
            }
            return mid;
        }
    }
}
/home/max/Documents/JMLGPT/tmp/BinarySearch.java:12: error: A \result expression may not be in a loop_invariant clause
            //@ maintaining low <= high && (low == high ==> \result == -1) && (low < high ==> arr[mid] != key);
                                                             ^
1 error

