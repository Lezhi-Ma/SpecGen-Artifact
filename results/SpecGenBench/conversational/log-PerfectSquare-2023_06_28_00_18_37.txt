class PerfectSquare {
    /*@ public normal_behavior
      @    requires num >= 0;
      @    ensures \result <==> (\exists int i; 0 <= i && i*i == num; true);
      @    pure @*/
    public static boolean isPerfectSquare(int num) {
        //@ ghost int i_counter;
        //@ set i_counter = 1;
        //@ maintaining 1 <= i && i <= num;
        //@ decreases num - i;
        for(int i = 1; i < num; i++) {
            if(i * i == num)
                return true;
            //@ set i_counter = i_counter + 1;
        }
        //@ assert i_counter == num;
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:16: verify: The prover cannot establish an assertion (Assert) in method isPerfectSquare
        //@ assert i_counter == num;
            ^
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:9: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method isPerfectSquare
        //@ maintaining 1 <= i && i <= num;
            ^
2 verification failures

