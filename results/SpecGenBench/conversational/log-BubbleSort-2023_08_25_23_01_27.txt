public class BubbleSort { 
    //@ requires (\forall int i; 0 <= i && i < array.length; Integer.MIN_VALUE <= array[i] && array[i] <= Integer.MAX_VALUE);
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
    public int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining 0 <= i && i <= n-1;
        //@ decreases n - 1 - i;
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining 0 <= j && j <= n-i-1;
            //@ decreases n - i - 1 - j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 

    //@ requires 0 <= x && x < array.length && 0 <= y && y < array.length;
    //@ assignable array[x], array[y];
    //@ ensures array[x] == \old(array[y]) && array[y] == \old(array[x]);
    void swap(int x, int y, int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }
}
