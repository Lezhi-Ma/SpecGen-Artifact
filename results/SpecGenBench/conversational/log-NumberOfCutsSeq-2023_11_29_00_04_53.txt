class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        return ((n == 1) ? 0 : ((n % 2 == 0) ? (n / 2) : n));
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return ((n == 1) ? 0 : ((n % 2 == 0) ? (n / 2) : n));
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:7:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        //@ assert (\result == 0 ==> n == 1) && (\result == n/2 ==> n > 1 && n % 2 == 0) && (\result == n ==> n > 1 && n % 2 != 0);
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: error: A \result expression may not be in a assert clause
        //@ assert (\result == 0 ==> n == 1) && (\result == n/2 ==> n > 1 && n % 2 == 0) && (\result == n ==> n > 1 && n % 2 != 0);
                     ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: error: A \result expression may not be in a assert clause
        //@ assert (\result == 0 ==> n == 1) && (\result == n/2 ==> n > 1 && n % 2 == 0) && (\result == n ==> n > 1 && n % 2 != 0);
                                                  ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: error: A \result expression may not be in a assert clause
        //@ assert (\result == 0 ==> n == 1) && (\result == n/2 ==> n > 1 && n % 2 == 0) && (\result == n ==> n > 1 && n % 2 != 0);
                                                                                              ^
3 errors

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

class NumberOfCutsSeq {
    //@ requires n >= 1;
    //@ ensures \result == 0 ==> n == 1;
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
    //@ ensures \result == n ==> n > 1 && n % 2 != 0;
    public int numberOfCuts(int n) {
        int result;
        if (n == 1) {
            result = 0;
        } else if (n % 2 == 0) {
            result = n / 2;
        } else {
            result = n;
        }
        return result;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4:) in method numberOfCuts
        return result;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCutsSeq.java:15:
    //@ ensures \result == n/2 ==> n > 1 && n % 2 == 0;
        ^
2 verification failures

