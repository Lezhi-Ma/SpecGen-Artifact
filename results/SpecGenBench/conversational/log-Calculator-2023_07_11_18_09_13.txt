public class Calculator {
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 + num2;
    private /*@ pure @*/ int add(int num1, int num2) {
        return num1 + num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 - num2;
    private /*@ pure @*/ int subtract(int num1, int num2) {
        return num1 - num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 * num2;
    private /*@ pure @*/ int multiply(int num1, int num2) {
        return num1 * num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 / num2;
    private /*@ pure @*/ int divide(int num1, int num2) {
        return num1 / num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 % num2;
    private /*@ pure @*/ int modulo(int num1, int num2) {
        return num1 % num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == -1;
    private /*@ pure @*/ int invalidOperator() {
        return -1;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator) {
            case '+':
                output = add(num1, num2);
                break;

            case '-':
                output = subtract(num1, num2);
                break;

            case '*':
                output = multiply(num1, num2);
                break;

            case '/':
                output = divide(num1, num2);
                break;

            case '%':
                output = modulo(num1, num2);
                break;

            default:
                output = invalidOperator();
                break;
        }

        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:2: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:2: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:2: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:2: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:2: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:8: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:8: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:8: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:8: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:8: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:14: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:14: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:14: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:14: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:14: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:20: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:20: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:20: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:20: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:20: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:27: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:27: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:27: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:27: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:27: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:34: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                 ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:34: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                    ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:34: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                       ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:34: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                          ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:34: error: cannot find symbol
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
                                                                                             ^
  symbol:   variable operator
  location: class Calculator
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                           ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                         ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                            ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:41: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                                                                                                 ^
36 errors

public class Calculator {
    //@ spec_public
    private int num1;
    //@ spec_public
    private int num2;
    //@ spec_public
    private char operator;
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 + num2;
    private /*@ pure @*/ int add(int num1, int num2) {
        return num1 + num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 - num2;
    private /*@ pure @*/ int subtract(int num1, int num2) {
        return num1 - num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 * num2;
    private /*@ pure @*/ int multiply(int num1, int num2) {
        return num1 * num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 / num2;
    private /*@ pure @*/ int divide(int num1, int num2) {
        return num1 / num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 % num2;
    private /*@ pure @*/ int modulo(int num1, int num2) {
        return num1 % num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == -1;
    private /*@ pure @*/ int invalidOperator() {
        return -1;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        this.num1 = num1;
        this.num2 = num2;
        this.operator = operator;
        
        int output;

        switch (this.operator) {
            case '+':
                output = add(this.num1, this.num2);
                break;

            case '-':
                output = subtract(this.num1, this.num2);
                break;

            case '*':
                output = multiply(this.num1, this.num2);
                break;

            case '/':
                output = divide(this.num1, this.num2);
                break;

            case '%':
                output = modulo(this.num1, this.num2);
                break;

            default:
                output = invalidOperator();
                break;
        }
/home/max/Documents/JMLGPT/tmp/Calculator.java:80: error: reached end of file while parsing
        }
         ^
1 error

public class Calculator {
    //@ spec_public
    private int num1;
    //@ spec_public
    private int num2;
    //@ spec_public
    private char operator;
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 + num2;
    private /*@ pure @*/ int add(int num1, int num2) {
        return num1 + num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 - num2;
    private /*@ pure @*/ int subtract(int num1, int num2) {
        return num1 - num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 * num2;
    private /*@ pure @*/ int multiply(int num1, int num2) {
        return num1 * num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 / num2;
    private /*@ pure @*/ int divide(int num1, int num2) {
        return num1 / num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires num2 != 0;
    //@ ensures \result == num1 % num2;
    private /*@ pure @*/ int modulo(int num1, int num2) {
        return num1 % num2;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == -1;
    private /*@ pure @*/ int invalidOperator() {
        return -1;
    }

    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        this.num1 = num1;
        this.num2 = num2;
        this.operator = operator;
        
        int output;

        switch (this.operator) {
            case '+':
                output = add(this.num1, this.num2);
                break;

            case '-':
                output = subtract(this.num1, this.num2);
                break;

            case '*':
                output = multiply(this.num1, this.num2);
                break;

            case '/':
                output = divide(this.num1, this.num2);
                break;

            case '%':
                output = modulo(this.num1, this.num2);
                break;

            default:
                output = invalidOperator();
                break;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                           ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                         ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                            ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                               ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:48: error: An identifier with private visibility may not be used in a ensures clause with public visibility
    //@ ensures \result == add(num1, num2) || \result == subtract(num1, num2) || \result == multiply(num1, num2) || \result == divide(num1, num2) || \result == modulo(num1, num2) || \result == invalidOperator();
                                                                                                                                                                                                 ^
6 errors

