public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:28: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method calculate
		output = num1 % num2;
		              ^
1 verification failure

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:36: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:36:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		output = -1;
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		output = -1;
            	}
                break;

            default:
                output = -1;
                break;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:45: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:45:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:44: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:6:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:44:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    
    //@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
    //@ requires operator != '/' || num2 != 0;
    //@ requires operator != '%' || num2 != 0;
    //@ ensures \result == num1 + num2;
    public int calculate(int num1, int num2, char operator) {

        int output = 0;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
		break;

	    case '%':
		if (num2 != 0) {
            		output = num1 % num2;
            	} else {
            		throw new ArithmeticException("Division by zero");
            	}
                break;

            default:
                throw new IllegalArgumentException("Invalid operator");
        }
        return output;
    }
}
