public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:13: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
                  ^
  Reason: Double rewriting of ident: i i_650_650___40 i_650_664___43
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
                  ^
  Reason: Double rewriting of ident: i i_863_863___39 i_863_877___45
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k; 0 <= k && k < i; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]);
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k; 0 <= k && k < i; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]);
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                    ^
1 error

public class MatrixMul {
    //@ requires a.length == 2 && a[0].length == 2 && a[1].length == 2;
    //@ requires b.length == 2 && b[0].length == 2 && b[1].length == 2;
    //@ ensures \result.length == 2 && \result[0].length == 2 && \result[1].length == 2;
    //@ ensures \result[0][0] == a[0][0] * b[0][0] + a[0][1] * b[1][0];
    //@ ensures \result[0][1] == a[0][0] * b[0][1] + a[0][1] * b[1][1];
    //@ ensures \result[1][0] == a[1][0] * b[0][0] + a[1][1] * b[1][0];
    //@ ensures \result[1][1] == a[1][0] * b[0][1] + a[1][1] * b[1][1];
    public int[][] multiply(int[][] a, int[][] b) {
        int[][] c = new int[2][2];
        //@ maintaining 0 <= i && i <= 2;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < 2; c[k][j] == a[k][0] * b[0][j] + a[k][1] * b[1][j]));
        //@ decreases 2 - i;
        for (int i = 0; i < 2; i++) {
            //@ maintaining 0 <= j && j <= 2;
            //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k][j_1] == a[k][0] * b[0][j_1] + a[k][1] * b[1][j_1]));
            //@ decreases 2 - j;
            for (int j = 0; j < 2; j++) {
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                //@ decreases 2 - i;
                c[i][j] = a[i][0] * b[0][j] + a[i][1] * b[1][j];
            }
        }
        return c;
    }
}
/home/max/Documents/JMLGPT/tmp/MatrixMul.java:19: error: Loop specifications must immediately precede a loop statement
                //@ maintaining (\forall int k_1; 0 <= k_1 && k_1 < i; (\forall int j_1; 0 <= j_1 && j_1 < j; c[k_1][j_1] == a[k_1][0] * b[0][j_1] + a[k_1][1] * b[1][j_1]));
                    ^
1 error

