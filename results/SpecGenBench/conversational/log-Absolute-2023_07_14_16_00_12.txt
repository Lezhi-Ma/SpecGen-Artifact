public class Absolute {
	
	/*@ requires num >= Short.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ short Absolute(short num) {
		if (0 <= num)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires num >= Integer.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	/*@ requires num >= Long.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}
}
/home/max/Documents/JMLGPT/tmp/Absolute.java:7: error: Pure is not a repeatable annotation type
	public /*@ pure @*/ short Absolute(short num) {
	           ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: error: Pure is not a repeatable annotation type
	public /*@ pure @*/ int Absolute(int num) {
	           ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: error: Pure is not a repeatable annotation type
	public /*@ pure @*/ long Absolute(long num) {
	           ^
3 errors

public class Absolute {
	
	/*@ requires num >= Short.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ short absolute(short num) {
		if (0 <= num)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires num >= Integer.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ int absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	/*@ requires num >= Long.MIN_VALUE;
	  @ ensures \result >= 0;
	  @ ensures \result == num || \result == -num;
	  @ pure @*/
	public /*@ pure @*/ long absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}
}
