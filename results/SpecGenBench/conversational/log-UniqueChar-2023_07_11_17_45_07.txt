import java.util.HashMap;
import java.util.Map;

class UniqueChar {
    //@ requires (\forall int i; 0 <= i && i < s.length(); (int)Character.MIN_VALUE <= (int)s.charAt(i) && (int)s.charAt(i) <= (int)Character.MAX_VALUE);
    //@ ensures \result >= -1 && \result < s.length();
    public int firstUniqChar(String s) {
        Map<Character, Integer> frequency = new HashMap<Character, Integer>();
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ decreases s.length() - i;
        for (int i = 0; i < s.length(); ++i) {
            char ch = s.charAt(i);
            frequency.put(ch, frequency.getOrDefault(ch, 0) + 1);
        }
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get(s.charAt(k)) == frequency.get(s.charAt(k))));
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get
/home/max/Documents/JMLGPT/tmp/UniqueChar.java:50: error: reached end of file while parsing
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int k; 0 <= k && k < i; frequency.get
                                                                                                                ^
/home/max/Documents/JMLGPT/tmp/UniqueChar.java:17: error: Loop specifications must immediately precede a loop statement
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
            ^
2 errors

java
import java.util.HashMap;
import java.util.Map;

class UniqueChar {
    //@ requires s != null;
    //@ ensures \result >= -1 && \result < s.length();
    public int firstUniqChar(String s) {
        Map<Character, Integer> frequency = new HashMap<Character, Integer>();
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ decreases s.length() - i;
        for (int i = 0; i < s.length(); ++i) {
            char ch = s.charAt(i);
            frequency.put(ch, frequency.getOrDefault(ch, 0) + 1);
        }
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int j; 0 <= j && j < i; frequency.get(s.charAt(j)) > 1));
        //@ decreases s.length() - i;
        for (int i = 0; i < s.length(); ++i) {
            if (frequency.get(s.charAt(i)) == 1) {
                return i;
            }
        }
        return -1;
    }
}
/home/max/Documents/JMLGPT/tmp/UniqueChar.java:1: error: class, interface, enum, or record expected
java
^
1 error

import java.util.HashMap;
import java.util.Map;

class UniqueChar {
    //@ requires s != null;
    //@ ensures \result >= -1 && \result < s.length();
    public int firstUniqChar(String s) {
        Map<Character, Integer> frequency = new HashMap<Character, Integer>();
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ decreases s.length() - i;
        for (int i = 0; i < s.length(); ++i) {
            char ch = s.charAt(i);
            frequency.put(ch, frequency.getOrDefault(ch, 0) + 1);
        }
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); frequency.get(s.charAt(i)) == frequency.getOrDefault(s.charAt(i), 0) + 1);
        //@ maintaining (\forall int i; 0 <= i && i < s.length(); (\forall int j; 0 <= j && j < i; frequency.get(s.charAt(j)) > 1));
        //@ decreases s.length() - i;
        for (int i = 0; i < s.length(); ++i) {
            if (frequency.get(s.charAt(i)) == 1) {
                return i;
            }
        }
        return -1;
    }
}
