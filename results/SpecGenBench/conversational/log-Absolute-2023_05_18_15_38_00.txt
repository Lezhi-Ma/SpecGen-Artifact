
public class Absolute {
	/*@ requires Short.MIN_VALUE <= num && num <= Short.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ short Absolute(short num) {
		if (0 <= num)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	/*@ requires Long.MIN_VALUE <= num && num <= Long.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:11: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method Absolute
			return (short)-num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: int negation
			return -num;
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:22:
	  @ ensures \result >= 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: long negation
			return -num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:26:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:33:
	  @ ensures \result >= 0;
	    ^
7 verification failures


public class Absolute {
	/*@ requires Short.MIN_VALUE <= num && num <= Short.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ short Absolute(short num) {
		if (num >= 0)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ int Absolute(int num) {
		if (num >= 0)
			return num;
		else
			return -num;
	}

	/*@ requires Long.MIN_VALUE <= num && num <= Long.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ long Absolute(long num) {
		if (num >= 0)
			return num;
		else
			return -num;	
	}
}



/home/max/Documents/JMLGPT/tmp/Absolute.java:11: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method Absolute
			return (short)-num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: int negation
			return -num;
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:22:
	  @ ensures \result >= 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: long negation
			return -num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:26:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:33:
	  @ ensures \result >= 0;
	    ^
7 verification failures



public class Absolute {
	/*@ requires Short.MIN_VALUE <= num && num <= Short.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ short Absolute(short num) {
		if (num >= 0)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ int Absolute(int num) {
		if (num >= 0)
			return num;
		else
			return -num;
	}

	/*@ requires Long.MIN_VALUE <= num && num <= Long.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ long Absolute(long num) {
		if (num >= 0)
			return num;
		else
			return -num;	
	}
}



/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method Absolute
			return (short)-num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: int negation
			return -num;
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:16:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:23:
	  @ ensures \result >= 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:34: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: long negation
			return -num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:27:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:34:
	  @ ensures \result >= 0;
	    ^
7 verification failures




public class Absolute {
	/*@ requires Short.MIN_VALUE <= num && num <= Short.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ short Absolute(short num) {
		if (num >= 0)
			return num;
		else
			return (short)-num;	
	}

	/*@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ int Absolute(int num) {
		if (num >= 0)
			return num;
		else
			return num * -1;
	}

	/*@ requires Long.MIN_VALUE <= num && num <= Long.MAX_VALUE;
	  @ ensures \result >= 0;
	  @ ensures num >= 0 ==> \result == num;
	  @ ensures num < 0 ==> \result == -num; @*/
	public /* pure @*/ long Absolute(long num) {
		if (num >= 0)
			return num;
		else
			return num * -1;	
	}
}




/home/max/Documents/JMLGPT/tmp/Absolute.java:13: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method Absolute
			return (short)-num;	
			       ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: int multiply overflow
			return num * -1;
			           ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:17:) in method Absolute
			return num * -1;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:24:
	  @ ensures \result >= 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method Absolute: long multiply overflow
			return num * -1;	
			           ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:28:) in method Absolute
			return num * -1;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:
	  @ ensures \result >= 0;
	    ^
7 verification failures

