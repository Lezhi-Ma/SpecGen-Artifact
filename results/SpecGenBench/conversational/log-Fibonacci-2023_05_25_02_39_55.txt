public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		fib = new long[2];
		fib[0] = 0;
		fib[1] = 1;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib;
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:14: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		fib = new long[2];
		fib[0] = 0;
		fib[1] = 1;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib;
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:14: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures \result.length == 2;
	  @ ensures \result[0] == 0;
	  @ ensures \result[1] == 1; @*/
	Fibonacci() {
		long[] temp = {0, 1};
		fib = temp;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib;
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:4: error: A \result expression may not be used in the specification of a method that returns void
	/*@ ensures \result.length == 2;
	             ^
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:5: error: A \result expression may not be used in the specification of a method that returns void
	  @ ensures \result[0] == 0;
	             ^
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:6: error: A \result expression may not be used in the specification of a method that returns void
	  @ ensures \result[1] == 1; @*/
	             ^
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:13: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
4 errors

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		long[] temp = {0, 1};
		fib = temp;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib;
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:13: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		long[] temp = {0, 1};
		fib = temp;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib[*];
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:13: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		long[] temp = {0, 1};
		fib = temp.clone();
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib[*];
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:13: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

public class Fibonacci {
   	private /*@ spec_public nullable @*/ long fib[];

	/*@ ensures fib.length == 2;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	Fibonacci() {
		fib = new long[2];
		fib[0] = 0;
		fib[1] = 1;
	}
	
	/*@ requires 2 <= size && size <= 93;
	  @ assignable fib;
	  @ ensures fib.length == size;
	  @ ensures fib[0] == 0;
	  @ ensures fib[1] == 1; @*/
	 Fibonacci(int size) {
		if (2 <= size && size <= 93) {
			fib = new long[size];	
			fib[0] = 0;
			fib[1] = 1;
		} else {
			throw new IllegalArgumentException();
		}
	}

	/*@ requires 0 <= index && index < fib.length;
	  @ ensures \result == fib[index]; @*/
	public /*@ pure @*/ long getFib(int index) {
		return fib[index];
	}

	/*@ assignable fib[*];
	  @ ensures (\forall int i; 2 <= i && i < fib.length; fib[i] == fib[i-1] + fib[i-2]); @*/
	public void fibCompute() {
		int index = 2;
      
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;                        
		}
	}
}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:14: error: Implicit references to 'this' are not permitted in constructor assignable clauses: fib
	  @ assignable fib;
	               ^
1 error

