import java.lang.Math;

class ComputeArea {
    //@ requires ax1 <= ax2 && ay1 <= ay2 && bx1 <= bx2 && by1 <= by2;
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
    public int computeOverlapArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int area1 = (ax2 - ax1) * (ay2 - ay1), area2 = (bx2 - bx1) * (by2 - by1);
        int overlapWidth = (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1), overlapHeight = (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1);
        int overlapArea = (overlapWidth>0?overlapWidth:0) * (overlapHeight>0?overlapHeight:0);
        return area1 + area2 - overlapArea;
    }
}
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:5:) in method computeOverlapArea
        return area1 + area2 - overlapArea;
        ^
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:10:
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
        ^
2 verification failures

import java.lang.Math;

class ComputeArea {
    //@ requires ax1 <= ax2 && ay1 <= ay2 && bx1 <= bx2 && by1 <= by2;
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
    public int computeOverlapArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int area1 = (ax2 - ax1) * (ay2 - ay1);
        int area2 = (bx2 - bx1) * (by2 - by1);
        int overlapWidth = (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1);
        int overlapHeight = (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1);
        int overlapArea = (overlapWidth>0?overlapWidth:0) * (overlapHeight>0?overlapHeight:0);
        return area1 + area2 - overlapArea;
    }
}
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:5:) in method computeOverlapArea
        return area1 + area2 - overlapArea;
        ^
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:12:
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
        ^
2 verification failures

import java.lang.Math;

class ComputeArea {
    //@ requires ax1 <= ax2 && ay1 <= ay2 && bx1 <= bx2 && by1 <= by2;
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
    public int computeOverlapArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int area1 = Math.abs(ax2 - ax1) * Math.abs(ay2 - ay1);
        int area2 = Math.abs(bx2 - bx1) * Math.abs(by2 - by1);
        int overlapWidth = Math.max(0, Math.min(ax2, bx2) - Math.max(ax1, bx1));
        int overlapHeight = Math.max(0, Math.min(ay2, by2) - Math.max(ay1, by1));
        int overlapArea = overlapWidth * overlapHeight;
        return area1 + area2 - overlapArea;
    }
}
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:5:) in method computeOverlapArea
        return area1 + area2 - overlapArea;
        ^
/home/max/Documents/JMLGPT/tmp/ComputeArea.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ComputeArea.java:12:
    //@ ensures \result == (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - ((ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) > 0 ? (ax2<bx2?ax2:bx2) - (ax1>bx1?ax1:bx1) : 0) * ((ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) > 0 ? (ay2<by2?ay2:by2) - (ay1>by1?ay1:by1) : 0);
        ^
2 verification failures

