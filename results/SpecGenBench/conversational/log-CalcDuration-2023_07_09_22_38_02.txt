class CalcDuration {
    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired >= 0;
        //@ maintaining (\forall int j; 0 <= j && j < i; timeSeries[j] < expired);
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }

    /*@ requires timeSeries != null;
        requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
        ensures \result >= 0;
        ensures \result == (\sum int i; 0 <= i && i < timeSeries.length; 
                            (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
    */
    public static int spec_calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:5: warning: A non-pure method is being called where it is not permitted: CalcDuration.spec_calcDuration(int[],int)
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
                                            ^
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
                            (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                    ^
  symbol:   variable expired
  location: class CalcDuration
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
                            (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                                                                            ^
  symbol:   variable expired
  location: class CalcDuration
2 errors
1 warning

java
class CalcDuration {
    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired >= 0;
        //@ maintaining (\forall int j; 0 <= j && j < i; timeSeries[j] < expired);
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }

    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == (\sum int i; 0 <= i && i < timeSeries.length; 
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
    public static /*@ pure @*/ int spec_calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:1: error: class, interface, enum, or record expected
java
^
1 error

java
public class CalcDuration {
    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired >= 0;
        //@ maintaining (\forall int j; 0 <= j && j < i; timeSeries[j] < expired);
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }

    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == (\sum int i; 0 <= i && i < timeSeries.length; 
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
    public static /*@ pure @*/ int spec_calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:1: error: class, interface, enum, or record expected
java
^
1 error

public class CalcDuration {
    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired >= 0;
        //@ maintaining (\forall int j; 0 <= j && j < i; timeSeries[j] < expired);
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }

    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == (\sum int i; 0 <= i && i < timeSeries.length; 
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
    public static /*@ pure @*/ int spec_calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                ^
  symbol:   variable expired
  location: class CalcDuration
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                                                                        ^
  symbol:   variable expired
  location: class CalcDuration
2 errors

public class CalcDuration {
    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == spec_calcDuration(timeSeries, duration);
    public int calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        //@ maintaining 0 <= i && i <= timeSeries.length;
        //@ maintaining ans >= 0;
        //@ maintaining expired >= 0;
        //@ maintaining (\forall int j; 0 <= j && j < i; timeSeries[j] < expired);
        //@ decreases timeSeries.length - i;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }

    //@ requires timeSeries != null;
    //@ requires \forall int i; 0 <= i && i < timeSeries.length; timeSeries[i] >= 0;
    //@ ensures \result >= 0;
    //@ ensures \result == (\sum int i; 0 <= i && i < timeSeries.length; 
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
    public static /*@ pure @*/ int spec_calcDuration(int[] timeSeries, int duration) {
        int ans = 0;
        int expired = 0;
        for (int i = 0; i < timeSeries.length; ++i) {
            if (timeSeries[i] >= expired) {
                ans += duration;
            } else {
                ans += timeSeries[i] + duration - expired;
            }
            expired = timeSeries[i] + duration;
        }
        return ans;
    }
}
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                ^
  symbol:   variable expired
  location: class CalcDuration
/home/max/Documents/JMLGPT/tmp/CalcDuration.java:29: error: cannot find symbol
    //@                 (timeSeries[i] >= (\old(expired)) ? duration : timeSeries[i] + duration - (\old(expired))));
                                                                                                        ^
  symbol:   variable expired
  location: class CalcDuration
2 errors

