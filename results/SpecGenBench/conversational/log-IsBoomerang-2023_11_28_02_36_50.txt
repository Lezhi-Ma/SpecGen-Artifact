class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result == (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        return v1[0] * v2[1] - v1[1] * v2[0] != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) != 0;
                        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (points[1][0] - points[0][0]) * (points[2][1] - points[0][1]) - (points[1][1] - points[0][1]) * (points[2][0] - points[0][0]) != 0;
                                                                                                                                                         ^
2 errors

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result == ((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        return ((v1[0] * v2[1]) - (v1[1] * v2[0])) != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])) != 0;
                        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == ((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])) != 0;
                                                                                                                                                             ^
2 errors

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        return (((v1[0] * v2[1]) - (v1[1] * v2[0]))) != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
                        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
                                                                                                                                                               ^
2 errors

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        return (((v1[0] * v2[1]) - (v1[1] * v2[0]))) != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:7: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return (((v1[0] * v2[1]) - (v1[1] * v2[0]))) != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:7:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
2 verification failures

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        int result = ((v1[0] * v2[1]) - (v1[1] * v2[0]));
        return result != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
                        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: error: incomparable types: boolean and int
    //@ ensures \result == (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
                                                                                                                                                               ^
2 errors

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        int result = ((v1[0] * v2[1]) - (v1[1] * v2[0]));
        return result != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return result != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
2 verification failures

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        int[] v1 = {points[1][0] - points[0][0], points[1][1] - points[0][1]};
        int[] v2 = {points[2][0] - points[0][0], points[2][1] - points[0][1]};
        int result = ((v1[0] * v2[1]) - (v1[1] * v2[0]));
        return result != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return result != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:8:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
2 verification failures

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
2 verification failures

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    public boolean isBoomerang(int[][] points) {
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) - ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0]))) != 0;
        ^
2 verification failures

class IsBoomerang {
    //@ requires points.length == 3 && points[0].length == 2 && points[1].length == 2 && points[2].length == 2;
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) != ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])));
    public boolean isBoomerang(int[][] points) {
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) != ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])));
    }
}
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3:) in method isBoomerang
        return (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) != ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])));
        ^
/home/max/Documents/JMLGPT/tmp/IsBoomerang.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/IsBoomerang.java:5:
    //@ ensures \result <==> (((points[1][0] - points[0][0]) * (points[2][1] - points[0][1])) != ((points[1][1] - points[0][1]) * (points[2][0] - points[0][0])));
        ^
2 verification failures

