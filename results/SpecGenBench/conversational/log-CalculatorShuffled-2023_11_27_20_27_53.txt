public class CalculatorShuffled {
    //@ requires operator == '-' || operator == '*' || operator == '/' || operator == '+';
    //@ ensures \result == num1 * num2 && operator == '-';
    //@ ensures \result == num1 / num2 && operator == '*';
    //@ ensures \result == num1 + num2 && operator == '/';
    //@ ensures \result == num1 - num2 && operator == '+';
    //@ ensures \result == -1 && (operator != '-' && operator != '*' && operator != '/' && operator != '+');
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '-':
            	output = num1 * num2;
                break;

            case '*':
            	output = num1 / num2;
                break;

            case '/':
            	output = num1 + num2;
                break;

            case '+':
            	output = num1 - num2;
		break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:4: verify: The prover cannot establish an assertion (UndefinedDivideByZero) in method calculate
    //@ ensures \result == num1 / num2 && operator == '*';
                                ^
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:33: verify: Associated method exit
        return output;
        ^
2 verification failures

public class CalculatorShuffled {
    //@ requires operator == '-' || operator == '*' || operator == '/' || operator == '+';
    //@ ensures \result == num1 * num2 && operator == '-';
    //@ ensures num2 != 0 ==> \result == num1 / num2 && operator == '*';
    //@ ensures \result == num1 + num2 && operator == '/';
    //@ ensures \result == num1 - num2 && operator == '+';
    //@ ensures \result == -1 && (operator != '-' && operator != '*' && operator != '/' && operator != '+');
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '-':
            	output = num1 * num2;
                break;

            case '*':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		output = 0; // or throw an exception
            	}
                break;

            case '/':
            	output = num1 + num2;
                break;

            case '+':
            	output = num1 - num2;
		break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:37: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:5:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:37:
    //@ ensures \result == num1 + num2 && operator == '/';
        ^
2 verification failures

public class CalculatorShuffled {
    //@ requires operator == '-' || operator == '*' || operator == '/' || operator == '+';
    //@ ensures \result == num1 * num2 && operator == '-';
    //@ requires num2 != 0;
    //@ ensures \result == num1 / num2 && operator == '*';
    //@ ensures \result == num1 + num2 && operator == '/';
    //@ ensures \result == num1 - num2 && operator == '+';
    //@ ensures \result == -1 && (operator != '-' && operator != '*' && operator != '/' && operator != '+');
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '-':
            	output = num1 * num2;
                break;

            case '*':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		output = 0; // or throw an exception
            	}
                break;

            case '/':
            	output = num1 + num2;
                break;

            case '+':
            	output = num1 - num2;
		break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:5:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/CalculatorShuffled.java:38:
    //@ ensures \result == num1 / num2 && operator == '*';
        ^
2 verification failures

public class CalculatorShuffled {
    //@ requires operator == '-' || operator == '*' || operator == '/' || operator == '+';
    //@ ensures \result == num1 * num2 && operator == '-';
    //@ requires num2 != 0;
    //@ ensures \result == num1 / num2 && operator == '*';
    //@ ensures \result == num1 + num2 && operator == '/';
    //@ ensures \result == num1 - num2 && operator == '+';
    //@ ensures \result == -1 && (operator != '-' && operator != '*' && operator != '/' && operator != '+');
    public int calculate(int num1, int num2, char operator) {

        int output;

        switch (operator)
        {
            case '-':
            	output = num1 * num2;
                break;

            case '*':
            	if (num2 != 0) {
            		output = num1 / num2;
            	} else {
            		throw new ArithmeticException("Cannot divide by zero");
            	}
                break;

            case '/':
            	output = num1 + num2;
                break;

            case '+':
            	output = num1 - num2;
		break;

            default:
                return -1;
        }
        return output;
    }
}
