public class Return100Nested {
    //@ ensures \result == 100;
    public static int return100 () {
        int res = 0;
        //@ maintaining res == i*j;
        //@ maintaining 0 <= i && i <= 10;
        //@ maintaining 0 <= j && j <= 10;
        //@ decreases 10 - i;
        for(int i = 0; i < 10; i++) {
            //@ maintaining res == i*j;
            //@ maintaining 0 <= j && j <= 10;
            //@ decreases 10 - j;
            for(int j = 0; j < 10; j++) {
                res = res + 1;
            }
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/Return100Nested.java:5: error: cannot find symbol
        //@ maintaining res == i*j;
                                 ^
  symbol:   variable j
  location: class Return100Nested
/home/max/Documents/JMLGPT/tmp/Return100Nested.java:7: error: cannot find symbol
        //@ maintaining 0 <= j && j <= 10;
                             ^
  symbol:   variable j
  location: class Return100Nested
/home/max/Documents/JMLGPT/tmp/Return100Nested.java:7: error: cannot find symbol
        //@ maintaining 0 <= j && j <= 10;
                                  ^
  symbol:   variable j
  location: class Return100Nested
3 errors

public class Return100Nested {
    //@ ensures \result == 100;
    public static int return100 () {
        int res = 0;
        //@ maintaining res == i*j;
        //@ maintaining 0 <= i && i <= 10;
        //@ decreases 10 - i;
        for(int i = 0; i < 10; i++) {
            //@ maintaining res == i*j;
            //@ maintaining 0 <= j && j <= 10;
            //@ decreases 10 - j;
            for(int j = 0; j < 10; j++) {
                res = res + 1;
            }
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/Return100Nested.java:5: error: cannot find symbol
        //@ maintaining res == i*j;
                                 ^
  symbol:   variable j
  location: class Return100Nested
1 error

public class Return100Nested {
    //@ ensures \result == 100;
    public static int return100 () {
        int res = 0;
        //@ maintaining res == i*10;
        //@ maintaining 0 <= i && i <= 10;
        //@ decreases 10 - i;
        for(int i = 0; i < 10; i++) {
            res = res + 10;
        }
        return res;
    }
}

