import java.lang.Math;

class ComputeArea {
    //@ requires ax1 < ax2 && ay1 < ay2 && bx1 < bx2 && by1 < by2;
    //@ ensures \result == spec_computeOverlapArea(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2);
    public int computeOverlapArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        int area1 = (ax2 - ax1) * (ay2 - ay1), area2 = (bx2 - bx1) * (by2 - by1);
        int overlapWidth = Math.min(ax2, bx2) - Math.max(ax1, bx1), overlapHeight = Math.min(ay2, by2) - Math.max(ay1, by1);
        int overlapArea = Math.max(overlapWidth, 0) * Math.max(overlapHeight, 0);
        return area1 + area2 - overlapArea;
    }
    
    /*@ requires ax1 < ax2 && ay1 < ay2 && bx1 < bx2 && by1 < by2;
      @ ensures \result == (Math.min(ax2, bx2) - Math.max(ax1, bx1)) * (Math.min(ay2, by2) - Math.max(ay1, by1));
    */
    public static int spec_computeOverlapArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        return (Math.min(ax2, bx2) - Math.max(ax1, bx1)) * (Math.min(ay2, by2) - Math.max(ay1, by1));
    }
}
