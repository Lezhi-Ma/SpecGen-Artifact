class NumberOfCuts {
    /*@ requires n > 0;
      @ ensures \result >= 0;
      @ ensures n == 1 ==> \result == 0;
      @ ensures n % 2 == 0 ==> \result == n / 2;
      @ ensures n % 2 != 0 ==> \result == n;
      @*/
    public int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:6:) in method numberOfCuts
            return 0;
            ^
/home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:10:
      @ ensures n % 2 != 0 ==> \result == n;
        ^
2 verification failures

class NumberOfCuts {
    /*@ requires n > 0;
      @ ensures \result >= 0;
      @ ensures n == 1 ==> \result == 0;
      @ ensures n % 2 == 0 ==> \result == n / 2;
      @ ensures n % 2 != 0 ==> \result == (n + 1) / 2;
      @*/
    public int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return (n + 1) / 2;
    }
}
/home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:15: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method numberOfCuts: overflow in int sum
        return (n + 1) / 2;
                  ^
/home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:3:) in method numberOfCuts
        return (n + 1) / 2;
        ^
/home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/NumberOfCuts.java:15:
      @ ensures \result >= 0;
        ^
3 verification failures

