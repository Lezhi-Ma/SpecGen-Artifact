public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		if (num < 0)
			return num;
		else
			return -num;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

public class NegAbs {
	
	//@ requires Integer.MIN_VALUE <= num && num <= Integer.MAX_VALUE;
	//@ ensures \result == (num < 0) ? num : -num;
	public int negAbs(int num) {
		int result;
		if (num < 0)
			result = num;
		else
			result = -num;
		return result;
	}

}
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incomparable types: int and boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                    ^
/home/max/Documents/JMLGPT/tmp/NegAbs.java:4: error: incompatible types: int cannot be converted to boolean
	//@ ensures \result == (num < 0) ? num : -num;
	                                 ^
2 errors

