public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:28: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method calculate
		output = num1 % num2;
		              ^
1 verification failure

public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ requires num2 != 0;
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Calculator.java:5:) in method calculate
        return output;
        ^
/home/max/Documents/JMLGPT/tmp/Calculator.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Calculator.java:35:
      @ ensures \result == num1 + num2;
        ^
2 verification failures

public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ requires num2 != 0;
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        //@ assert output == num1 + num2;
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:35: verify: The prover cannot establish an assertion (Assert) in method calculate
        //@ assert output == num1 + num2;
            ^
1 verification failure

public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ requires num2 != 0;
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        //@ assert output == num1 + num2 : "Output should be equal to the sum of num1 and num2";
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:35: verify: The prover cannot establish an assertion (Assert) in method calculate: Output should be equal to the sum of num1 and num2
        //@ assert output == num1 + num2 : "Output should be equal to the sum of num1 and num2";
            ^
1 verification failure

public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ requires num2 != 0;
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        //@ assert output == num1 + num2;
        return output;
    }
}
/home/max/Documents/JMLGPT/tmp/Calculator.java:35: verify: The prover cannot establish an assertion (Assert) in method calculate
        //@ assert output == num1 + num2;
            ^
1 verification failure

public class Calculator {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%';
      @ requires operator != '/';
      @ requires num2 != 0;
      @ ensures \result == num1 + num2;
      @*/
    public /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;

        switch (operator)
        {
            case '+':
            	output = num1 + num2;
                break;

            case '-':
            	output = num1 - num2;
                break;

            case '*':
            	output = num1 * num2;
                break;

            case '/':
            	output = num1 / num2;
		break;

	    case '%':
		output = num1 % num2;
                break;

            default:
                return -1;
        }
        //@ assert output == num1 + num2 : "Output should be equal to the sum of num1 and num2";
        return output;
    }
}
