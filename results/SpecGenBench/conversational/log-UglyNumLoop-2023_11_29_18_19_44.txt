class UglyNum {
    //@ ensures \result <==> (n > 0 && (\forall int i; 0 <= i && i < n; n%2 != 0 && n%3 != 0 && n%5 != 0) && n == 1);
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 0 <= i && i < n; n%2 != 0 && n%3 != 0 && n%5 != 0);
        //@ decreases n;
        while (n % 2 == 0) {
            n /= 2;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 0 <= i && i < n; n%3 != 0 && n%5 != 0);
        //@ decreases n;
        while (n % 3 == 0) {
            n /= 3;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 0 <= i && i < n; n%5 != 0);
        //@ decreases n;
        while (n % 5 == 0) {
            n /= 5;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method isUgly
        //@ maintaining (\forall int i; 0 <= i && i < n; n%2 != 0 && n%3 != 0 && n%5 != 0);
            ^
1 verification failure

class UglyNum {
    //@ ensures \result <==> (n > 0 && (\forall int i; 2 <= i && i <= n; n%i != 0) && (n == 1 || n == 2 || n == 3 || n == 5));
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 2 <= i && i <= n; n%i != 0);
        //@ decreases n;
        while (n % 2 == 0) {
            n /= 2;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 2 <= i && i <= n; n%i != 0);
        //@ decreases n;
        while (n % 3 == 0) {
            n /= 3;
        }
        //@ maintaining n > 0;
        //@ maintaining (\forall int i; 2 <= i && i <= n; n%i != 0);
        //@ decreases n;
        while (n % 5 == 0) {
            n /= 5;
        }
        return n == 1;
    }
}

aborted
