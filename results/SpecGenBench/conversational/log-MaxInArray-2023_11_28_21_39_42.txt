class MaxInArray {
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int i; 0 <= i && i < arr.length; arr[\result] >= arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:2:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:13:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; \result == arr[i]);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

class MaxInArray {
    //@ requires arr != null;
    //@ ensures arr.length == 0 ==> \result == -1;
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining 0 <= i && i <= arr.length;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:4:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures arr.length > 0 ==> (\exists int i; 0 <= i && i < arr.length; arr[i] == \result);
        ^
2 verification failures

