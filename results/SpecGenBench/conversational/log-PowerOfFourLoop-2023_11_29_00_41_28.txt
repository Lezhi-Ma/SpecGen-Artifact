class PowerOfTwoLoop {
    //@ ensures \result == true <==> n > 0 && (\exists int i; 0 <= i; n == 4^i);
    //@ ensures \result == false <==> n <= 0 || (\forall int i; 0 <= i; n != 4^i);
    public boolean isPowerOfTwo(int n) {
        if(n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ maintaining (\exists int i; 0 <= i; n == 4^i);
        //@ decreases n;
        while (n % 4 == 0) {
            n /= 4;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfFourLoop.java:2: error: bad operand types for binary operator '^'
    //@ ensures \result == true <==> n > 0 && (\exists int i; 0 <= i; n == 4^i);
                                                                            ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/PowerOfFourLoop.java:3: error: bad operand types for binary operator '^'
    //@ ensures \result == false <==> n <= 0 || (\forall int i; 0 <= i; n != 4^i);
                                                                              ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/PowerOfFourLoop.java:9: error: bad operand types for binary operator '^'
        //@ maintaining (\exists int i; 0 <= i; n == 4^i);
                                                      ^
  first type:  boolean
  second type: int
3 errors

