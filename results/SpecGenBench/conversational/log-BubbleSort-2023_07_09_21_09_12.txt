public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i; 0 <= i && i < n-1; arr[i] <= arr[i+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining (\forall int j; 0 <= j && j < n-i-1; arr[j] <= arr[j+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: error: variable i is already defined in method bubbleSort(int[])
        //@ maintaining (\forall int i; 0 <= i && i < n-1; arr[i] <= arr[i+1]);
                                     ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:20: error: variable j is already defined in method bubbleSort(int[])
            //@ maintaining (\forall int j; 0 <= j && j < n-i-1; arr[j] <= arr[j+1]);
                                         ^
2 errors

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

public class BubbleSort { 
    //@ requires array != null;
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
    void swap(int x, int y,  int array[]) {
	   int temp;     
       temp = array[x];
       array[x] = array[y];
       array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length-1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
        //@ decreasing n-i-1;
        for (int i = 0; i < n-1; i++) {	
            //@ maintaining (\forall int j1; 0 <= j1 && j1 < n-i-1; arr[j1] <= arr[j1+1]);
            //@ decreasing n-i-1-j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
		            swap(j, j + 1, arr); 
                } 
	        }
	    } 
	    return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:16: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining (\forall int i1; 0 <= i1 && i1 < n-1; arr[i1] <= arr[i1+1]);
            ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:4: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:3:) in method swap
    void swap(int x, int y,  int array[]) {
         ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/BubbleSort.java:4:
    //@ ensures (\forall int i; 0 <= i && i < array.length-1; array[i] <= array[i+1]);
        ^
3 verification failures

