
public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> x.length == 0;
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] != 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}


/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:5:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22:
    //@ ensures \result == -1 <==> x.length == 0;
        ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:7:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] != 0);
        ^
4 verification failures


public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] != 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}


/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:7:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:22:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] != 0);
        ^
2 verification failures



public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}



/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:8:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:23:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures



public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}



/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:8:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:23:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures




public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}




/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:9:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:24:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures




public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}




/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:9:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:24:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures





public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}





/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:25: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:10:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:25:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures






public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}





/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:11:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:26:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures







public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}






/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:27: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:12:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:27:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures








public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:13:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:28:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures









public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures









public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}








/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures









public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures










public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:15:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:30:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures











public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}








/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures











public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}








/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures












public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}









/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:17:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:32:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures













public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}










/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:18:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:33:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures









public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:29:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures











public class FindFirstZero {

    //@ requires x.length >= 0;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < x.length; x[i] != 0);
    //@ ensures 0 <= \result && \result < x.length ==> x[\result] == 0;
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
    public static int FindFirstZero(int[] x) {
        if (x.length == 0) {
            return -1;
        } else {
            int index = 0;
            //@ maintaining 0 <= index && index <= x.length;
            //@ maintaining (\forall int i; 0 <= i && i < index; x[i] != 0);
            //@ decreases x.length - index;
            while (x.length - index > 0 && x[index] != 0) {
                index = index + 1;
            }
            if (x.length - index == 0) {
                index = -1;
            }
            return index;
        }
    }
}







/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16:) in method FindFirstZero
            return index;
            ^
/home/max/Documents/JMLGPT/tmp/FindFirstZero.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/FindFirstZero.java:31:
    //@ ensures \result == -1 || (\exists int i; 0 <= i && i < \result; x[i] == 0);
        ^
2 verification failures

