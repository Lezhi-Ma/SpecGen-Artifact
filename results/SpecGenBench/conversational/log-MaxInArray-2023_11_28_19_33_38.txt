class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int i; 0 <= i && i < arr.length; arr[\result] >= arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int i; 0 <= i && i < a.length; res >= a[i]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:8: error: variable i is already defined in method maxElementInArray(int[])
        //@ maintaining (\forall int i; 0 <= i && i < a.length; res >= a[i]);
                                     ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:8: error: cannot find symbol
        //@ maintaining (\forall int i; 0 <= i && i < a.length; res >= a[i]);
                                                      ^
  symbol:   variable a
  location: class MaxInArray
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:8: error: cannot find symbol
        //@ maintaining (\forall int i; 0 <= i && i < a.length; res >= a[i]);
                                                                       ^
  symbol:   variable a
  location: class MaxInArray
3 errors

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int i; 0 <= i && i < arr.length; arr[\result] >= arr[i]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int i; 0 <= i && i < arr.length; res >= arr[i]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:8: error: variable i is already defined in method maxElementInArray(int[])
        //@ maintaining (\forall int i; 0 <= i && i < arr.length; res >= arr[i]);
                                     ^
1 error

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method maxElementInArray
        //@ maintaining (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
            ^
1 verification failure

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:11: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method maxElementInArray
            res = ((arr[i] > res) ? arr[i] : res);
                       ^
1 verification failure

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:14:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        //@ assume (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:15:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        //@ assert (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:15:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        //@ assert (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:15:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        //@ assert (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:15:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

class MaxInArray {
    //@ requires 0 <= arr.length && arr.length <= Integer.MAX_VALUE;
    //@ ensures \result == -1 <==> arr.length == 0;
    //@ ensures -1 < \result ==> (\forall int j; 0 <= j && j < arr.length; arr[\result] >= arr[j]);
    public int maxElementInArray(int[] arr) {
        if (arr.length == 0) return -1;
        int res = Integer.MIN_VALUE;
        //@ maintaining (\forall int j; 0 <= j && j < i; res >= arr[j]);
        //@ decreases arr.length - i;
        for(int i = 0; i < arr.length; i++) {
            //@ assume i >= 0;
            res = ((arr[i] > res) ? arr[i] : res);
        }
        //@ assert (\forall int j; 0 <= j && j < arr.length; res >= arr[j]);
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:3:) in method maxElementInArray
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MaxInArray.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MaxInArray.java:15:
    //@ ensures \result == -1 <==> arr.length == 0;
        ^
2 verification failures

