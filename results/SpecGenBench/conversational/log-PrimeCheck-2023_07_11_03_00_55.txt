class PrimeCheck {
   
   //@ ensures \result <==> (\forall int i; 2 <= i && i <= a/2; a%i != 0);
   public boolean isPrime(int a) {
	
	int i = 2;
	int mid = a/2;

	//@ maintaining 2 <= i && i <= mid;
	//@ maintaining (\forall int j; 2 <= j && j < i; a%j != 0);
	//@ decreases mid - i;
	while (i <= mid) {
	   if (a%i == 0)
		return false;
	   i++;
	}
	return true;
   }
}
error: An error while executing a proof script for isPrime: (error "Solver has unexpectedly terminated")
1 error

class PrimeCheck {
   
   //@ ensures \result <==> (\forall int i; 2 <= i && i <= a/2; a%i != 0);
   public boolean isPrime(int a) {
	
	int i = 2;
	int mid = a/2;

	//@ maintaining 2 <= i && i <= mid;
	//@ maintaining (\forall int j; 2 <= j && j < i; a%j != 0);
	//@ decreases mid - i;
	while (i <= mid) {
	   //@ assert (\forall int j; 2 <= j && j < i; a%j != 0);
	   if (a%i == 0)
		return false;
	   i++;
	}
	return true;
   }
}
error: An error while executing a proof script for isPrime: (error "Solver has unexpectedly terminated")
1 error

class PrimeCheck {
   
   //@ ensures \result <==> (\forall int i; 2 <= i && i <= a/2; a%i != 0);
   public boolean isPrime(int a) {
	
	int i = 2;
	int mid = a/2;

	//@ maintaining 2 <= i && i <= mid;
	//@ maintaining (\forall int j; 2 <= j && j < i; a%j != 0);
	//@ decreases mid - i;
	while (i <= mid) {
	   //@ assert (\forall int j; 2 <= j && j < i; a%j != 0);
	   if (a%i == 0)
		return false;
	   i++;
	}
	return true;
   }
}
error: An error while executing a proof script for isPrime: (error "Solver has unexpectedly terminated")
1 error

class PrimeCheck {
   
   //@ ensures \result <==> (\forall int i; 2 <= i && i <= a/2; a%i != 0);
   public boolean isPrime(int a) {
	
	int i = 2;
	int mid = a/2;

	//@ maintaining 2 <= i && i <= mid;
	//@ maintaining (\forall int j; 2 <= j && j < i; a%j != 0);
	//@ decreases mid - i;
	while (i <= mid) {
	   //@ assert (\forall int j; 2 <= j && j < i; a%j != 0);
	   if (a%i == 0)
		return false;
	   i++;
	}
	return true;
   }
}
