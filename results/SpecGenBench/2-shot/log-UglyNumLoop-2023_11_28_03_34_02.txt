class UglyNum {
    //@ requires Integer.MIN_VALUE <= n && n <= Integer.MAX_VALUE;
    //@ ensures \result == (n > 0 && n % 2 == 0 ==> (\exists int i; 0 <= i; n == 2^i)) && (n > 0 && n % 3 == 0 ==> (\exists int i; 0 <= i; n == 3^i)) && (n > 0 && n % 5 == 0 ==> (\exists int i; 0 <= i; n == 5^i));
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            n /= 2;
        }
        while (n % 3 == 0) {
            n /= 3;
        }
        while (n % 5 == 0) {
            n /= 5;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: error: bad operand types for binary operator '^'
    //@ ensures \result == (n > 0 && n % 2 == 0 ==> (\exists int i; 0 <= i; n == 2^i)) && (n > 0 && n % 3 == 0 ==> (\exists int i; 0 <= i; n == 3^i)) && (n > 0 && n % 5 == 0 ==> (\exists int i; 0 <= i; n == 5^i));
                                                                                  ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: error: bad operand types for binary operator '^'
    //@ ensures \result == (n > 0 && n % 2 == 0 ==> (\exists int i; 0 <= i; n == 2^i)) && (n > 0 && n % 3 == 0 ==> (\exists int i; 0 <= i; n == 3^i)) && (n > 0 && n % 5 == 0 ==> (\exists int i; 0 <= i; n == 5^i));
                                                                                                                                                 ^
  first type:  boolean
  second type: int
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: error: bad operand types for binary operator '^'
    //@ ensures \result == (n > 0 && n % 2 == 0 ==> (\exists int i; 0 <= i; n == 2^i)) && (n > 0 && n % 3 == 0 ==> (\exists int i; 0 <= i; n == 3^i)) && (n > 0 && n % 5 == 0 ==> (\exists int i; 0 <= i; n == 5^i));
                                                                                                                                                                                                                ^
  first type:  boolean
  second type: int
3 errors

