import java.util.Arrays;

class LargestPerimeter {
    //@ requires A != null;
    //@ ensures \result >= 0;
    //@ ensures \result == 0 || (\exists int i, j, k; 0 <= i && i < j && j < k && k < A.length; A[i] + A[j] > A[k] && \result == A[i] + A[j] + A[k]);
    public int largestPerimeter(int[] A) {
        Arrays.sort(A);
        for (int i = A.length - 1; i >= 2; --i) {
            //@ invariant 2 <= i && i < A.length;
            //@ invariant (\forall int x, y, z; 0 <= x && x < y && y < z && z < A.length && z <= i; A[x] + A[y] <= A[z]);
            if (A[i - 2] + A[i - 1] > A[i]) {
                return A[i - 2] + A[i - 1] + A[i];
            }
        }
        return 0;
    }
}
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:10: error: not a statement
            //@ invariant 2 <= i && i < A.length;
                ^
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:10: error: ';' expected
            //@ invariant 2 <= i && i < A.length;
                         ^
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:10: error: not a statement
            //@ invariant 2 <= i && i < A.length;
                                 ^
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:10: error: Expected a declaration or a JML construct inside the JML annotation here
            //@ invariant 2 <= i && i < A.length;
                               ^
/home/max/Documents/JMLGPT/tmp/LargestPerimeter.java:11: error: The type or expression near here is invalid (or not implemented): ( token ? in JmlParser.term3())
            //@ invariant (\forall int x, y, z; 0 <= x && x < y && y < z && z < A.length && z <= i; A[x] + A[y] <= A[z]);
                                                                                                                         ^
5 errors

