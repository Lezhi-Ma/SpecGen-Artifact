public class MulNested {
    //@ requires Integer.MIN_VALUE <= x && x <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= y && y <= Integer.MAX_VALUE;
    //@ ensures \result == x * y;
    public static int mulNested(int x, int y) {
        int res = 0, m = x, n = y, sign = 1;
        if(x < 0){
            m = -x;
            sign = -sign;
        }
        if(y < 0){
            n = -y;
            sign = -sign;
        }
        //@ maintaining 0 <= res && res <= m * n;
        //@ maintaining (\forall int i; 0 <= i && i < m; (\forall int j; 0 <= j && j < n; res == i * n + j));
        //@ decreases m - i;
        for(int i = 0; i < m; i++) {
            //@ maintaining 0 <= res && res <= i * n;
            //@ maintaining (\forall int j; 0 <= j && j < n; res == i * n + j);
            //@ decreases n - j;
            for(int j = 0; j < n; j++) {
                res = res + 1;
            }
        }
        return sign * res;
    }
}
/home/max/Documents/JMLGPT/tmp/MulNested.java:16: error: variable i is already defined in method mulNested(int,int)
        //@ maintaining (\forall int i; 0 <= i && i < m; (\forall int j; 0 <= j && j < n; res == i * n + j));
                                     ^
/home/max/Documents/JMLGPT/tmp/MulNested.java:20: error: variable j is already defined in method mulNested(int,int)
            //@ maintaining (\forall int j; 0 <= j && j < n; res == i * n + j);
                                         ^
2 errors

