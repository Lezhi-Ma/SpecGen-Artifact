public class MulLoop {

	/*@ public normal_behavior
	  @    requires (int)Integer.MIN_VALUE <= a && a <= (int)Integer.MAX_VALUE;
	  @    requires (int)Integer.MIN_VALUE <= b && b <= (int)Integer.MAX_VALUE;
	  @    ensures \result == a * b;
	  @*/
	public static int mulLoop(int a, int b) {
        int res = 0;
        if (b >= 0) {
	    //@ maintaining 0 <= i && i <= b;
	    //@ maintaining res == a * i;
	    //@ decreases b - i;
            for(int i = 0; i < b; i++) {
                res = res + a;
            }
        } else {
	    //@ maintaining 0 <= i && i <= -b;
	    //@ maintaining res == a * -i;
	    //@ decreases -b - i;
            for(int i = 0; i < -b; i++) {
                res = res - a;
            }
        }
        return res;
    }

}
/home/max/Documents/JMLGPT/tmp/MulLoop.java:25: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/MulLoop.java:6:) in method mulLoop
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/MulLoop.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/MulLoop.java:25:
	  @    ensures \result == a * b;
	       ^
2 verification failures

