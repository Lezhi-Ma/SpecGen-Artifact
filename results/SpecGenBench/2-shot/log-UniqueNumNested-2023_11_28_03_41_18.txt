public class UniqueNumNested {

    //@ requires arr != null;
    //@ ensures \result >= -1 && \result < arr.length;
    //@ ensures (\forall int i; 0 <= i < \result; (\forall int j; i+1 <= j < \result; arr[i] != arr[j]));
    //@ ensures \result == -1 ==> (\forall int i; 0 <= i < arr.length; (\forall int j; i+1 <= j < arr.length; arr[i] != arr[j]));
    public static int uniqueNum(int[] arr) {
        int i, j;
        for (i = 0; i < arr.length; ++i) {
            for (j = i + 1; j < arr.length; ++j) {
                if(arr[i] == arr[j])
                    break;
            }
            if(j == arr.length)
                return i;
        }
        return -1;
    }
    
}
/home/max/Documents/JMLGPT/tmp/UniqueNumNested.java:11: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method uniqueNum
                if(arr[i] == arr[j])
                      ^
1 verification failure

