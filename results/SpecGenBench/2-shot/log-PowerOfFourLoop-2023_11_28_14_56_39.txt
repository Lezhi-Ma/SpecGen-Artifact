class PowerOfTwoLoop {
    //@ requires n >= Integer.MIN_VALUE && n <= Integer.MAX_VALUE;
    //@ ensures \result == (n > 0 && (n & (n - 1)) == 0);
    public boolean isPowerOfTwo(int n) {
        //@ assert \result == (n > 0 && (n & (n - 1)) == 0);
        if(n <= 0) {
            return false;
        }
        //@ maintaining n > 0;
        //@ maintaining (n & (n - 1)) == 0 ==> n == 1;
        //@ decreases n;
        while (n % 4 == 0) {
            n /= 4;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfFourLoop.java:5: error: A \result expression may not be in a assert clause
        //@ assert \result == (n > 0 && (n & (n - 1)) == 0);
                    ^
1 error

