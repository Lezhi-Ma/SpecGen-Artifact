public class ThreeConsecutiveOdds {

    //@ requires 0 <= arr.length;
    //@ ensures \result ==> (\exists int i; 0 <= i && i <= arr.length - 3; (arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0);
    //@ ensures !\result;
    public boolean threeConsecutiveOdds(int[] arr) {
        int n = arr.length;

        //@ maintaining 0 <= i && i <= n - 3;
        //@ maintaining \result ==> (\exists int j; 0 <= j && j <= i; (arr[j] & 1) != 0 && (arr[j + 1] & 1) != 0 && (arr[j + 2] & 1) != 0);
        //@ decreases n - i;
        for (int i = 0; i <= n - 3; ++i) {
            if ((arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0) {
                return true;
            }
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/ThreeConsecutiveOdds.java:10: error: A \result expression may not be in a loop_invariant clause
        //@ maintaining \result ==> (\exists int j; 0 <= j && j <= i; (arr[j] & 1) != 0 && (arr[j + 1] & 1) != 0 && (arr[j + 2] & 1) != 0);
                         ^
1 error

