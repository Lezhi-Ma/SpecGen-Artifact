public class StrPalindrome {
   
   //@ requires str != null;
   //@ ensures \result == true <==> (\forall int i; 0 <= i && i < str.length(); str.charAt(i) == str.charAt(str.length() - 1 - i));
   public boolean isPalindrome(String str) {
      String reverse = "";
      
      int length = str.length();

      //@ maintaining 0 <= i && i <= length;
      //@ maintaining reverse.equals(\old(reverse) + \old(str).charAt(\old(length) - 1 - \old(i)));
      //@ decreases i;
      for (int i = length - 1; 0 <= i; i--) {
         reverse = reverse + str.charAt(i);
      }
      
      return reverse.equals(str);
   }

}
/home/max/Documents/JMLGPT/tmp/StrPalindrome.java:11: error: cannot find symbol
      //@ maintaining reverse.equals(\old(reverse) + \old(str).charAt(\old(length) - 1 - \old(i)));
                                          ^
  symbol:   variable reverse
  location: class StrPalindrome
/home/max/Documents/JMLGPT/tmp/StrPalindrome.java:11: error: cannot find symbol
      //@ maintaining reverse.equals(\old(reverse) + \old(str).charAt(\old(length) - 1 - \old(i)));
                                                                           ^
  symbol:   variable length
  location: class StrPalindrome
/home/max/Documents/JMLGPT/tmp/StrPalindrome.java:11: error: cannot find symbol
      //@ maintaining reverse.equals(\old(reverse) + \old(str).charAt(\old(length) - 1 - \old(i)));
                                                                                              ^
  symbol:   variable i
  location: class StrPalindrome
3 errors

