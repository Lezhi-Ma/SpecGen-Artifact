public class SelectionSort {

    /*@ requires arr != null;
      @ ensures \forall int i; 0 <= i && i < arr.length; \forall int j; i <= j && j < arr.length; arr[i] <= arr[j];
      @ ensures (\forall int i; 0 <= i && i < arr.length; (\forall int j; i <= j && j < arr.length; arr[i] <= arr[j])) && (\forall int i; 0 <= i && i < arr.length; (\forall int j; i <= j && j < arr.length; arr[j] <= arr[i]));
      @ assignable arr[*];
      @*/
    public static void selectionSort(int[] arr){  
        //@ maintaining 0 <= i && i < arr.length - 1;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; i + 1 <= j && j < arr.length; arr[k] <= arr[j]));
        //@ maintaining (\forall int k; i + 1 <= k && k < arr.length; (\forall int j; i + 1 <= j && j < arr.length; arr[k] <= arr[j]));
        //@ decreases arr.length - i;
        for (int i = 0; i < arr.length - 1; i++)  
        {  
            int index = i;  
            //@ maintaining i + 1 <= j && j < arr.length;
            //@ maintaining (\forall int k; i <= k && k < j; arr[k] <= arr[j]);
            //@ maintaining (\forall int k; j <= k && k < arr.length; arr[j] <= arr[k]);
            //@ decreases arr.length - j;
            for (int j = i + 1; j < arr.length; j++){  
                if (arr[j] < arr[index]){  
                    index = j;
                }  
            }  
            int smallerNumber = arr[index];   
            arr[index] = arr[i];  
            arr[i] = smallerNumber;  
        }  
    }
    
}
/home/max/Documents/JMLGPT/tmp/SelectionSort.java:11: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method selectionSort
        //@ maintaining (\forall int k; i + 1 <= k && k < arr.length; (\forall int j; i + 1 <= j && j < arr.length; arr[k] <= arr[j]));
            ^
1 verification failure

