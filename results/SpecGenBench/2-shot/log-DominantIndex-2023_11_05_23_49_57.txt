class DominantIndex {
    
    //@ requires nums != null && nums.length > 0;
    //@ ensures \result >= -1 && \result < nums.length;
    //@ ensures (\forall int i; 0 <= i && i < nums.length; nums[i] <= nums[\result] || nums[i] <= nums[\result] / 2);
    public int dominantIndex(int[] nums) {
        int m1 = -1, m2 = -1;
        int index = -1;

        //@ maintaining m1 == \max(\old(nums[0]), ..., \old(nums[i-1]));
        //@ maintaining m2 == \max(\old(nums[0]), ..., \old(nums[i-1])) && m2 < m1;
        //@ maintaining index == \maxIndex(\old(nums[0]), ..., \old(nums[i-1]));
        //@ decreasing nums.length - i;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > m1) {
                m2 = m1;
                m1 = nums[i];
                index = i;
            } else if (nums[i] > m2) {
                m2 = nums[i];
            }
        }

        //@ assert \forall int i; 0 <= i && i < nums.length; nums[i] <= m1 || nums[i] <= m1 / 2;
        return m1 >= m2 * 2 ? index : -1;
    }
}
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:10: error: illegal start of type
        //@ maintaining m1 == \max(\old(nums[0]), ..., \old(nums[i-1]));
                                  ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:11: error: illegal start of type
        //@ maintaining m2 == \max(\old(nums[0]), ..., \old(nums[i-1])) && m2 < m1;
                                  ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:12: error: This backslash token is unknown: \maxIndex
        //@ maintaining index == \maxIndex(\old(nums[0]), ..., \old(nums[i-1]));
                                 ^
3 errors

