public class Perimeter
{   

     //@ requires x >= Short.MIN_VALUE && x <= Short.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == 4 * (long)x;
     public long Perimeter(short x)
    {
        long squarePerimeter = 4 * (long)x;
        return squarePerimeter;
    }

     //@ requires x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == 5 * (long)x;
     public long Perimeter(int x)
    {
        long pentagonPerimeter = 5 * (long)x;
        return pentagonPerimeter;
    }

     //@ requires x >= Long.MIN_VALUE && x <= Long.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == 6 * x;
     public long Perimeter(long x)
    {
        long hexagonalPerimeter = 6 * x;
        return hexagonalPerimeter;
    }

     //@ requires x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE;
     //@ requires y >= Integer.MIN_VALUE && y <= Integer.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == 2*((long)x + (long)y);
     public long Perimeter(int x, int y)
    {
        long perimeterRectangle = 2*((long)x + (long)y);
        return perimeterRectangle;
    }

     //@ requires x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE;
     //@ requires y >= Integer.MIN_VALUE && y <= Integer.MAX_VALUE;
     //@ requires z >= Integer.MIN_VALUE && z <= Integer.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == (long)x + (long)y + (long)z;
     public long Perimeter(int x, int y, int z)
    {
        long trianglePerimeter = (long)x + (long)y + (long)z;
        return trianglePerimeter;
    }

     //@ requires w >= Integer.MIN_VALUE && w <= Integer.MAX_VALUE;
     //@ requires x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE;
     //@ requires y >= Integer.MIN_VALUE && y <= Integer.MAX_VALUE;
     //@ requires z >= Integer.MIN_VALUE && z <= Integer.MAX_VALUE;
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
     //@ ensures \result == (long)w + (long)x + (long)y + (long)z;
     public long Perimeter(int w, int x, int y, int z)
    {
        long trapeziumPerimeter = (long)w + (long)x + (long)y + (long)z;
        return trapeziumPerimeter;
    }
}
/home/max/Documents/JMLGPT/tmp/Perimeter.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:5:) in method Perimeter
        return squarePerimeter;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:10:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:14:) in method Perimeter
        return pentagonPerimeter;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:19:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:28: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:23:) in method Perimeter
        return hexagonalPerimeter;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:28:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:33:) in method Perimeter
        return perimeterRectangle;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:38:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:49: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:44:) in method Perimeter
        return trianglePerimeter;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:49:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:61: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Perimeter.java:56:) in method Perimeter
        return trapeziumPerimeter;
        ^
/home/max/Documents/JMLGPT/tmp/Perimeter.java:56: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Perimeter.java:61:
     //@ ensures \result >= 0 && \result <= Long.MAX_VALUE;
         ^
12 verification failures

