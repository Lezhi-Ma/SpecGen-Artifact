public class BubbleSort { 
    //@ requires arr != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
    public void swap(int x, int y, int array[]) {
        int temp;     
        temp = array[x];
        array[x] = array[y];
        array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length && (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
    public int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining 0 <= i && i <= n - 1;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < n - k - 1; arr[j] <= arr[j+1]));
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining 0 <= j && j <= n - i - 2;
            //@ maintaining (\forall int k; 0 <= k && k < j; arr[k] <= arr[k+1]);
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
                    swap(j, j + 1, arr); 
                } 
            }
        } 
        return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:2: error: cannot find symbol
    //@ requires arr != null;
                 ^
  symbol:   variable arr
  location: class BubbleSort
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
                                               ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
                                                                   ^
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:3: error: A \result expression may not be used in the specification of a method that returns void
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
                                                                                 ^
4 errors

