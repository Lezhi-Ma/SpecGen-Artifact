class DominantIndex {
    
    //@ requires nums != null && nums.length > 0;
    //@ ensures \result >= 0 && \result < nums.length;
    //@ ensures (\forall int i; 0 <= i && i < nums.length; nums[i] <= nums[\result]);
    //@ ensures (\forall int i; 0 <= i && i < nums.length && i != \result; 2 * nums[i] <= nums[\result]);
    //@ ensures (\forall int i; 0 <= i && i < nums.length && i != \result && 2 * nums[i] > nums[\result]; \result == -1);
    public static int dominantIndex(int[] nums) {
        int biggest_index = 0;

        //@ maintaining 0 <= biggest_index && biggest_index < nums.length;
        //@ maintaining (\forall int i; 0 <= i && i < biggest_index; nums[i] <= nums[biggest_index]);
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index; 2 * nums[i] <= nums[biggest_index]);
        //@ decreases nums.length - biggest_index;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[biggest_index])
                biggest_index = i;
        }

        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index; 2 * nums[i] <= nums[biggest_index]);
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index && 2 * nums[i] > nums[biggest_index]; \result == -1);
        //@ decreases nums.length - biggest_index;
        for (int i = 0; i < nums.length; i++) {
            if (i != biggest_index && 2 * nums[i] > nums[biggest_index])
                return -1;
        }

        return biggest_index;
    }
}
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:12: error: variable i is already defined in method dominantIndex(int[])
        //@ maintaining (\forall int i; 0 <= i && i < biggest_index; nums[i] <= nums[biggest_index]);
                                     ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:13: error: variable i is already defined in method dominantIndex(int[])
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index; 2 * nums[i] <= nums[biggest_index]);
                                     ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:20: error: variable i is already defined in method dominantIndex(int[])
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index; 2 * nums[i] <= nums[biggest_index]);
                                     ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:21: error: variable i is already defined in method dominantIndex(int[])
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index && 2 * nums[i] > nums[biggest_index]; \result == -1);
                                     ^
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:21: error: A \result expression may not be in a loop_invariant clause
        //@ maintaining (\forall int i; 0 <= i && i < nums.length && i != biggest_index && 2 * nums[i] > nums[biggest_index]; \result == -1);
                                                                                                                               ^
5 errors

