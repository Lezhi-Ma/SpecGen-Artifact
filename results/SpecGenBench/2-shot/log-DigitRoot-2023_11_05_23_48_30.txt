class DigitRoot {
    //@ requires num >= 0;
    //@ ensures \result >= 0 && \result < 10;
    public int digitRoot(int num) {
        //@ maintaining num >= 0;
        //@ maintaining num >= 10 ==> num < \old(num);
        //@ maintaining num < 10 ==> num == \old(num);
        while (num >= 10) {
            int sum = 0;
            //@ maintaining num > 0;
            //@ maintaining sum >= 0;
            //@ maintaining (\forall int i; 0 <= i && i < num; sum + (num % 10) * 10^i == \old(num) % 10^i);
            //@ decreases num;
            while (num > 0) {
                sum += num % 10;
                num /= 10;
            }
            num = sum;
        }
        return num;
    }
}
/home/max/Documents/JMLGPT/tmp/DigitRoot.java:12: error: bad operand types for binary operator '^'
            //@ maintaining (\forall int i; 0 <= i && i < num; sum + (num % 10) * 10^i == \old(num) % 10^i);
                                                                                    ^
  first type:  int
  second type: boolean
1 error

