public class MulNested {
    //@ requires Integer.MIN_VALUE <= x * y && x * y <= Integer.MAX_VALUE;
    //@ ensures \result == x * y;
    public static int mulNested(int x, int y) {
        int res = 0, m = x, n = y, sign = 1;
        if(x < 0){
            m = -x;
            sign = -sign;
        }
        if(y < 0){
            n = -y;
            sign = -sign;
        }
        //@ maintaining res == sign * (\sum int i; 0 <= i && i < m; (\sum int j; 0 <= j && j < n; 1));
        //@ decreases m;
        for(int i = 0; i < m; i++) {
            //@ maintaining res == sign * (\sum int j; 0 <= j && j < n; 1) * (i + 1);
            //@ decreases n;
            for(int j = 0; j < n; j++) {
                res = res + 1;
            }
        }
        return sign * res;
    }
}
/home/max/Documents/JMLGPT/tmp/MulNested.java:14: error: variable i is already defined in method mulNested(int,int)
        //@ maintaining res == sign * (\sum int i; 0 <= i && i < m; (\sum int j; 0 <= j && j < n; 1));
                                                ^
/home/max/Documents/JMLGPT/tmp/MulNested.java:17: error: variable j is already defined in method mulNested(int,int)
            //@ maintaining res == sign * (\sum int j; 0 <= j && j < n; 1) * (i + 1);
                                                    ^
2 errors

