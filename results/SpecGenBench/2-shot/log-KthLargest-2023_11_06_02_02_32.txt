import java.util.PriorityQueue;

class KthLargest {
    //@ requires nums != null && 0 <= k && k <= nums.length;
    //@ ensures \result == (\max int i; 0 <= i && i < nums.length; (\num_of int j; 0 <= j && j < nums.length; nums[j] >= nums[i]) == k);
    public static int kthLargest(int[] nums, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        
        for (int x : nums) {
            pq.offer(x);
            if (pq.size() > k) {
                pq.poll();
            }
        }

        return pq.peek();
    }
}
/home/max/Documents/JMLGPT/tmp/KthLargest.java:5: error: incomparable types: int and boolean
    //@ ensures \result == (\max int i; 0 <= i && i < nums.length; (\num_of int j; 0 <= j && j < nums.length; nums[j] >= nums[i]) == k);
                        ^
1 error

