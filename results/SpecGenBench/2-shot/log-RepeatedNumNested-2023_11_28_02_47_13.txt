public class RepeatedNumNested {

    //@ requires (\forall int i; 0 <= i && i < arr.length; (int)Integer.MIN_VALUE <= arr[i] && arr[i] <= (int)Integer.MAX_VALUE);
    //@ ensures \result == -1 ==> (\forall int i, j; 0 <= i && i < j && j < arr.length; arr[i] != arr[j]);
    //@ ensures 0 <= \result && \result < arr.length ==> arr[\result] == arr[j] && (\forall int i; 0 <= i && i < \result; arr[i] != arr[j]);
    public static int repeatedNum(int[] arr) {
        //@ ghost int i_counter;
        //@ set i_counter = 0;
        //@ maintaining -1 <= i && i < arr.length;
        //@ maintaining (\forall int k; 0 <= k && k < i; arr[k] != arr[j]);
        //@ decreases arr.length - i;
        for (int i = 0; i < arr.length; ++i) {
            //@ ghost int j_counter;
            //@ set j_counter = 0;
            //@ maintaining i + 1 <= j && j < arr.length;
            //@ maintaining (\forall int k; i <= k && k < j; arr[i] != arr[j]);
            //@ decreases arr.length - j;
            for (int j = i + 1; j < arr.length; ++j) {
                if(arr[i] == arr[j])
                    return i;
                //@ set j_counter = j_counter + 1;
            }
            //@ assert j_counter == arr.length - (i + 1);
            //@ set i_counter = i_counter + 1;
        }
        //@ assert i_counter == arr.length;
        return -1;
    }
    
}
/home/max/Documents/JMLGPT/tmp/RepeatedNumNested.java:5: error: cannot find symbol
    //@ ensures 0 <= \result && \result < arr.length ==> arr[\result] == arr[j] && (\forall int i; 0 <= i && i < \result; arr[i] != arr[j]);
                                                                             ^
  symbol:   variable j
  location: class RepeatedNumNested
/home/max/Documents/JMLGPT/tmp/RepeatedNumNested.java:5: error: cannot find symbol
    //@ ensures 0 <= \result && \result < arr.length ==> arr[\result] == arr[j] && (\forall int i; 0 <= i && i < \result; arr[i] != arr[j]);
                                                                                                                                        ^
  symbol:   variable j
  location: class RepeatedNumNested
/home/max/Documents/JMLGPT/tmp/RepeatedNumNested.java:10: error: cannot find symbol
        //@ maintaining (\forall int k; 0 <= k && k < i; arr[k] != arr[j]);
                                                                       ^
  symbol:   variable j
  location: class RepeatedNumNested
3 errors

