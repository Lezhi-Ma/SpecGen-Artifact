class DominantIndex {
    
    //@ requires nums != null;
    //@ ensures \result >= -1 && \result < nums.length;
    //@ ensures \result == -1 <==> (\forall int i; 0 <= i && i < nums.length; \forall int j; 0 <= j && j < nums.length && j != i; 2 * nums[j] <= nums[i]);
    //@ ensures \result != -1 ==> \forall int i; 0 <= i && i < nums.length && i != \result; 2 * nums[i] <= nums[\result];
    public static int dominantIndex(int[] nums) {
        int biggest_index = 0;

        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[biggest_index])
                biggest_index = i;
        }

        for (int i = 0; i < nums.length; i++) {
            if (i != biggest_index && 2 * nums[i] > nums[biggest_index])
                return -1;
        }

        return biggest_index;
    }
}
/home/max/Documents/JMLGPT/tmp/DominantIndex.java:11: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method dominantIndex
            if (nums[i] > nums[biggest_index])
                              ^
1 verification failure

