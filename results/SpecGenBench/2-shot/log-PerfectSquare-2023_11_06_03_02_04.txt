class PerfectSquare {
    //@ ensures \result == (num == 0 || (\exists int i; 1 <= i && i * i <= num; i * i == num));
    public static boolean isPerfectSquare(int num) {
        if(num == 0)
            return true;

        for(int i = 1; i * i <= num; i++) {
            if(i * i == num)
                return true;
        }
        return false;
    }
}
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/PerfectSquare.java:2:) in method isPerfectSquare
                return true;
                ^
/home/max/Documents/JMLGPT/tmp/PerfectSquare.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/PerfectSquare.java:9:
    //@ ensures \result == (num == 0 || (\exists int i; 1 <= i && i * i <= num; i * i == num));
        ^
2 verification failures

