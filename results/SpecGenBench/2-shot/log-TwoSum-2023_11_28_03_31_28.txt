class TwoSum {
    //@ requires nums != null;
    //@ requires (\forall int i; 0 <= i && i < nums.length; (int)Integer.MIN_VALUE <= nums[i] && nums[i] <= (int)Integer.MAX_VALUE);
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; (int)Integer.MIN_VALUE <= \result[i] && \result[i] <= (int)Integer.MAX_VALUE);
    //@ ensures (\exists int i; int j; 0 <= i && i < j && j < nums.length; nums[i] + nums[j] == target);
    public int[] twoSum(int[] nums, int target) {
        int n = nums.length;
        //@ maintaining 0 <= i && i <= n;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int j; i <= j && j < n; nums[k] + nums[j] != target));
        //@ decreases n - i;
        for (int i = 0; i < n; ++i) {
            //@ maintaining i + 1 <= j && j <= n;
            //@ maintaining (\forall int k; 0 <= k && k < i; nums[k] + nums[j] != target);
            //@ decreases n - j;
            for (int j = i + 1; j < n; ++j) {
                if (nums[i] + nums[j] == target) {
                    return new int[]{i, j};
                }
            }
        }
        return new int[0];
    }
}
/home/max/Documents/JMLGPT/tmp/TwoSum.java:6: error: '.class' expected
    //@ ensures (\exists int i; int j; 0 <= i && i < j && j < nums.length; nums[i] + nums[j] == target);
                                    ^
/home/max/Documents/JMLGPT/tmp/TwoSum.java:6: error: ')' expected
    //@ ensures (\exists int i; int j; 0 <= i && i < j && j < nums.length; nums[i] + nums[j] == target);
                                                                                                       ^
2 errors

