public class Fibonacci {

	/*@ requires n >= 0;
	  @ ensures \result >= 0;
	  @ ensures n == 0 ==> \result == 0;
	  @ ensures n > 0 ==> \result == (\forall int i; 2 <= i && i <= n; \result == fib[i-2] + fib[i-1]);
	  @*/
	public static int fibCompute(int n) {
		if(n < 0) return -1;
		else if(n == 0) return 0;

		int[] fib = new int[n + 1];
		fib[0] = 0;
		fib[1] = 1;
		int index = 2;

		//@ maintaining (\forall int i; 2 <= i && i <= index; fib[i] == fib[i-2] + fib[i-1]);
		//@ maintaining 2 <= index && index <= fib.length;
		//@ decreases fib.length - index;
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;         
		}

		return fib[n];
	}

}
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:6: error: cannot find symbol
	  @ ensures n > 0 ==> \result == (\forall int i; 2 <= i && i <= n; \result == fib[i-2] + fib[i-1]);
	                                                                              ^
  symbol:   variable fib
  location: class Fibonacci
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:6: error: cannot find symbol
	  @ ensures n > 0 ==> \result == (\forall int i; 2 <= i && i <= n; \result == fib[i-2] + fib[i-1]);
	                                                                                         ^
  symbol:   variable fib
  location: class Fibonacci
/home/max/Documents/JMLGPT/tmp/Fibonacci.java:6: error: incomparable types: int and boolean
	  @ ensures n > 0 ==> \result == (\forall int i; 2 <= i && i <= n; \result == fib[i-2] + fib[i-1]);
	                              ^
3 errors

