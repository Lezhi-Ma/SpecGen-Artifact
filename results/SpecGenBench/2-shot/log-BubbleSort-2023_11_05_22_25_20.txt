public class BubbleSort { 

    //@ requires 0 <= x && x < array.length;
    //@ requires 0 <= y && y < array.length;
    //@ assignable array[x], array[y];
    //@ ensures array[x] == \old(array[y]) && array[y] == \old(array[x]);
    void swap(int x, int y, int array[]) {
        int temp;     
        temp = array[x];
        array[x] = array[y];
        array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length - 1; \result[i] <= \result[i+1]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ maintaining 0 <= i && i <= n-1;
        //@ maintaining (\forall int k; 0 <= k && k < i; (\forall int l; 0 <= l && l < n-k-1; arr[l+1] >= arr[l]));
        //@ decreases n - i;
        for (int i = 0; i < n-1; i++) {	

            //@ maintaining 0 <= j && j <= n-i-1;
            //@ maintaining (\forall int k; 0 <= k && k < j; arr[k+1] >= arr[k]);
            //@ decreases n - i - j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
                    swap(j, j + 1, arr); 
                } 
            }
        } 
        return arr;
    } 
}
/home/max/Documents/JMLGPT/tmp/BubbleSort.java:20: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method bubbleSort
        //@ maintaining 0 <= i && i <= n-1;
            ^
1 verification failure

