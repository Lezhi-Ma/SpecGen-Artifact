public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:25:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:57:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:5: verify: Precondition conjunct is false: x == 1
	//@ requires x == 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:24:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:56:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:6: verify: Precondition conjunct is false: x >= 1
	//@ requires x >= 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:23:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:55:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:6: verify: Precondition conjunct is false: x > 1
	//@ requires x > 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:22:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:54:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:6: verify: Precondition conjunct is false: x < 0
	//@ requires x < 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:21:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:53:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Precondition conjunct is false: x != 0
	//@ requires x != 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:20:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:52:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Precondition conjunct is false: x > 0
	//@ requires x > 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:19:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:51:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Precondition conjunct is false: x < -1
	//@ requires x < -1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:18:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:50:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Precondition conjunct is false: x <= -1
	//@ requires x <= -1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:17:) in method main
        isEven(0);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:49:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Precondition conjunct is false: x == -1
	//@ requires x == -1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:13:) in method isEven
        return x%2 == 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:17:
	//@ ensures !\result;
	    ^
2 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:16: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:14:) in method isEven
        return x%2 == 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:16:
	//@ ensures x >= 0 ==> !\result;
	    ^
2 verification failures

public class OddEven {	
 
	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:14:) in method main
        isEven(1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:47:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x < 1
	//@ requires x < 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:13:) in method main
        isEven(1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:46:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:4: verify: Precondition conjunct is false: x != 1
	//@ requires x != 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:12:) in method main
        isEven(1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:45:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:4: verify: Precondition conjunct is false: x <= 0
	//@ requires x <= 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:11:) in method main
        isEven(1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:44:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:4: verify: Precondition conjunct is false: x == 0
	//@ requires x == 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:8:) in method isEven
        return x%2 == 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:11:
	//@ ensures \result;
	    ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:10:) in method main
        isEven(2);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:44:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
5 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures x >= 0 ==> \result;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:8:) in method isEven
        return x%2 == 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:10:
	//@ ensures x >= 0 ==> \result;
	    ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:9:) in method main
        isEven(2);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:43:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
5 verification failures

public class OddEven {	
 
	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:8:) in method main
        isEven(2);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:42:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:7:) in method main
        isEven(-1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:42:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x >= 0
	//@ requires x >= 0;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:6:) in method main
        isEven(-1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:41:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x != -1
	//@ requires x != -1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:5:) in method main
        isEven(-1);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:40:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:4: verify: Precondition conjunct is false: x > -1
	//@ requires x > -1;
	               ^
3 verification failures

public class OddEven {	
 
	//@ requires x >= -1;
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:4:) in method main
        isEven(-2);
              ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:40:
	public static boolean isEven(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:3: verify: Precondition conjunct is false: x >= -1
	//@ requires x >= -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x == 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:29:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:40:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Precondition conjunct is false: x == 1
	//@ requires x == 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x >= 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:39: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:28:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:39:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: Precondition conjunct is false: x >= 1
	//@ requires x >= 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x > 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:38: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:27:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:38:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: Precondition conjunct is false: x > 1
	//@ requires x > 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x < 0;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:37: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:26:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:37:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: Precondition conjunct is false: x < 0
	//@ requires x < 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x != 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:36: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:25:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:36:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:12: verify: Precondition conjunct is false: x != 0
	//@ requires x != 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x > 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:35: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:24:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:35:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Precondition conjunct is false: x > 0
	//@ requires x > 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x < -1;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:34: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:23:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:34:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Precondition conjunct is false: x < -1
	//@ requires x < -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x <= -1;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:33: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:22:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:33:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Precondition conjunct is false: x <= -1
	//@ requires x <= -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x == -1;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:32: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:21:) in method main
		isOdd(0);
		     ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:32:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Precondition conjunct is false: x == -1
	//@ requires x == -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures \result;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:16:) in method isOdd
        return x%2 != 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:21:
	//@ ensures \result;
	    ^
2 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> \result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:20: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:17:) in method isOdd
        return x%2 != 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:20:
	//@ ensures x >= 0 ==> \result;
	    ^
2 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x < 1;
	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:30: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:18:) in method main
        isOdd(1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:30:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x < 1
	//@ requires x < 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x != 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:29: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:17:) in method main
        isOdd(1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:29:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Precondition conjunct is false: x != 1
	//@ requires x != 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x <= 0;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:28: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:16:) in method main
        isOdd(1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:28:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Precondition conjunct is false: x <= 0
	//@ requires x <= 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x == 0;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:27: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:15:) in method main
        isOdd(1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:27:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Precondition conjunct is false: x == 0
	//@ requires x == 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures !\result;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:12:) in method isOdd
        return x%2 != 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:15:
	//@ ensures !\result;
	    ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:27: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:14:) in method main
        isOdd(2);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:27:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
5 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	//@ ensures x >= 0 ==> !\result;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:12:) in method isOdd
        return x%2 != 0;
        ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:14:
	//@ ensures x >= 0 ==> !\result;
	    ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:26: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:13:) in method main
        isOdd(2);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:26:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
5 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x <= 1;
	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:25: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:12:) in method main
        isOdd(2);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:25:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x <= 1
	//@ requires x <= 1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x >= 0;
	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:25: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:11:) in method main
        isOdd(-1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:25:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x >= 0
	//@ requires x >= 0;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x != -1;
	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:24: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:10:) in method main
        isOdd(-1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:24:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x != -1
	//@ requires x != -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x >= -1;
	//@ requires x > -1;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:23: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:9:) in method main
        isOdd(-1);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:23:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Precondition conjunct is false: x > -1
	//@ requires x > -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	//@ requires x >= -1;
	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}


/home/max/Documents/JMLGPT/tmp/OddEven.java:23: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/OddEven.java:8:) in method main
        isOdd(-2);
             ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/OddEven.java:23:
	public static boolean isOdd(int x) { 
	                      ^
/home/max/Documents/JMLGPT/tmp/OddEven.java:7: verify: Precondition conjunct is false: x >= -1
	//@ requires x >= -1;
	               ^
3 verification failures

public class OddEven {	
 
	public static boolean isEven(int x) { 
        return x%2 == 0;
    } 

	public static boolean isOdd(int x) { 
        return x%2 != 0;
    }

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isEven(0);
        isEven(1);
        isEven(2);
        isEven(-1);
        isEven(-2);
		isOdd(0);
        isOdd(1);
        isOdd(2);
        isOdd(-1);
        isOdd(-2);
        isEven(114);
        isOdd(114);
        isEven(1919);
        isOdd(1919);
        isEven(-1919);
        isOdd(-1919);
    }
}



