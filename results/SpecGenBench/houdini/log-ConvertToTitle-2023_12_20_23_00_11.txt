class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber == 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber >= 1;
    //@ requires columnNumber > 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber == 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    //@ non_null
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:53: error: annotation type not applicable to this kind of declaration
    //@ non_null
        ^
1 error

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber == 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber >= 1;
    //@ requires columnNumber > 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber == 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:23:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:57:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:4: verify: Precondition conjunct is false: columnNumber == 1
    //@ requires columnNumber == 1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber >= 1;
    //@ requires columnNumber > 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber == 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:22:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:56:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:5: verify: Precondition conjunct is false: columnNumber >= 1
    //@ requires columnNumber >= 1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber > 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber == 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:21:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:55:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:5: verify: Precondition conjunct is false: columnNumber > 1
    //@ requires columnNumber > 1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber == 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:20:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:54:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:7: verify: Precondition conjunct is false: columnNumber == 0
    //@ requires columnNumber == 0;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber >= 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:19:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:53:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:8: verify: Precondition conjunct is false: columnNumber >= 0
    //@ requires columnNumber >= 0;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber > 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:18:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:52:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:8: verify: Precondition conjunct is false: columnNumber > 0
    //@ requires columnNumber > 0;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber == -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:17:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:51:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:10: verify: Precondition conjunct is false: columnNumber == -1
    //@ requires columnNumber == -1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber >= -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:16:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:50:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:11: verify: Precondition conjunct is false: columnNumber >= -1
    //@ requires columnNumber >= -1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber != -1;
    //@ requires columnNumber > -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:15:) in method main
        convertToTitle(-2);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:49:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:11: verify: Precondition conjunct is false: columnNumber > -1
    //@ requires columnNumber > -1;
                              ^
3 verification failures

class ConvertToTitle {
    //@ requires columnNumber < 1;
    //@ requires columnNumber <= 1;
    //@ requires columnNumber != 1;
    //@ requires columnNumber < 0;
    //@ requires columnNumber <= 0;
    //@ requires columnNumber != 0;
    //@ requires columnNumber < -1;
    //@ requires columnNumber <= -1;
    //@ requires columnNumber != -1;
    //@ ensures \result != null;
    //@ ensures \fresh(\result);
    //@ ensures columnNumber >= 0 ==> \result != null;
    public static String convertToTitle(int columnNumber) {
        StringBuffer sb = new StringBuffer();
        while (columnNumber > 0) {
            __Loop_Invariant_Dummy1(columnNumber, sb);
            int a0 = (columnNumber - 1) % 26 + 1;
            sb.append((char)(a0 - 1 + 'A'));
            columnNumber = (columnNumber - a0) / 26;
        }
        __Loop_Invariant_Dummy1(columnNumber, sb);
        return sb.reverse().toString();
    }

    //@ requires cn < 1;
    //@ requires cn <= 1;
    //@ requires cn == 1;
    //@ requires cn != 1;
    //@ requires cn >= 1;
    //@ requires cn > 1;
    //@ requires cn < 0;
    //@ requires cn <= 0;
    //@ requires cn == 0;
    //@ requires cn != 0;
    //@ requires cn >= 0;
    //@ requires cn > 0;
    //@ requires cn < -1;
    //@ requires cn <= -1;
    //@ requires cn == -1;
    //@ requires cn != -1;
    //@ requires cn >= -1;
    //@ requires cn > -1;
    public static void __Loop_Invariant_Dummy1(int cn, StringBuffer sb) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        convertToTitle(-2);
        convertToTitle(-1);
        convertToTitle(0);
        convertToTitle(1);
        convertToTitle(2);
        convertToTitle(3);
        convertToTitle(4);
        convertToTitle(5);
        convertToTitle(114);
        convertToTitle(514);
        convertToTitle(1919);
        convertToTitle(810);
    }
}


error: An error while executing a proof script for convertToTitle: (error "Solver has unexpectedly terminated")
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:14:) in method main
        convertToTitle(-1);
                      ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:49:
    public static String convertToTitle(int columnNumber) {
                         ^
/home/max/Documents/JMLGPT/tmp/ConvertToTitle.java:8: verify: Precondition conjunct is false: columnNumber < -1
    //@ requires columnNumber < -1;
                              ^
1 error
3 verification failures

