public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:106: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:46:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:106:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:5: verify: Precondition conjunct is false: num == 1
	//@ requires num == 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:105: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:45:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:105:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:6: verify: Precondition conjunct is false: num >= 1
	//@ requires num >= 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:104: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:44:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:104:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:6: verify: Precondition conjunct is false: num > 1
	//@ requires num > 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:103: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:43:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:103:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:8: verify: Precondition conjunct is false: num == 0
	//@ requires num == 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:102: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:42:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:102:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:9: verify: Precondition conjunct is false: num >= 0
	//@ requires num >= 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:101: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:41:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:101:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:9: verify: Precondition conjunct is false: num > 0
	//@ requires num > 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:100: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:40:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:100:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:11: verify: Precondition conjunct is false: num == -1
	//@ requires num == -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:99: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:39:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:99:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Precondition conjunct is false: num >= -1
	//@ requires num >= -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:98: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:) in method main
		Absolute(-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:98:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Precondition conjunct is false: num > -1
	//@ requires num > -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:41: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:12:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:41:
	//@ ensures \result < num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:12:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:40:
	//@ ensures \result <= num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:39: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:12:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:39:
	//@ ensures \result == num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:
	//@ ensures \result < 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:37: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:37:
	//@ ensures \result <= 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:36: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:36:
	//@ ensures \result == 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:18:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:
	//@ ensures \result < 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:34: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:18:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:34:
	//@ ensures \result <= 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:18:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:33:
	//@ ensures \result == 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:32: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:21:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:32:
	//@ ensures \result < -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:31: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:21:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:31:
	//@ ensures \result <= -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:30: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:21:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:30:
	//@ ensures \result == -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:86: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:25:) in method main
		Absolute(0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:86:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:6: verify: Precondition conjunct is false: num < 0
	//@ requires num < 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:85: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:24:) in method main
		Absolute(0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:85:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:7: verify: Precondition conjunct is false: num != 0
	//@ requires num != 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:84: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:23:) in method main
		Absolute(0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:84:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:7: verify: Precondition conjunct is false: num < -1
	//@ requires num < -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:83: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:22:) in method main
		Absolute(0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:83:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:7: verify: Precondition conjunct is false: num <= -1
	//@ requires num <= -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:8:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:23:
	//@ ensures \result != num;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:83: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:21:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:83:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:9:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:22:
	//@ ensures \result > num;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:82: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:20:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:82:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:10:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:21:
	//@ ensures \result >= 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:81: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:19:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:81:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:10:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:20:
	//@ ensures \result > 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:80: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:18:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:80:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:10:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:19:
	//@ ensures \result != 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:79: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:17:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:79:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:11:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:18:
	//@ ensures \result > 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:78: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:16:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:78:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:77: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:77:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:76: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:14:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:76:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num <= 1
	//@ requires num <= 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:75: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:13:) in method main
		Absolute(4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:75:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:4: verify: Precondition conjunct is false: num <= 0
	//@ requires num <= 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num == 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:75: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:63:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:63: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:75:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:22: verify: Precondition conjunct is false: num == 1
	//@ requires num == 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num >= 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:74: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:62:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:62: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:74:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: Precondition conjunct is false: num >= 1
	//@ requires num >= 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num > 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:73: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:61:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:61: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:73:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: Precondition conjunct is false: num > 1
	//@ requires num > 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num == 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:72: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:60:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:60: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:72:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:25: verify: Precondition conjunct is false: num == 0
	//@ requires num == 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num >= 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:71: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:59:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:59: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:71:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Precondition conjunct is false: num >= 0
	//@ requires num >= 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num > 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:70: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:58:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:58: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:70:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Precondition conjunct is false: num > 0
	//@ requires num > 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num == -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:69: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:57:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:57: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:69:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:28: verify: Precondition conjunct is false: num == -1
	//@ requires num == -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ requires num >= -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:68: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:56:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:56: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:68:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: Precondition conjunct is false: num >= -1
	//@ requires num >= -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ requires num > -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:67: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:55:) in method main
		Absolute((long)-4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:55: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:67:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: Precondition conjunct is false: num > -1
	//@ requires num > -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result < num;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:58: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:29:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:58:
	//@ ensures \result < num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result <= num;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:57: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:29:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:57:
	//@ ensures \result <= num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result == num;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:56: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:29:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:56:
	//@ ensures \result == num;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result < 1;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:55: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:32:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:55:
	//@ ensures \result < 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result <= 1;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:54: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:32:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:54:
	//@ ensures \result <= 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result == 1;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:53: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:32:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:53:
	//@ ensures \result == 1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result < 0;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:52: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:52:
	//@ ensures \result < 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result <= 0;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:51: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:51:
	//@ ensures \result <= 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result == 0;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:50: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:50:
	//@ ensures \result == 0;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result < -1;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:49: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:49:
	//@ ensures \result < -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result <= -1;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:48: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:48:
	//@ ensures \result <= -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result == -1;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:47: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:47:
	//@ ensures \result == -1;
	    ^
2 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num < 0;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:42:) in method main
		Absolute((long)0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:55:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:23: verify: Precondition conjunct is false: num < 0
	//@ requires num < 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:41:) in method main
		Absolute((long)0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:54:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: Precondition conjunct is false: num != 0
	//@ requires num != 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num < -1;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:40:) in method main
		Absolute((long)0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:53:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: Precondition conjunct is false: num < -1
	//@ requires num < -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num <= -1;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:39:) in method main
		Absolute((long)0);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:52:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: Precondition conjunct is false: num <= -1
	//@ requires num <= -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result != num;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:40: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:25:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:40:
	//@ ensures \result != num;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:52:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result > num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:39: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:26:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:39:
	//@ ensures \result > num;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:37:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:51:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:38: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:27:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:38:
	//@ ensures \result >= 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:36:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:50:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result > 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:37: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:27:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:37:
	//@ ensures \result > 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:49:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result != 0;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:36: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:27:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:36:
	//@ ensures \result != 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:34:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:34: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:48:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result > 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:35: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:28:) in method Absolute
			return num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:35:
	//@ ensures \result > 0;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:33:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:47:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num < 1;
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:32:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:46:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num < 1
	//@ requires num < 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num <= 1;
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:31:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:31: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:45:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:20: verify: Precondition conjunct is false: num <= 1
	//@ requires num <= 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ requires num <= 0;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:30:) in method main
		Absolute((long)4);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:30: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:44:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:21: verify: Precondition conjunct is false: num <= 0
	//@ requires num <= 0;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:12:) in method main
		Absolute(-1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:44:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:4: verify: Precondition conjunct is false: num != -1
	//@ requires num != -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:5:) in method Absolute
			return -num;
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:15:
	//@ ensures \result != 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:11:) in method main
		Absolute(1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:44:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num != 1
	//@ requires num != 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ requires num != 1;
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:10:) in method main
		Absolute(1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:43:
	public static int Absolute(int num) {
	                  ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:3: verify: Precondition conjunct is false: num != 1
	//@ requires num != 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ requires num != -1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:26:) in method main
		Absolute((long)-1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:43:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:18: verify: Precondition conjunct is false: num != -1
	//@ requires num != -1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ ensures \result >= num;
	//@ ensures \result != 1;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:29: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:19:) in method Absolute
			return -num;	
			^
/home/max/Documents/JMLGPT/tmp/Absolute.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:29:
	//@ ensures \result != 1;
	    ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:25:) in method main
		Absolute((long)1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:43:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:17: verify: Precondition conjunct is false: num != 1
	//@ requires num != 1;
	                 ^
5 verification failures

public class Absolute {
	
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ requires num != 1;
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}


/home/max/Documents/JMLGPT/tmp/Absolute.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Absolute.java:24:) in method main
		Absolute((long)1);
		        ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Absolute.java:42:
	public static long Absolute(long num) {
	                   ^
/home/max/Documents/JMLGPT/tmp/Absolute.java:17: verify: Precondition conjunct is false: num != 1
	//@ requires num != 1;
	                 ^
3 verification failures

public class Absolute {
	
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static int Absolute(int num) {
		if (0 <= num)
			return num;
		else
			return -num;
	}

	
	//@ ensures \result >= num;
	//@ ensures \result >= 0;
	//@ ensures \result != -1;
	//@ ensures \result >= -1;
	//@ ensures \result > -1;
	//@ ensures num >= 0 ==> \result >= 0;
	public static long Absolute(long num) {
		if (0 <= num)
			return num;
		else
			return -num;	
	}

	//@ requires \nonnullelements(args);
	public static void main(String[] args) {
		Absolute(-4);
		Absolute(0);
		Absolute(4);
		Absolute((long)-4);
		Absolute((long)0);
		Absolute((long)4);
		Absolute(-1);
		Absolute(1);
		Absolute((long)-1);
		Absolute((long)1);
		Absolute(2);
		Absolute(5);
		Absolute(7);
		Absolute(12);
		Absolute(14);
		Absolute(114);
		Absolute(-2);
		Absolute(-5);
		Absolute(-7);
		Absolute(-12);
		Absolute(-14);
		Absolute(-114);
		Absolute((long)2);
		Absolute((long)5);
		Absolute((long)7);
		Absolute((long)12);
		Absolute((long)14);
		Absolute((long)114);
		Absolute((long)-2);
		Absolute((long)-5);
		Absolute((long)-7);
		Absolute((long)-12);
		Absolute((long)-14);
		Absolute((long)-114);
	}
}



