public class Return100 {
    //@ ensures \result < 1;
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:26: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:26:
    //@ ensures \result < 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result <= 1;
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:25: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:25:
    //@ ensures \result <= 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result == 1;
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:24:
    //@ ensures \result == 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result < 0;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:23: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:5:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:23:
    //@ ensures \result < 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result <= 0;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:22: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:5:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:22:
    //@ ensures \result <= 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result == 0;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:21: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:5:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:21:
    //@ ensures \result == 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result < -1;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:20: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:8:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:20:
    //@ ensures \result < -1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result <= -1;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:19: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:8:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:19:
    //@ ensures \result <= -1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result == -1;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:18: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:8:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:18:
    //@ ensures \result == -1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 1;
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:17:
    //@ ensures \result != 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result >= 1;
    //@ ensures \result > 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:16: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:3:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:16:
    //@ ensures \result > 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result >= 1;
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:15: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:15:
    //@ ensures \result >= 1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != 0;
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:14: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:14:
    //@ ensures \result != 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result >= 0;
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:13: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:13:
    //@ ensures \result >= 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result > 0;
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:12: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:12:
    //@ ensures \result > 0;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result != -1;
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:11:
    //@ ensures \result != -1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result >= -1;
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:10: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:10:
    //@ ensures \result >= -1;
        ^
2 verification failures

public class Return100 {
    //@ ensures \result > -1;
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:9: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/Return100.java:2:) in method return100
        return res;
        ^
/home/max/Documents/JMLGPT/tmp/Return100.java:2: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:9:
    //@ ensures \result > -1;
        ^
2 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 1;
    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:53:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:53: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res < 1
    //@ requires res < 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res <= 1;
    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:52:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:52: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res <= 1
    //@ requires res <= 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res == 1;
    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:51:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:51: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res == 1
    //@ requires res == 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res != 1;
    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:50:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:50: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res != 1
    //@ requires res != 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res >= 1;
    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:49:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:49: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res >= 1
    //@ requires res >= 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res > 1;
    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:48:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:48: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res > 1
    //@ requires res > 1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < 0;
    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:47:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:47: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res < 0
    //@ requires res < 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res <= 0;
    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:46:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res <= 0
    //@ requires res <= 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res == 0;
    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:45:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res == 0
    //@ requires res == 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res != 0;
    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:44:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res != 0
    //@ requires res != 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res >= 0;
    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:43:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res >= 0
    //@ requires res >= 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res > 0;
    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:42:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res > 0
    //@ requires res > 0;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res < -1;
    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:41:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res < -1
    //@ requires res < -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res <= -1;
    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:40:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res <= -1
    //@ requires res <= -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res == -1;
    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:39:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res == -1
    //@ requires res == -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res != -1;
    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:38:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res != -1
    //@ requires res != -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res >= -1;
    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:37:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res >= -1
    //@ requires res >= -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires res > -1;
    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:36:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: res > -1
    //@ requires res > -1;
                     ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i < res;
    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:35:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i < res
    //@ requires i < res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i <= res;
    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:34:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:34: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i <= res
    //@ requires i <= res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i == res;
    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:33:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i == res
    //@ requires i == res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i != res;
    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:32:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i != res
    //@ requires i != res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i >= res;
    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:31:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:31: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i >= res
    //@ requires i >= res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i > res;
    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:30:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:30: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i > res
    //@ requires i > res;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i < 1;
    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:29:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:29: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i < 1
    //@ requires i < 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i <= 1;
    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:28:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:28: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i <= 1
    //@ requires i <= 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i == 1;
    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:27:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:27: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i == 1
    //@ requires i == 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i != 1;
    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:26:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:26: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i != 1
    //@ requires i != 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i >= 1;
    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:25:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:25: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i >= 1
    //@ requires i >= 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i > 1;
    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:24:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i > 1
    //@ requires i > 1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i < 0;
    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:23:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i < 0
    //@ requires i < 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i <= 0;
    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:22:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i <= 0
    //@ requires i <= 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i == 0;
    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:21:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i == 0
    //@ requires i == 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i != 0;
    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:20:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i != 0
    //@ requires i != 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i >= 0;
    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:19:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i >= 0
    //@ requires i >= 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i > 0;
    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:18:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i > 0
    //@ requires i > 0;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i < -1;
    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:17:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i < -1
    //@ requires i < -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i <= -1;
    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:16:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i <= -1
    //@ requires i <= -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i == -1;
    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:15:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:15: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i == -1
    //@ requires i == -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i != -1;
    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:14:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:14: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i != -1
    //@ requires i != -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i >= -1;
    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:13:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i >= -1
    //@ requires i >= -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    //@ requires i > -1;
    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}


/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/Return100.java:12:) in method return100
            __Loop_Invariant_Dummy1(res, i);
                                   ^
/home/max/Documents/JMLGPT/tmp/Return100.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/Return100.java:5:
    public static void __Loop_Invariant_Dummy1(int res, int i) {}
                       ^
/home/max/Documents/JMLGPT/tmp/Return100.java:11: verify: Precondition conjunct is false: i > -1
    //@ requires i > -1;
                   ^
3 verification failures

public class Return100 {
    public static int return100 () {
        int res = 0;
        for(int i = 0; i < 100; i++) {
            __Loop_Invariant_Dummy1(res, i);
            res = res + 1;
        }
        return res;
    }

    public static void __Loop_Invariant_Dummy1(int res, int i) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        return100();
    }
}



