class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:103: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:24:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:24: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:103:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:4: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:102: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:23:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:23: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:102:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:5: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:101: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:22:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:22: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:101:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:5: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:100: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:100:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:5: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:99: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:99:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:98: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:19:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:19: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:98:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:97: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:97:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:96: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:17:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:17: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:96:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:95: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:16:) in method main
        isUgly(0);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:16: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:95:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures \result;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:17: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:11:) in method isUgly
            return false;
            ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:17:
    //@ ensures \result;
        ^
2 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> \result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:16: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:12:) in method isUgly
            return false;
            ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:16:
    //@ ensures n >= 0 ==> \result;
        ^
2 verification failures

class UglyNumLoop {
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:93: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:13:) in method main
        isUgly(1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:13: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:93:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:92: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:12:) in method main
        isUgly(1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:12: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:92:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: verify: Precondition conjunct is false: n != 1
    //@ requires n != 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:91: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:11:) in method main
        isUgly(1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:11: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:91:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n == 0;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:90: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:10:) in method main
        isUgly(1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:10: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:90:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:65:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:65: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:47: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:90: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:90:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:64:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:64: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:47: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:89: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:89:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:63:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:63: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:47: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:88: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:88:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:62:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:62: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:87: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:87:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:61:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:61: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:86: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:86:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:60:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:60: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:85: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:85:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:59:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:59: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:84: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:84:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:58:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:58: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:83: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:83:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:57:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:57: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:82: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:82:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:56:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:56: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:81: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:81:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:55:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:55: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:80: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:80:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:54:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:54: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:79: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:79:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:53:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:53: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:78: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:78:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:52:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:52: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:77: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:77:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:76: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:76:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50:) in method isUgly
            __Loop_Invariant_Dummy2(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:18:
    public static void __Loop_Invariant_Dummy2(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:75: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:75:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:28: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:74: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:74:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:28: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:73: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:73:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:28: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:72: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:72:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:71: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:71:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:70: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:70:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:69: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:69:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:68: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:68:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:39:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:67: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:67:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:38:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:66: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:66:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:37:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:65: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:65:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:36:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:64: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:64:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:35:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:63: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:63:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:62: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:62:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:29: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:61: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:61:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:32:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:32: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:60: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:60:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:31:) in method isUgly
            __Loop_Invariant_Dummy1(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:31: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:14:
    public static void __Loop_Invariant_Dummy1(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:30: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:59: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:59:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures !\result;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:25: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method isUgly
        return n == 1;
        ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:25:
    //@ ensures !\result;
        ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:58: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:9: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:58:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
5 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n < 1;
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n < 1
    //@ requires n < 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:57: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:57:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n <= 1;
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:56: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:56:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n == 1;
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n == 1
    //@ requires n == 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:55: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:55:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:21:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n >= 1
    //@ requires n >= 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:54: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:54:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    //@ ensures n >= 0 ==> !\result;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:24: verify: The prover cannot establish an assertion (Postcondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method isUgly
        return n == 1;
        ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:24:
    //@ ensures n >= 0 ==> !\result;
        ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:53: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:8: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:53:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
5 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n > 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n > 1
    //@ requires n > 1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:52: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:52:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n < 0;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n < 0
    //@ requires n < 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:51:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n <= 0;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n <= 0
    //@ requires n <= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:50:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n == 0;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n == 0
    //@ requires n == 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:49:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != 0;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n != 0
    //@ requires n != 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:48:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n > 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n > 0
    //@ requires n > 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:47: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:47:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n < -1;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n < -1
    //@ requires n < -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:46:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n <= -1;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:39:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:39: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n <= -1
    //@ requires n <= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:45:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n == -1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:38:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:38: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n == -1
    //@ requires n == -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:44:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:37:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:37: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:33: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:43:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:36:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:36: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    //@ requires n > -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:35:) in method isUgly
            __Loop_Invariant_Dummy3(n);
                                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:35: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:20:
    public static void __Loop_Invariant_Dummy3(int n) {}
                       ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:34: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
6 verification failures

class UglyNumLoop {
    //@ requires n <= 1;
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7:) in method main
        isUgly(2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:7: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n <= 1
    //@ requires n <= 1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n >= 0;
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:6:) in method main
        isUgly(-1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:6: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:42:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n >= 0
    //@ requires n >= 0;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n != -1;
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:5:) in method main
        isUgly(-1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:5: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:41:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n != -1
    //@ requires n != -1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n >= -1;
    //@ requires n > -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:4:) in method main
        isUgly(-1);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:4: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: verify: Precondition conjunct is false: n > -1
    //@ requires n > -1;
                   ^
3 verification failures

class UglyNumLoop {
    //@ requires n >= -1;
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}


/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40: verify: The prover cannot establish an assertion (Precondition: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3:) in method main
        isUgly(-2);
              ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:3: verify: Associated declaration: /home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:40:
    public static boolean isUgly(int n) {
                          ^
/home/max/Documents/JMLGPT/tmp/UglyNumLoop.java:2: verify: Precondition conjunct is false: n >= -1
    //@ requires n >= -1;
                   ^
3 verification failures

class UglyNumLoop {
    public static boolean isUgly(int n) {
        if (n <= 0) {
            return false;
        }
        while (n % 2 == 0) {
            __Loop_Invariant_Dummy1(n);
            n /= 2;
        }
        while (n % 3 == 0) {
            __Loop_Invariant_Dummy2(n);
            n /= 3;
        }
        while (n % 5 == 0) {
            __Loop_Invariant_Dummy3(n);
            n /= 5;
        }
        return n == 1;
    }

    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy1(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy2(int n) {}
    //@ requires n != 1;
    //@ requires n != -1;
    public static void __Loop_Invariant_Dummy3(int n) {}

    //@ requires \nonnullelements(args);
    public static void main(String[] args) {
        isUgly(0);
        isUgly(1);
        isUgly(2);
        isUgly(3);
        isUgly(15);
        isUgly(-1);
        isUgly(-2);
        isUgly(-3);
		isUgly(4);
        isUgly(5);
        isUgly(7);
        isUgly(8);
		isUgly(13);
		isUgly(17);
		isUgly(12);
		isUgly(16);
        isUgly(15);
        isUgly(9);
        isUgly(45);
        isUgly(105);
        isUgly(25);
        isUgly(165);
    }
}



