public class BubbleSort { 
    
    //@ requires array != null;
    //@ requires x >= 0 && x < array.length;
    //@ requires y >= 0 && y < array.length;
    //@ ensures array[x] == \old(array[y]) && array[y] == \old(array[x]);
    void swap(int x, int y, int array[]) {
        int temp;     
        temp = array[x];
        array[x] = array[y];
        array[y] = temp;
    }

    //@ requires arr != null;
    //@ ensures \result != null && \result.length == arr.length;
    //@ ensures (\forall int i, j; 0 <= i && i < \result.length && 0 <= j && j < \result.length; \result[i] <= \result[j]);
    int[] bubbleSort(int arr[]) {
        int n = arr.length;

        //@ loop_invariant 0 <= i && i <= n-1;
        //@ loop_invariant (\forall int k; 0 <= k && k < i; (\forall int j; 0 <= j && j < n-k-1; arr[j+1] >= arr[j]));
        //@ decreases n-1 - i;
        for (int i = 0; i < n-1; i++) {	

            //@ loop_invariant 0 <= j && j <= n-i-1;
            //@ loop_invariant (\forall int k; 0 <= k && k < j; arr[k+1] >= arr[k]);
            //@ decreases n-i-1 - j;
            for (int j = 0; j < n-i-1; j++) {
                if (arr[j+1] < arr[j]) {  
                    swap(j, j + 1, arr); 
                } 
            }
        } 
        return arr;
    } 
}
