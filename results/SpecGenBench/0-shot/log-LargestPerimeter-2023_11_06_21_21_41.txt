import java.util.Arrays;

class LargestPerimeter {
    //@ requires A != null;
    //@ requires A.length >= 3;
    //@ ensures \result >= 0;
    //@ ensures \result == 0 || (\exists int i; 0 <= i < A.length - 2; A[i] + A[i+1] > A[i+2] && \result == A[i] + A[i+1] + A[i+2]);
    public int largestPerimeter(int[] A) {
        Arrays.sort(A);
        for (int i = A.length - 1; i >= 2; --i) {
            //@ loop_invariant 2 <= i && i <= A.length;
            //@ loop_invariant (\forall int j; i < j < A.length; A[j-2] + A[j-1] <= A[j]);
            //@ loop_invariant (\forall int j; i <= j < A.length; A[j-2] + A[j-1] > A[j] ==> \result == A[j-2] + A[j-1] + A[j]);
            if (A[i - 2] + A[i - 1] > A[i]) {
                return A[i - 2] + A[i - 1] + A[i];
            }
        }
        return 0;
    }
}
