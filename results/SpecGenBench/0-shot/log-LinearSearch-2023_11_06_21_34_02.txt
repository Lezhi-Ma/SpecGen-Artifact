public class LinearSearch {
    private static int location;

    //@ requires array != null;
    //@ ensures \result >= -1 && \result < array.length;
    public static int linearSearch(int search, int array[]) {
        int c;

        //@ loop_invariant c >= 0 && c <= array.length;
        //@ loop_invariant location >= -1 && location < array.length;
        //@ decreases array.length - c;
        for (c = 0; c < array.length; c++) {
            //@ loop_invariant c >= 0 && c <= array.length;
            //@ loop_invariant location >= -1 && location < array.length;
            //@ loop_invariant (\forall int i; 0 <= i < c; array[i] != search);
            //@ decreases array.length - c;
            if (array[c] == search) {
                location = c;
                break;
            }
        }

        //@ assert c == array.length || array[c] == search;
        //@ assert location >= -1 && location < array.length;
        if (c == array.length) {
            location = -1;
        }

        //@ assert location >= -1 && location < array.length;
        return location;
    }
}
