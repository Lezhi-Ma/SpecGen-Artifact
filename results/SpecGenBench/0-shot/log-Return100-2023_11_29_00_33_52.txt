public class Return100 {
    //@ ensures \result == 100;
    public static int return100 () {
        int res = 0;
        //@ maintaining res == (\sum int j; 0 <= j && j < i; 1);
        //@ decreasing 100 - i;
        for(int i = 0; i < 100; i++) {
            res = res + 1;
        }
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/Return100.java:5: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining res == (\sum int j; 0 <= j && j < i; 1);
                                ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining res == (\sum int j; 0 <= j && j < i; 1);
                                ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ maintaining res == (\sum int j; 0 <= j && j < i; 1);
                                ^
/home/max/Documents/JMLGPT/tmp/Return100.java:5: verify: The prover cannot establish an assertion (LoopInvariant) in method return100
        //@ maintaining res == (\sum int j; 0 <= j && j < i; 1);
            ^
3 warnings
1 verification failure

