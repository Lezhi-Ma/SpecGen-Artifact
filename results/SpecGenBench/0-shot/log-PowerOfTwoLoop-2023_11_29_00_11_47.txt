class PowerOfTwoLoop {
    //@ requires n >= Integer.MIN_VALUE && n <= Integer.MAX_VALUE;
    //@ ensures \result == (n > 0 && (\exists int i; i >= 0 && (\forall int j; j >= 0 && j < i; n % 2 == 0); n == 1));
    public boolean isPowerOfTwo(int n) {
        //@ loop_invariant n >= Integer.MIN_VALUE && n <= Integer.MAX_VALUE;
        //@ loop_invariant (\exists int i; i >= 0 && (\forall int j; j >= 0 && j < i; n % 2 == 0); n == 1) || (\forall int i; i >= 0 && (\exists int j; j >= 0 && j < i; n % 2 != 0); n != 1);
        //@ decreases n;
        while (n % 2 == 0) {
            //@ assert (\exists int i; i >= 0 && (\forall int j; j >= 0 && j < i; n % 2 == 0); n == 1) || (\forall int i; i >= 0 && (\exists int j; j >= 0 && j < i; n % 2 != 0); n != 1);
            n /= 2;
            //@ assert n >= Integer.MIN_VALUE && n <= Integer.MAX_VALUE;
        }
        return n == 1;
    }
}
/home/max/Documents/JMLGPT/tmp/PowerOfTwoLoop.java:7: verify: The prover cannot establish an assertion (LoopDecreasesNonNegative) in method isPowerOfTwo
        //@ decreases n;
            ^
1 verification failure

