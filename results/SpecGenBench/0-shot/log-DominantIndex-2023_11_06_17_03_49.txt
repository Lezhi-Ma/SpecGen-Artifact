class DominantIndex {
    
    //@ requires nums != null;
    //@ requires nums.length > 0;
    //@ ensures \result >= -1 && \result < nums.length;
    public int dominantIndex(int[] nums) {
        int m1 = -1, m2 = -1;
        int index = -1;

        //@ loop_invariant i >= 0 && i <= nums.length;
        //@ loop_invariant m1 >= -1 && m1 <= nums[i];
        //@ loop_invariant m2 >= -1 && m2 <= nums[i];
        //@ loop_invariant index >= -1 && index < i;
        //@ loop_variant nums.length - i;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > m1) {
                m2 = m1;
                m1 = nums[i];
                index = i;
            } else if (nums[i] > m2) {
                m2 = nums[i];
            }
        }

        //@ assert m1 >= -1 && m1 <= nums.length;
        //@ assert m2 >= -1 && m2 <= nums.length;
        //@ assert index >= -1 && index < nums.length;
        //@ assert m1 >= m2 * 2 ==> index >= 0;
        //@ assert m1 < m2 * 2 ==> index == -1;
        return m1 >= m2 * 2 ? index : -1;
    }
}
