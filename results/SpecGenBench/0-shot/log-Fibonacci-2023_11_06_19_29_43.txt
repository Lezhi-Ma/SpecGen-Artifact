public class Fibonacci {

	//@ requires n >= 0;
	//@ ensures \result >= 0;
	public static int fibCompute(int n) {
		if(n < 0) return -1;
		else if(n == 0) return 0;

		int[] fib = new int[n + 1];
		fib[0] = 0;
		fib[1] = 1;
		int index = 2;

		//@ maintaining index >= 2 && index <= fib.length;
		//@ maintaining (\forall int i; i >= 0 && i < index; fib[i] == fibCompute(i));
		//@ decreases fib.length - index;
		while (index < fib.length) {
			fib[index] = fib[index - 2] + fib[index - 1];
			index++;         
		}

		//@ assert fib[n] == fibCompute(n);
		return fib[n];
	}

}
