class IsSubsequence {
    //@ requires s != null && t != null;
    //@ ensures \result == true || \result == false;
    public boolean isSubsequence(String s, String t) {
        //@ assert s != null && t != null;
        int n = s.length(), m = t.length();
        int i = 0, j = 0;

        //@ loop_invariant 0 <= i <= n && 0 <= j <= m;
        //@ loop_invariant (\forall int k; 0 <= k < i; s.charAt(k) == t.charAt(k));
        //@ loop_invariant (\forall int k; i <= k < n; s.charAt(k) != t.charAt(j));
        //@ decreases n - i;
        while (i < n && j < m) {
            //@ assert 0 <= i <= n && 0 <= j <= m;
            //@ assert (\forall int k; 0 <= k < i; s.charAt(k) == t.charAt(k));
            //@ assert (\forall int k; i <= k < n; s.charAt(k) != t.charAt(j));
            if (s.charAt(i) == t.charAt(j)) {
                //@ assert 0 <= i <= n && 0 <= j <= m;
                //@ assert (\forall int k; 0 <= k < i; s.charAt(k) == t.charAt(k));
                //@ assert (\forall int k; i <= k < n; s.charAt(k) != t.charAt(j));
                i++;
            }
            j++;
            //@ assert 0 <= i <= n && 0 <= j <= m;
            //@ assert (\forall int k; 0 <= k < i; s.charAt(k) == t.charAt(k));
            //@ assert (\forall int k; i <= k < n; s.charAt(k) != t.charAt(j));
        }
        //@ assert 0 <= i <= n && 0 <= j <= m;
        //@ assert (\forall int k; 0 <= k < i; s.charAt(k) == t.charAt(k));
        //@ assert (\forall int k; i <= k < n; s.charAt(k) != t.charAt(j));
        //@ assert i == n || i != n;
        return i == n;
    }
}
