class DominantIndex {
    
    //@ requires nums != null;
    //@ ensures \result >= -1 && \result < nums.length;
    public int dominantIndex(int[] nums) {
        int m1 = -1, m2 = -1;
        int index = -1;

        //@ loop_invariant 0 <= i && i <= nums.length;
        //@ loop_invariant (\forall int j; 0 <= j && j < i; nums[j] <= m1);
        //@ loop_invariant (\forall int j; 0 <= j && j < i; nums[j] <= m2);
        //@ loop_invariant (\forall int j; 0 <= j && j < i; index == j ==> nums[j] == m1);
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > m1) {
                m2 = m1;
                m1 = nums[i];
                index = i;
            } else if (nums[i] > m2) {
                m2 = nums[i];
            }
        }

        //@ assert m1 >= m2 * 2 ==> index >= 0 && index < nums.length;
        //@ assert m1 < m2 * 2 ==> \result == -1;
        return m1 >= m2 * 2 ? index : -1;
    }
}
