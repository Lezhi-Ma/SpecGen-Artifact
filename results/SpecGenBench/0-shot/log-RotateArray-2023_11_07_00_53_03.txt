class RotateArray {

    //@ requires nums != null;
    //@ requires k >= 0;
    //@ requires nums.length > 0;
    //@ requires (\forall int i; 0 <= i && i < nums.length; nums[i] >= Integer.MIN_VALUE && nums[i] <= Integer.MAX_VALUE);
    //@ ensures (\forall int i; 0 <= i && i < nums.length; nums[i] == \old(nums[(i + k) % nums.length]));
    //@ ensures (\forall int i; 0 <= i && i < nums.length; \result[i] == \old(nums[(i + k) % nums.length]));
    public static void rotate(int[] nums, int k) {
        int n = nums.length;
        int[] newArr = new int[n];
        //@ loop_invariant 0 <= i && i <= n;
        //@ loop_invariant (\forall int j; 0 <= j && j < i; newArr[(j + k) % n] == nums[j]);
        //@ loop_invariant (\forall int j; i <= j && j < n; newArr[(j + k) % n] == 0);
        //@ decreases n - i;
        for (int i = 0; i < n; ++i) {
            newArr[(i + k) % n] = nums[i];
        }
        System.arraycopy(newArr, 0, nums, 0, n);
    }
}
