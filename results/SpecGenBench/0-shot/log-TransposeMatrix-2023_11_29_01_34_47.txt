public class TransposeMatrix {
 
    //@ requires matrix != null;
    //@ requires (\forall int i; 0 <= i && i < matrix.length; matrix[i] != null);
    //@ requires (\forall int i, j; 0 <= i && i < matrix.length && 0 <= j && j < matrix[i].length; matrix[i][j] >= Integer.MIN_VALUE && matrix[i][j] <= Integer.MAX_VALUE);
    //@ ensures \result != null;
    //@ ensures (\forall int i; 0 <= i && i < \result.length; \result[i] != null);
    //@ ensures (\forall int i, j; 0 <= i && i < \result.length && 0 <= j && j < \result[i].length; \result[i][j] == matrix[j][i]);
    public int[][] transposeMat(int[][] matrix) {
        int m, n, p, q;
        m = matrix.length;
        n = matrix[0].length;
        int[][] transpose = new int[n][m];

        //@ loop_invariant 0 <= c && c <= n;
        //@ loop_invariant (\forall int i, j; 0 <= i && i < c && 0 <= j && j < m; transpose[j][i] == matrix[i][j]);
        //@ loop_variant n - c;
        for (int c = 0; c < n; c++) {
            //@ loop_invariant 0 <= d && d <= m;
            //@ loop_invariant (\forall int i, j; 0 <= i && i < c && 0 <= j && j < d; transpose[j][i] == matrix[i][j]);
            //@ loop_variant m - d;
            for (int d = 0; d < m; d++) {
                transpose[c][d] = matrix[d][c];
            }
        }
        return transpose;
    }
}
/home/max/Documents/JMLGPT/tmp/TransposeMatrix.java:17: error: Expected loop specifications while in JML: loop_variant is not a loop specification keyword
        //@ loop_variant n - c;
            ^
/home/max/Documents/JMLGPT/tmp/TransposeMatrix.java:21: error: Expected loop specifications while in JML: loop_variant is not a loop specification keyword
            //@ loop_variant m - d;
                ^
2 errors

