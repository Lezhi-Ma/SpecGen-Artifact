public class MulNested {
    //@ requires true;
    //@ ensures \result == x * y;
    public static int mulNested(int x, int y) {
        int res = 0, m = x, n = y, sign = 1;
        
        //@ assume true; // assume the precondition
        
        if(x < 0){
            m = -x;
            sign = -sign;
        }
        
        if(y < 0){
            n = -y;
            sign = -sign;
        }
        
        //@ loop_invariant res == (\sum int k; 0 <= k && k < i; 1);
        //@ decreases m - i;
        for(int i = 0; i < m; i++) {
            
            //@ loop_invariant res == (\sum int k; 0 <= k && k < i; 1);
            //@ decreases n - j;
            for(int j = 0; j < n; j++) {
                res = res + 1;
            }
        }
        
        //@ assert res == (\sum int k; 0 <= k && k < m; n);
        //@ assert \result == sign * res;
        
        return sign * res;
    }
}
/home/max/Documents/JMLGPT/tmp/MulNested.java:31: error: A \result expression may not be in a assert clause
        //@ assert \result == sign * res;
                    ^
1 error

