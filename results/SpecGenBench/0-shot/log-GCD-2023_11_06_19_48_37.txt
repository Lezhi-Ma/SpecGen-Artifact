public class GCD {
	
	//@ requires true;
	//@ ensures \result >= 1;
	public static int gcd(int num1, int num2){
		int result = 1; 
	 	num1 = (0 <= num1) ? num1 : -num1;
		num2 = (0 <= num2) ? num2 : -num2;

		//@ assert num1 >= 0 && num2 >= 0;
		//@ assert num1 == 0 && num2 == 0 ==> \result == -1;
		//@ assert num1 == 0 || num2 == 0 ==> \result == (num1 > num2) ? num1 : num2;
		//@ assert \forall int i; 1 <= i && i <= num1 && i <= num2 ==> (num1 % i == 0 && num2 % i == 0) ==> result == i;

		for (int i = 1; i <= num1 && i <= num2; i++) {
            if (num1 % i == 0 && num2 % i == 0) {
       			result = i;
			}
        }
        
        //@ assert \result == result;
		return result;
	}
}
