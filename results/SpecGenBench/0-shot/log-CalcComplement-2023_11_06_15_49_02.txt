class CalcComplement {
    //@ ensures \result >= 0;
    //@ ensures (\forall int i; 0 <= i && i <= 30; (num < (1 << i)) ==> (\result == (num ^ ((1 << (i + 1)) - 1))));
    public int calcComplement(int num) {
        int highbit = 0;
        //@ loop_invariant 1 <= i && i <= 31;
        //@ loop_invariant highbit >= 0 && highbit <= 30;
        //@ loop_invariant (\forall int j; 0 <= j && j < i; (num < (1 << j)) ==> (highbit == j - 1));
        //@ decreases 30 - i;
        for (int i = 1; i <= 30; ++i) {
            if (num >= 1 << i) {
                highbit = i;
            } else {
                break;
            }            
        }
        int mask = highbit == 30 ? 0x7fffffff : (1 << (highbit + 1)) - 1;
        return num ^ mask;
    }
}
