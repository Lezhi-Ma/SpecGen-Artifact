public class ThreeConsecutiveOdds {

    //@ requires arr != null;
    //@ ensures \result == (\exists int i; 0 <= i && i <= arr.length - 3; (arr[i] % 2 != 0) && (arr[i + 1] % 2 != 0) && (arr[i + 2] % 2 != 0));
    public boolean threeConsecutiveOdds(int[] arr) {
        int n = arr.length;

        //@ loop_invariant 0 <= i && i <= n - 3;
        //@ loop_variant n - i;
        for (int i = 0; i <= n - 3; ++i) {
            //@ assert (\forall int j; 0 <= j && j < i; (arr[j] % 2 == 0));
            //@ assert (\forall int k; i <= k && k < i + 3; (arr[k] % 2 != 0));
            if ((arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0) {
                //@ assert (\exists int i; 0 <= i && i <= arr.length - 3; (arr[i] % 2 != 0) && (arr[i + 1] % 2 != 0) && (arr[i + 2] % 2 != 0));
                return true;
            }
        }
        //@ assert (\forall int i; 0 <= i && i <= arr.length - 3; (arr[i] % 2 == 0) || (arr[i + 1] % 2 == 0) || (arr[i + 2] % 2 == 0));
        return false;
    }
}
