import java.util.PriorityQueue;

class KthLargest {
    //@ requires nums != null;
    //@ requires k > 0 && k <= nums.length;
    //@ ensures \result >= 0;
    public static int kthLargest(int[] nums, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        
        //@ loop_invariant pq.size() <= k;
        //@ loop_invariant \forall int i; i >= 0 && i < pq.size(); pq.peek() <= pq.toArray()[i];
        //@ loop_modifies pq;
        for (int x : nums) {
            pq.offer(x);
            if (pq.size() > k) {
                pq.poll();
            }
        }

        //@ assert pq.size() == k;
        return pq.peek();
    }
}
