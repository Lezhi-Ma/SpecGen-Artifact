public class AddTwoLoop {
    //@ requires true;
    //@ ensures \result == a + b;
    public static int add(int a, int b) {
        int m = ((a < 0) ? -a : a);
        int n = ((b < 0) ? -b : b);
        int res = 0;
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
        //@ decreases m - i;
        for(int i = 0; i < m; i++){
            res = res + ((a < 0) ? -1 : 1);
        }
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
        //@ decreases n - i;
        for(int i = 0; i < n; i++){
            res = res + ((b < 0) ? -1 : 1);
        }
        //@ assert res == a + b;
        return res;
    }
}
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                       ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:13: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
        //@ loop_invariant 0 <= i && i <= n && res == (\sum int k; 0 <= k && k < m; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < i; ((b < 0) ? -1 : 1));
                                                                                                           ^
/home/max/Documents/JMLGPT/tmp/AddTwoLoop.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method add
        //@ loop_invariant 0 <= i && i <= m && res == (\sum int k; 0 <= k && k < i; ((a < 0) ? -1 : 1)) + (\sum int k; 0 <= k && k < n; ((b < 0) ? -1 : 1));
            ^
12 warnings
1 verification failure

