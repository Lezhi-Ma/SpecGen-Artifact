public class PrimeNumbers
{
    private static boolean div(int n, int d) 
    {
        // JML specification for div method
        //@ requires d != 0;
        //@ ensures \result == (n % d == 0);
        
        return n % d == 0; 
    }

    private int primeArray[];
    
    public int[] primeList(int n)
    {
        // JML specification for primeList method
        //@ requires n > 0;
        //@ ensures \result != null && \result.length == n;
        //@ ensures (\forall int i; 0 <= i && i < n; isPrime(\result[i]));
        
        int status = 1, num = 3, count, j;
        primeArray = new int[n];
        primeArray[0] = 2;

        for (count = 2; count <= n;)
        { 
            for (j = 2; j <= num/2; j++)
            { 
                if (div(num,j))
                {
                    status = 0;
                    break;
                }
            }

            if (status != 0)
            {  
                primeArray[count - 1] = num;
                count++;
            }
            status = 1;
            num++;
        } 
        return primeArray; 
    }
}
