class IsOneBitCharacter {
    //@ requires bits != null;
    //@ ensures \result == true || \result == false;
    public boolean isOneBitCharacter(int[] bits) {
        //@ assert bits != null;
        
        int n = bits.length, i = 0;
        
        //@ loop_invariant 0 <= i && i <= n;
        //@ loop_invariant (\forall int k; 0 <= k && k < i; bits[k] == 0 || bits[k] == 1);
        //@ loop_modifies i;
        while (i < n - 1) {
            //@ assert 0 <= i && i <= n - 1;
            //@ assert (\forall int k; 0 <= k && k < i; bits[k] == 0 || bits[k] == 1);
            //@ assert bits[i] == 0 || bits[i] == 1;
            //@ assert i + bits[i] + 1 >= 0 && i + bits[i] + 1 <= n;
            i += bits[i] + 1;
            //@ assert 0 <= i && i <= n;
            //@ assert (\forall int k; 0 <= k && k < i; bits[k] == 0 || bits[k] == 1);
        }
        
        //@ assert i >= n - 1;
        //@ assert (\forall int k; 0 <= k && k < n - 1; bits[k] == 0 || bits[k] == 1);
        //@ assert i == n - 1 || i > n - 1;
        return i == n - 1;
    }
}
